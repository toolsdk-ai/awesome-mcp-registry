{
  "@kazuph/mcp-screenshot": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kazuph-mcp-screenshot.json",
    "validated": true,
    "tools": {
      "capture": {
        "name": "capture",
        "description": "Captures a screenshot of the specified region and performs OCR. Options:\n- region: 'left'/'right'/'full' (default: 'left')\n- format: 'json'/'markdown'/'vertical'/'horizontal' (default: 'markdown')\nThe screenshot is saved to a dated directory in Downloads."
      }
    }
  },
  "@URDJMK/serpapi-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/serpapi-mcp-server.json"
  },
  "@modelcontextprotocol/server-everything": {
    "category": "aggregators",
    "path": "aggregators/modelcontextprotocol-server-everything.json",
    "validated": true,
    "tools": {
      "echo": {
        "name": "echo",
        "description": "Echoes back the input"
      },
      "add": {
        "name": "add",
        "description": "Adds two numbers"
      },
      "printEnv": {
        "name": "printEnv",
        "description": "Prints all environment variables, helpful for debugging MCP server configuration"
      },
      "longRunningOperation": {
        "name": "longRunningOperation",
        "description": "Demonstrates a long running operation with progress updates"
      },
      "sampleLLM": {
        "name": "sampleLLM",
        "description": "Samples from an LLM using MCP's sampling feature"
      },
      "getTinyImage": {
        "name": "getTinyImage",
        "description": "Returns the MCP_TINY_IMAGE"
      },
      "annotatedMessage": {
        "name": "annotatedMessage",
        "description": "Demonstrates how annotations can be used to provide metadata about content"
      },
      "getResourceReference": {
        "name": "getResourceReference",
        "description": "Returns a resource reference that can be used by MCP clients"
      }
    }
  },
  "@modelcontextprotocol/server-everart": {
    "category": "art-and-culture",
    "path": "art-and-culture/modelcontextprotocol-server-everart.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-stability-ai": {
    "category": "art-and-culture",
    "path": "art-and-culture/mcp-server-stability-ai.json",
    "validated": true,
    "tools": {
      "stability-ai-generate-image": {
        "name": "stability-ai-generate-image",
        "description": "Generate an image of anything based on a provided prompt."
      },
      "stability-ai-generate-image-sd35": {
        "name": "stability-ai-generate-image-sd35",
        "description": "Generate an image using Stable Diffusion 3.5 models with advanced configuration options."
      },
      "stability-ai-remove-background": {
        "name": "stability-ai-remove-background",
        "description": "Remove the background from an image."
      },
      "stability-ai-outpaint": {
        "name": "stability-ai-outpaint",
        "description": "Extends an image in any direction while maintaining visual consistency."
      },
      "stability-ai-search-and-replace": {
        "name": "stability-ai-search-and-replace",
        "description": "Replace objects or elements in an image by describing what to replace and what to replace it with."
      },
      "stability-ai-upscale-fast": {
        "name": "stability-ai-upscale-fast",
        "description": "Cheap and fast tool to enhance image resolution by 4x."
      },
      "stability-ai-upscale-creative": {
        "name": "stability-ai-upscale-creative",
        "description": "Enhance image resolution up to 4K using AI with creative interpretation. This tool works best on highly degraded images and performs heavy reimagining. In general, don't use this (expensive) tool unless specifically asked to do so, usually after trying stability-ai-upscale-fast first."
      },
      "stability-ai-control-sketch": {
        "name": "stability-ai-control-sketch",
        "description": "Translate hand-drawn sketches to production-grade images."
      },
      "stability-ai-0-list-resources": {
        "name": "stability-ai-0-list-resources",
        "description": "Use this to check for files before deciding you don't have access to a file or image or resource. It pulls in a list of all of user's available Resources (i.e. image files and their URI's) so we can reference pre-existing images to manipulate or upload to Stability AI."
      },
      "stability-ai-search-and-recolor": {
        "name": "stability-ai-search-and-recolor",
        "description": "Search and recolor object(s) in an image"
      },
      "stability-ai-replace-background-and-relight": {
        "name": "stability-ai-replace-background-and-relight",
        "description": "Replace background and adjust lighting of an image"
      },
      "stability-ai-control-style": {
        "name": "stability-ai-control-style",
        "description": "Generate a new image in the style of a reference image"
      },
      "stability-ai-control-structure": {
        "name": "stability-ai-control-structure",
        "description": "Generate a new image while maintaining the structure of a reference image"
      }
    }
  },
  "@executeautomation/playwright-mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/executeautomation-playwright-mcp-server.json",
    "validated": true,
    "tools": {
      "start_codegen_session": {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions"
      },
      "end_codegen_session": {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file"
      },
      "get_codegen_session": {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session"
      },
      "clear_codegen_session": {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test"
      },
      "playwright_navigate": {
        "name": "playwright_navigate",
        "description": "Navigate to a URL"
      },
      "playwright_screenshot": {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element"
      },
      "playwright_click": {
        "name": "playwright_click",
        "description": "Click an element on the page"
      },
      "playwright_iframe_click": {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page"
      },
      "playwright_iframe_fill": {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page"
      },
      "playwright_fill": {
        "name": "playwright_fill",
        "description": "fill out an input field"
      },
      "playwright_select": {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag"
      },
      "playwright_hover": {
        "name": "playwright_hover",
        "description": "Hover an element on the page"
      },
      "playwright_upload_file": {
        "name": "playwright_upload_file",
        "description": "Upload a file to an input[type='file'] element on the page"
      },
      "playwright_evaluate": {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console"
      },
      "playwright_console_logs": {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options"
      },
      "playwright_close": {
        "name": "playwright_close",
        "description": "Close the browser and release all resources"
      },
      "playwright_get": {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request"
      },
      "playwright_post": {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request"
      },
      "playwright_put": {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request"
      },
      "playwright_patch": {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request"
      },
      "playwright_delete": {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request"
      },
      "playwright_expect_response": {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion."
      },
      "playwright_assert_response": {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation."
      },
      "playwright_custom_user_agent": {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser"
      },
      "playwright_get_visible_text": {
        "name": "playwright_get_visible_text",
        "description": "Get the visible text content of the current page"
      },
      "playwright_get_visible_html": {
        "name": "playwright_get_visible_html",
        "description": "Get the HTML content of the current page. By default, all <script> tags are removed from the output unless removeScripts is explicitly set to false."
      },
      "playwright_go_back": {
        "name": "playwright_go_back",
        "description": "Navigate back in browser history"
      },
      "playwright_go_forward": {
        "name": "playwright_go_forward",
        "description": "Navigate forward in browser history"
      },
      "playwright_drag": {
        "name": "playwright_drag",
        "description": "Drag an element to a target location"
      },
      "playwright_press_key": {
        "name": "playwright_press_key",
        "description": "Press a keyboard key"
      },
      "playwright_save_as_pdf": {
        "name": "playwright_save_as_pdf",
        "description": "Save the current page as a PDF file"
      },
      "playwright_click_and_switch_tab": {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab"
      }
    }
  },
  "tavily-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/tavily-mcp.json",
    "validated": true,
    "tools": {
      "tavily-search": {
        "name": "tavily-search",
        "description": "A powerful web search tool that provides comprehensive, real-time results using Tavily's AI search engine. Returns relevant web content with customizable parameters for result count, content type, and domain filtering. Ideal for gathering current information, news, and detailed web content analysis."
      },
      "tavily-extract": {
        "name": "tavily-extract",
        "description": "A powerful web content extraction tool that retrieves and processes raw content from specified URLs, ideal for data collection, content analysis, and research tasks."
      },
      "tavily-crawl": {
        "name": "tavily-crawl",
        "description": "A powerful web crawler that initiates a structured web crawl starting from a specified base URL. The crawler expands from that point like a tree, following internal links across pages. You can control how deep and wide it goes, and guide it to focus on specific sections of the site."
      },
      "tavily-map": {
        "name": "tavily-map",
        "description": "A powerful web mapping tool that creates a structured map of website URLs, allowing you to discover and analyze site structure, content organization, and navigation paths. Perfect for site audits, content discovery, and understanding website architecture."
      }
    }
  },
  "@automatalabs/mcp-server-playwright": {
    "category": "browser-automation",
    "path": "browser-automation/automatalabs-mcp-server-playwright.json",
    "validated": true,
    "tools": {
      "browser_navigate": {
        "name": "browser_navigate",
        "description": "Navigate to a URL"
      },
      "browser_screenshot": {
        "name": "browser_screenshot",
        "description": "Take a screenshot of the current page or a specific element"
      },
      "browser_click": {
        "name": "browser_click",
        "description": "Click an element on the page using CSS selector"
      },
      "browser_click_text": {
        "name": "browser_click_text",
        "description": "Click an element on the page by its text content"
      },
      "browser_fill": {
        "name": "browser_fill",
        "description": "Fill out an input field"
      },
      "browser_select": {
        "name": "browser_select",
        "description": "Select an element on the page with Select tag using CSS selector"
      },
      "browser_select_text": {
        "name": "browser_select_text",
        "description": "Select an element on the page with Select tag by its text content"
      },
      "browser_hover": {
        "name": "browser_hover",
        "description": "Hover an element on the page using CSS selector"
      },
      "browser_hover_text": {
        "name": "browser_hover_text",
        "description": "Hover an element on the page by its text content"
      },
      "browser_evaluate": {
        "name": "browser_evaluate",
        "description": "Execute JavaScript in the browser console"
      }
    }
  },
  "hyperbrowser-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/hyperbrowser-mcp.json",
    "validated": true,
    "tools": {
      "scrape_webpage": {
        "name": "scrape_webpage",
        "description": "Scrape a webpage and extract its content in various formats. This tool allows fetching content from a single URL with configurable browser behavior options. Use this for extracting text content, HTML structure, collecting links, or capturing screenshots of webpages."
      },
      "crawl_webpages": {
        "name": "crawl_webpages",
        "description": "Crawl a website starting from a URL and explore linked pages. This tool allows systematic collection of content from multiple pages within a domain. Use this for larger data collection tasks, content indexing, or site mapping."
      },
      "extract_structured_data": {
        "name": "extract_structured_data",
        "description": "Extract structured data from a webpage. This tool allows you to extract structured data from a webpage using a schema."
      },
      "browser_use_agent": {
        "name": "browser_use_agent",
        "description": "This tool employs an open-source browser automation agent optimized specifically for fast, efficient, and cost-effective browser tasks using a cloud browser. It requires explicit, detailed instructions to perform highly specific interactions quickly.\n\nOptimal for tasks requiring:\n- Precise, explicitly defined interactions and actions\n- Speed and efficiency with clear, unambiguous instructions\n- Cost-effective automation at scale with straightforward workflows\n\nBest suited use cases include:\n- Explicitly defined registration and login processes\n- Clearly guided navigation through web apps\n- Structured, step-by-step web scraping with detailed guidance\n- Extracting data via explicitly specified browser interactions\n\nYou must provide extremely detailed step-by-step instructions, including exact elements, actions, and explicit context. Clearly define the desired outcome for optimal results. Returns the completed result or an error message if issues arise.\n\nNote: This agent trades off flexibility for significantly faster performance and lower costs compared to Claude and OpenAI agents."
      },
      "openai_computer_use_agent": {
        "name": "openai_computer_use_agent",
        "description": "This tool utilizes OpenAI's model to autonomously execute general-purpose browser-based tasks with balanced performance and reliability using a cloud browser. It handles complex interactions effectively with practical reasoning and clear execution.\n\nOptimal for tasks requiring:\n- Reliable, general-purpose browser automation\n- Clear, structured interactions with moderate complexity\n- Efficient handling of common web tasks and workflows\n\nBest suited use cases include:\n- Standard multi-step registration or form submissions\n- Navigating typical web applications requiring multiple interactions\n- Conducting structured web research tasks\n- Extracting data through interactive web processes\n\nProvide a clear step-by-step description, necessary context, and expected outcomes. Returns the completed result or an error message if issues arise."
      },
      "claude_computer_use_agent": {
        "name": "claude_computer_use_agent",
        "description": "This tool leverages Anthropic's Claude model to autonomously execute complex browser tasks with sophisticated reasoning capabilities using a cloud browser. It specializes in handling intricate, nuanced, or highly context-sensitive web interactions.\n\nOptimal for tasks requiring:\n- Complex reasoning over multiple web pages\n- Nuanced interpretation and flexible decision-making\n- Human-like interaction with detailed context awareness\n\nBest suited use cases include:\n- Multi-step processes requiring reasoning (e.g., detailed registrations or onboarding)\n- Interacting intelligently with advanced web apps\n- Conducting in-depth research with complex conditions\n- Extracting information from dynamic or interactive websites\n\nProvide detailed task instructions, relevant context, and clearly specify the desired outcome for best results. Returns the completed result or an error message if issues arise."
      },
      "search_with_bing": {
        "name": "search_with_bing",
        "description": "Search the web using Bing. This tool allows you to search the web using bing.com"
      },
      "create_profile": {
        "name": "create_profile",
        "description": "Creates a new persistent Hyperbrowser profile."
      },
      "delete_profile": {
        "name": "delete_profile",
        "description": "Deletes an existing persistent Hyperbrowser profile."
      },
      "list_profiles": {
        "name": "list_profiles",
        "description": "Lists existing persistent Hyperbrowser profiles, with optional pagination."
      }
    }
  },
  "exa-mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/exa-mcp-server.json",
    "validated": true,
    "tools": {
      "web_search_exa": {
        "name": "web_search_exa",
        "description": "Search the web using Exa AI - performs real-time web searches and can scrape content from specific URLs. Supports configurable result counts and returns the content from the most relevant websites."
      },
      "research_paper_search": {
        "name": "research_paper_search",
        "description": "Search across 100M+ research papers with full text access using Exa AI - performs targeted academic paper searches with deep research content coverage. Returns detailed information about relevant academic papers including titles, authors, publication dates, and full text excerpts. Control the number of results and character counts returned to balance comprehensiveness with conciseness based on your task requirements."
      },
      "company_research": {
        "name": "company_research",
        "description": "Research companies using Exa AI - performs targeted searches of company websites to gather comprehensive information about businesses. Returns detailed information from company websites including about pages, pricing, FAQs, blogs, and other relevant content. Specify the company URL and optionally target specific sections of their website."
      },
      "crawling": {
        "name": "crawling",
        "description": "Extract content from specific URLs using Exa AI - performs targeted crawling of web pages to retrieve their full content. Useful for reading articles, PDFs, or any web page when you have the exact URL. Returns the complete text content of the specified URL."
      },
      "competitor_finder": {
        "name": "competitor_finder",
        "description": "Find competitors of a company using Exa AI - performs targeted searches to identify businesses that offer similar products or services. Describe what the company does (without mentioning its name) and optionally provide the company's website to exclude it from results."
      },
      "linkedin_search": {
        "name": "linkedin_search",
        "description": "Search LinkedIn for companies using Exa AI. Simply include company URL, or company name, with 'company page' appended in your query."
      },
      "wikipedia_search_exa": {
        "name": "wikipedia_search_exa",
        "description": "Search Wikipedia using Exa AI - performs searches specifically within Wikipedia.org and returns relevant content from Wikipedia pages."
      },
      "github_search": {
        "name": "github_search",
        "description": "Search GitHub repositories using Exa AI - performs real-time searches on GitHub.com to find relevant repositories and GitHub accounts."
      }
    }
  },
  "mcp-server-fetch": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-server-fetch.json"
  },
  "@modelcontextprotocol/server-puppeteer": {
    "category": "browser-automation",
    "path": "browser-automation/modelcontextprotocol-server-puppeteer.json",
    "validated": true,
    "tools": {
      "puppeteer_navigate": {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL"
      },
      "puppeteer_screenshot": {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element"
      },
      "puppeteer_click": {
        "name": "puppeteer_click",
        "description": "Click an element on the page"
      },
      "puppeteer_fill": {
        "name": "puppeteer_fill",
        "description": "Fill out an input field"
      },
      "puppeteer_select": {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag"
      },
      "puppeteer_hover": {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page"
      },
      "puppeteer_evaluate": {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console"
      }
    }
  },
  "kubernetes-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubernetes-mcp-server.json"
  },
  "@cloudflare/mcp-server-cloudflare": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloudflare-mcp-server-cloudflare.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-kubernetes": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/mcp-server-kubernetes.json",
    "validated": true,
    "tools": {
      "cleanup": {
        "name": "cleanup",
        "description": "Cleanup all managed resources"
      },
      "kubectl_get": {
        "name": "kubectl_get",
        "description": "Get or list Kubernetes resources by resource type, name, and optionally namespace"
      },
      "kubectl_describe": {
        "name": "kubectl_describe",
        "description": "Describe Kubernetes resources by resource type, name, and optionally namespace"
      },
      "kubectl_apply": {
        "name": "kubectl_apply",
        "description": "Apply a Kubernetes YAML manifest from a string or file"
      },
      "kubectl_delete": {
        "name": "kubectl_delete",
        "description": "Delete Kubernetes resources by resource type, name, labels, or from a manifest file"
      },
      "kubectl_create": {
        "name": "kubectl_create",
        "description": "Create Kubernetes resources using various methods (from file or using subcommands)"
      },
      "kubectl_logs": {
        "name": "kubectl_logs",
        "description": "Get logs from Kubernetes resources like pods, deployments, or jobs"
      },
      "kubectl_scale": {
        "name": "kubectl_scale",
        "description": "Scale a Kubernetes deployment"
      },
      "kubectl_patch": {
        "name": "kubectl_patch",
        "description": "Update field(s) of a resource using strategic merge patch, JSON merge patch, or JSON patch"
      },
      "kubectl_rollout": {
        "name": "kubectl_rollout",
        "description": "Manage the rollout of a resource (e.g., deployment, daemonset, statefulset)"
      },
      "kubectl_context": {
        "name": "kubectl_context",
        "description": "Manage Kubernetes contexts - list, get, or set the current context"
      },
      "explain_resource": {
        "name": "explain_resource",
        "description": "Get documentation for a Kubernetes resource or field"
      },
      "install_helm_chart": {
        "name": "install_helm_chart",
        "description": "Install a Helm chart"
      },
      "upgrade_helm_chart": {
        "name": "upgrade_helm_chart",
        "description": "Upgrade a Helm release"
      },
      "uninstall_helm_chart": {
        "name": "uninstall_helm_chart",
        "description": "Uninstall a Helm release"
      },
      "port_forward": {
        "name": "port_forward",
        "description": "Forward a local port to a port on a Kubernetes resource"
      },
      "stop_port_forward": {
        "name": "stop_port_forward",
        "description": "Stop a port-forward process"
      },
      "exec_in_pod": {
        "name": "exec_in_pod",
        "description": "Execute a command in a Kubernetes pod or container and return the output"
      },
      "list_api_resources": {
        "name": "list_api_resources",
        "description": "List the API resources available in the cluster"
      },
      "kubectl_generic": {
        "name": "kubectl_generic",
        "description": "Execute any kubectl command with the provided arguments and flags"
      },
      "ping": {
        "name": "ping",
        "description": "Verify that the counterpart is still responsive and the connection is alive."
      }
    }
  },
  "@strowk/mcp-k8s": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/strowk-mcp-k8s.json",
    "validated": true,
    "tools": {
      "get-k8s-pod-logs": {
        "name": "get-k8s-pod-logs",
        "description": "Get logs for a Kubernetes pod using specific context in a specified namespace"
      },
      "get-k8s-resource": {
        "name": "get-k8s-resource",
        "description": "Get details of any Kubernetes resource like pod, node or service - completely as JSON or rendered using template"
      },
      "k8s-pod-exec": {
        "name": "k8s-pod-exec",
        "description": "Execute command in Kubernetes pod"
      },
      "list-k8s-contexts": {
        "name": "list-k8s-contexts",
        "description": "List Kubernetes contexts from configuration files such as kubeconfig"
      },
      "list-k8s-events": {
        "name": "list-k8s-events",
        "description": "List Kubernetes events using specific context in a specified namespace"
      },
      "list-k8s-namespaces": {
        "name": "list-k8s-namespaces",
        "description": "List Kubernetes namespaces using specific context"
      },
      "list-k8s-nodes": {
        "name": "list-k8s-nodes",
        "description": "List Kubernetes nodes using specific context"
      },
      "list-k8s-resources": {
        "name": "list-k8s-resources",
        "description": "List arbitrary Kubernetes resources"
      }
    }
  },
  "mcp-server-make": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-make.json"
  },
  "mcp-shell": {
    "category": "command-line",
    "path": "command-line/mcp-shell.json",
    "validated": true,
    "tools": {
      "run_command": {
        "name": "run_command",
        "description": "Run a shell command"
      }
    }
  },
  "mcp-server-commands": {
    "category": "command-line",
    "path": "command-line/mcp-server-commands.json",
    "validated": true,
    "tools": {
      "run_command": {
        "name": "run_command",
        "description": "Run a command on this linux machine"
      }
    }
  },
  "@gongrzhe/server-gmail-autoauth-mcp": {
    "category": "communication",
    "path": "communication/gongrzhe-server-gmail-autoauth-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@enescinar/twitter-mcp": {
    "category": "communication",
    "path": "communication/enescinar-twitter-mcp.json",
    "validated": true,
    "tools": {
      "post_tweet": {
        "name": "post_tweet",
        "description": "Post a new tweet to Twitter"
      },
      "search_tweets": {
        "name": "search_tweets",
        "description": "Search for tweets on Twitter"
      }
    }
  },
  "@modelcontextprotocol/server-slack": {
    "category": "communication",
    "path": "communication/modelcontextprotocol-server-slack.json",
    "validated": true,
    "tools": {
      "slack_list_channels": {
        "name": "slack_list_channels",
        "description": "List public or pre-defined channels in the workspace with pagination"
      },
      "slack_post_message": {
        "name": "slack_post_message",
        "description": "Post a new message to a Slack channel"
      },
      "slack_reply_to_thread": {
        "name": "slack_reply_to_thread",
        "description": "Reply to a specific message thread in Slack"
      },
      "slack_add_reaction": {
        "name": "slack_add_reaction",
        "description": "Add a reaction emoji to a message"
      },
      "slack_get_channel_history": {
        "name": "slack_get_channel_history",
        "description": "Get recent messages from a channel"
      },
      "slack_get_thread_replies": {
        "name": "slack_get_thread_replies",
        "description": "Get all replies in a message thread"
      },
      "slack_get_users": {
        "name": "slack_get_users",
        "description": "Get a list of all users in the workspace with their basic profile information"
      },
      "slack_get_user_profile": {
        "name": "slack_get_user_profile",
        "description": "Get detailed profile information for a specific user"
      }
    }
  },
  "mcp-mongo-server": {
    "category": "databases",
    "path": "databases/mcp-mongo-server.json",
    "validated": false,
    "tools": {}
  },
  "airtable-mcp-server": {
    "category": "databases",
    "path": "databases/airtable-mcp-server.json",
    "validated": true,
    "tools": {
      "list_records": {
        "name": "list_records",
        "description": "List records from a table"
      },
      "search_records": {
        "name": "search_records",
        "description": "Search for records containing specific text"
      },
      "list_bases": {
        "name": "list_bases",
        "description": "List all accessible Airtable bases"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List all tables in a specific base"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Get detailed information about a specific table"
      },
      "get_record": {
        "name": "get_record",
        "description": "Get a specific record by ID"
      },
      "create_record": {
        "name": "create_record",
        "description": "Create a new record in a table"
      },
      "update_records": {
        "name": "update_records",
        "description": "Update up to 10 records in a table"
      },
      "delete_records": {
        "name": "delete_records",
        "description": "Delete records from a table"
      },
      "create_table": {
        "name": "create_table",
        "description": "Create a new table in a base"
      },
      "update_table": {
        "name": "update_table",
        "description": "Update a table's name or description"
      },
      "create_field": {
        "name": "create_field",
        "description": "Create a new field in a table"
      },
      "update_field": {
        "name": "update_field",
        "description": "Update a field's name or description"
      }
    }
  },
  "@benborla29/mcp-server-mysql": {
    "category": "databases",
    "path": "databases/benborla29-mcp-server-mysql.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-postgres": {
    "category": "databases",
    "path": "databases/modelcontextprotocol-server-postgres.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-sqlite": {
    "category": "databases",
    "path": "databases/mcp-server-sqlite.json"
  },
  "@niledatabase/nile-mcp-server": {
    "category": "databases",
    "path": "databases/niledatabase-nile-mcp-server.json",
    "validated": true,
    "tools": {
      "list-resources": {
        "name": "list-resources",
        "description": "Lists all tables and their descriptions in the specified database"
      },
      "create-database": {
        "name": "create-database",
        "description": "Creates a new Nile database"
      },
      "list-databases": {
        "name": "list-databases",
        "description": "Lists all databases in the workspace"
      },
      "get-database": {
        "name": "get-database",
        "description": "Gets details of a specific database"
      },
      "delete-database": {
        "name": "delete-database",
        "description": "Deletes a database"
      },
      "get-connection-string": {
        "name": "get-connection-string",
        "description": "Gets a PostgreSQL connection string with fresh credentials"
      },
      "execute-sql": {
        "name": "execute-sql",
        "description": "Executes a SQL query on a Nile database"
      },
      "create-tenant": {
        "name": "create-tenant",
        "description": "Creates a new tenant in the specified database"
      },
      "delete-tenant": {
        "name": "delete-tenant",
        "description": "Deletes a tenant from the specified database"
      },
      "list-tenants": {
        "name": "list-tenants",
        "description": "Lists all tenants in the specified database"
      },
      "read-resource": {
        "name": "read-resource",
        "description": "Gets detailed schema information for a specific table"
      }
    }
  },
  "mcp-tinybird": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-tinybird.json"
  },
  "mcp-server-aidd": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-aidd.json"
  },
  "mcp-openapi-schema-explorer": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-openapi-schema-explorer.json",
    "validated": false,
    "tools": {}
  },
  "@llmindset/mcp-hfspace": {
    "category": "developer-tools",
    "path": "developer-tools/llmindset-mcp-hfspace.json",
    "validated": false,
    "tools": {}
  },
  "@mcp-get-community/server-macos": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-get-community-server-macos.json",
    "validated": true,
    "tools": {
      "systemInfo": {
        "name": "systemInfo",
        "description": "Retrieve system information from macOS using various system commands"
      },
      "sendNotification": {
        "name": "sendNotification",
        "description": "Send a native macOS notification"
      }
    }
  },
  "hackmd-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/hackmd-mcp.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-tree-sitter": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-tree-sitter.json"
  },
  "docker-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/docker-mcp.json"
  },
  "awslabs.nova-canvas-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/awslabs.nova-canvas-mcp-server.json"
  },
  "@mcp-get-community/server-llm-txt": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-get-community-server-llm-txt.json",
    "validated": true,
    "tools": {
      "get_llm_txt": {
        "name": "get_llm_txt",
        "description": "Fetch an LLM.txt file from a given URL. Format your response in beautiful markdown."
      },
      "list_llm_txt": {
        "name": "list_llm_txt",
        "description": "List available LLM.txt files from the directory. Use this first before fetching a specific LLM.txt file. Format your response in beautiful markdown."
      },
      "search_llm_txt": {
        "name": "search_llm_txt",
        "description": "Search for multiple substrings in an LLM.txt file. Requires a valid ID obtained from list_llm_txt command. Returns snippets with page numbers for each match. Format your response in beautiful markdown, using code blocks for snippets."
      }
    }
  },
  "mcp-solver": {
    "category": "data-science-tools",
    "path": "data-science-tools/mcp-solver.json"
  },
  "@modelcontextprotocol/server-gdrive": {
    "category": "file-systems",
    "path": "file-systems/modelcontextprotocol-server-gdrive.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-filesystem": {
    "category": "file-systems",
    "path": "file-systems/modelcontextprotocol-server-filesystem.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-memory": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/modelcontextprotocol-server-memory.json",
    "validated": true,
    "tools": {
      "create_entities": {
        "name": "create_entities",
        "description": "Create multiple new entities in the knowledge graph"
      },
      "create_relations": {
        "name": "create_relations",
        "description": "Create multiple new relations between entities in the knowledge graph. Relations should be in active voice"
      },
      "add_observations": {
        "name": "add_observations",
        "description": "Add new observations to existing entities in the knowledge graph"
      },
      "delete_entities": {
        "name": "delete_entities",
        "description": "Delete multiple entities and their associated relations from the knowledge graph"
      },
      "delete_observations": {
        "name": "delete_observations",
        "description": "Delete specific observations from entities in the knowledge graph"
      },
      "delete_relations": {
        "name": "delete_relations",
        "description": "Delete multiple relations from the knowledge graph"
      },
      "read_graph": {
        "name": "read_graph",
        "description": "Read the entire knowledge graph"
      },
      "search_nodes": {
        "name": "search_nodes",
        "description": "Search for nodes in the knowledge graph based on a query"
      },
      "open_nodes": {
        "name": "open_nodes",
        "description": "Open specific nodes in the knowledge graph by their names"
      }
    }
  },
  "mcp-rememberizer-vectordb": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-rememberizer-vectordb.json"
  },
  "mcp-server-rememberizer": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-server-rememberizer.json"
  },
  "@modelcontextprotocol/server-google-maps": {
    "category": "location-services",
    "path": "location-services/modelcontextprotocol-server-google-maps.json",
    "validated": true,
    "tools": {
      "maps_geocode": {
        "name": "maps_geocode",
        "description": "Convert an address into geographic coordinates"
      },
      "maps_reverse_geocode": {
        "name": "maps_reverse_geocode",
        "description": "Convert coordinates into an address"
      },
      "maps_search_places": {
        "name": "maps_search_places",
        "description": "Search for places using Google Places API"
      },
      "maps_place_details": {
        "name": "maps_place_details",
        "description": "Get detailed information about a specific place"
      },
      "maps_distance_matrix": {
        "name": "maps_distance_matrix",
        "description": "Calculate travel distance and time for multiple origins and destinations"
      },
      "maps_elevation": {
        "name": "maps_elevation",
        "description": "Get elevation data for locations on the earth"
      },
      "maps_directions": {
        "name": "maps_directions",
        "description": "Get directions between two points"
      }
    }
  },
  "@raygun.io/mcp-server-raygun": {
    "category": "monitoring",
    "path": "monitoring/raygun-io-mcp-server-raygun.json",
    "validated": true,
    "tools": {
      "list_applications": {
        "name": "list_applications",
        "description": "List all applications under the users account on Raygun"
      },
      "get_application": {
        "name": "get_application",
        "description": "Get application by identifier"
      },
      "get_application_by_api_key": {
        "name": "get_application_by_api_key",
        "description": "Get application by API key"
      },
      "regenerate_application_api_key": {
        "name": "regenerate_application_api_key",
        "description": "Regenerate application API key"
      },
      "list_customers": {
        "name": "list_customers",
        "description": "List customers for an application"
      },
      "list_deployments": {
        "name": "list_deployments",
        "description": "List deployments for an application"
      },
      "get_deployment": {
        "name": "get_deployment",
        "description": "Get deployment by identifier"
      },
      "delete_deployment": {
        "name": "delete_deployment",
        "description": "Delete deployment"
      },
      "update_deployment": {
        "name": "update_deployment",
        "description": "Update deployment details"
      },
      "reprocess_deployment_commits": {
        "name": "reprocess_deployment_commits",
        "description": "Reprocess deployment commits"
      },
      "list_error_groups": {
        "name": "list_error_groups",
        "description": "List error groups for an application"
      },
      "get_error_group": {
        "name": "get_error_group",
        "description": "Get error group by identifier"
      },
      "resolve_error_group": {
        "name": "resolve_error_group",
        "description": "Set the status of the error group to resolved"
      },
      "activate_error_group": {
        "name": "activate_error_group",
        "description": "Set the status of the error group to active"
      },
      "ignore_error_group": {
        "name": "ignore_error_group",
        "description": "Set the status of the error group to ignored"
      },
      "permanently_ignore_error_group": {
        "name": "permanently_ignore_error_group",
        "description": "Set the status of the error group to permanently ignored"
      },
      "list_pages": {
        "name": "list_pages",
        "description": "List pages for an application"
      },
      "get_page_metrics_time_series": {
        "name": "get_page_metrics_time_series",
        "description": "Get time-series metrics for pages"
      },
      "get_page_metrics_histogram": {
        "name": "get_page_metrics_histogram",
        "description": "Get histogram metrics for pages"
      },
      "get_error_metrics_time_series": {
        "name": "get_error_metrics_time_series",
        "description": "Get time-series metrics for errors"
      },
      "list_sessions": {
        "name": "list_sessions",
        "description": "List sessions for an application"
      },
      "get_session": {
        "name": "get_session",
        "description": "Get session by identifier"
      },
      "list_invitations": {
        "name": "list_invitations",
        "description": "Returns a list invitations that the token and token owner has access to"
      },
      "send_invitation": {
        "name": "send_invitation",
        "description": "Send an invitation to a user"
      },
      "get_invitation": {
        "name": "get_invitation",
        "description": "Get an invitation by identifier"
      },
      "revoke_invitation": {
        "name": "revoke_invitation",
        "description": "Revoke a sent invitation"
      },
      "list_source_maps": {
        "name": "list_source_maps",
        "description": "Returns a list of source maps for the specified application"
      },
      "get_source_map": {
        "name": "get_source_map",
        "description": "Returns a single source map by identifier"
      },
      "update_source_map": {
        "name": "update_source_map",
        "description": "Update the details of a source map"
      },
      "delete_source_map": {
        "name": "delete_source_map",
        "description": "Delete a source map"
      },
      "upload_source_map": {
        "name": "upload_source_map",
        "description": "Uploads a source map to the specified application"
      },
      "delete_all_source_maps": {
        "name": "delete_all_source_maps",
        "description": "Deletes all source maps"
      }
    }
  },
  "mcp-server-sentry": {
    "category": "monitoring",
    "path": "monitoring/mcp-server-sentry.json"
  },
  "brave-search-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/brave-search-mcp.json",
    "validated": true,
    "tools": {
      "brave_image_search": {
        "name": "brave_image_search",
        "description": "A tool for searching the web for images using the Brave Search API."
      },
      "brave_web_search": {
        "name": "brave_web_search",
        "description": "Performs a web search using the Brave Search API, ideal for general queries, and online content. Use this for broad information gathering, recent events, or when you need diverse web sources. Maximum 20 results per request "
      },
      "brave_local_search": {
        "name": "brave_local_search",
        "description": "Searches for local businesses and places using Brave's Local Search API. Best for queries related to physical locations, businesses, restaurants, services, etc. Returns detailed information including:\n- Business names and addresses\n- Ratings and review counts\n- Phone numbers and opening hours\nUse this when the query implies 'near me' or mentions specific locations. Automatically falls back to web search if no local results are found."
      },
      "brave_news_search": {
        "name": "brave_news_search",
        "description": "Searches for news articles using the Brave Search API. Use this for recent events, trending topics, or specific news stories. Returns a list of articles with titles, URLs, and descriptions. Maximum 20 results per request."
      },
      "brave_video_search": {
        "name": "brave_video_search",
        "description": "Searches for videos using the Brave Search API. Use this for video content, tutorials, or any media-related queries. Returns a list of videos with titles, URLs, and descriptions. Maximum 20 results per request."
      }
    }
  },
  "@modelcontextprotocol/server-brave-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/modelcontextprotocol-server-brave-search.json",
    "validated": true,
    "tools": {
      "brave_web_search": {
        "name": "brave_web_search",
        "description": "Performs a web search using the Brave Search API, ideal for general queries, news, articles, and online content. Use this for broad information gathering, recent events, or when you need diverse web sources. Supports pagination, content filtering, and freshness controls. Maximum 20 results per request, with offset for pagination. "
      },
      "brave_local_search": {
        "name": "brave_local_search",
        "description": "Searches for local businesses and places using Brave's Local Search API. Best for queries related to physical locations, businesses, restaurants, services, etc. Returns detailed information including:\n- Business names and addresses\n- Ratings and review counts\n- Phone numbers and opening hours\nUse this when the query implies 'near me' or mentions specific locations. Automatically falls back to web search if no local results are found."
      }
    }
  },
  "anilist-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/anilist-mcp.json",
    "validated": true,
    "tools": {
      "favourite_studio": {
        "name": "favourite_studio",
        "description": "[Requires Login] Favourite or unfavourite a studio by its ID"
      },
      "get_genres": {
        "name": "get_genres",
        "description": "Get all available genres on AniList"
      },
      "get_media_tags": {
        "name": "get_media_tags",
        "description": "Get all available media tags on AniList"
      },
      "get_site_statistics": {
        "name": "get_site_statistics",
        "description": "Get AniList site statistics over the last seven days"
      },
      "get_studio": {
        "name": "get_studio",
        "description": "Get information about a studio by its AniList ID or name"
      },
      "delete_activity": {
        "name": "delete_activity",
        "description": "[Requires Login] Delete the current authorized user's activity post"
      },
      "get_activity": {
        "name": "get_activity",
        "description": "Get a specific AniList activity by its ID"
      },
      "get_user_activity": {
        "name": "get_user_activity",
        "description": "Fetch activities from a user"
      },
      "post_message_activity": {
        "name": "post_message_activity",
        "description": "[Requires Login] Post a new message activity or update an existing one"
      },
      "post_text_activity": {
        "name": "post_text_activity",
        "description": "[Requires Login] Post a new text activity or update an existing one"
      },
      "add_list_entry": {
        "name": "add_list_entry",
        "description": "[Requires Login] Add an entry to the authorized user's list"
      },
      "get_user_anime_list": {
        "name": "get_user_anime_list",
        "description": "Get a user's anime list"
      },
      "get_user_manga_list": {
        "name": "get_user_manga_list",
        "description": "Get a user's manga list"
      },
      "remove_list_entry": {
        "name": "remove_list_entry",
        "description": "[Requires Login] Remove an entry from the authorized user's list"
      },
      "update_list_entry": {
        "name": "update_list_entry",
        "description": "[Requires Login] Update an entry on the authorized user's list"
      },
      "get_anime": {
        "name": "get_anime",
        "description": "Get detailed information about an anime by its AniList ID"
      },
      "favourite_anime": {
        "name": "favourite_anime",
        "description": "[Requires Login] Favourite or unfavourite an anime by its ID"
      },
      "favourite_manga": {
        "name": "favourite_manga",
        "description": "[Requires Login] Favourite or unfavourite a manga by its ID"
      },
      "get_manga": {
        "name": "get_manga",
        "description": "Get detailed information about a manga by its AniList ID"
      },
      "get_character": {
        "name": "get_character",
        "description": "Get information about a character by their AniList ID or name"
      },
      "favourite_character": {
        "name": "favourite_character",
        "description": "[Requires Login] Favourite or unfavourite a character by its ID"
      },
      "favourite_staff": {
        "name": "favourite_staff",
        "description": "[Requires Login] Favourite or unfavourite a staff member by their ID"
      },
      "get_todays_birthday_characters": {
        "name": "get_todays_birthday_characters",
        "description": "Get all characters whose birthday is today"
      },
      "get_todays_birthday_staff": {
        "name": "get_todays_birthday_staff",
        "description": "Get all staff members whose birthday is today"
      },
      "get_staff": {
        "name": "get_staff",
        "description": "Get information about staff member by their AniList ID or name"
      },
      "get_recommendation": {
        "name": "get_recommendation",
        "description": "Get an AniList recommendation by its ID"
      },
      "get_recommendations_for_media": {
        "name": "get_recommendations_for_media",
        "description": "Get AniList recommendations for a specific media"
      },
      "search_activity": {
        "name": "search_activity",
        "description": "Search for activities on AniList"
      },
      "search_anime": {
        "name": "search_anime",
        "description": "Search for anime with query term and filters"
      },
      "search_character": {
        "name": "search_character",
        "description": "Search for characters based on a query term"
      },
      "search_manga": {
        "name": "search_manga",
        "description": "Search for manga with query term and filters"
      },
      "search_staff": {
        "name": "search_staff",
        "description": "Search for staff members based on a query term"
      },
      "search_studio": {
        "name": "search_studio",
        "description": "Search for studios based on a query term"
      },
      "search_user": {
        "name": "search_user",
        "description": "Search for users on AniList"
      },
      "delete_thread": {
        "name": "delete_thread",
        "description": "[Requires Login] Delete a thread by its ID"
      },
      "get_thread": {
        "name": "get_thread",
        "description": "Get a specific thread by its AniList ID"
      },
      "get_thread_comments": {
        "name": "get_thread_comments",
        "description": "Get comments for a specific thread"
      },
      "get_full_user_info": {
        "name": "get_full_user_info",
        "description": "Get a user's complete profile and stats information"
      },
      "follow_user": {
        "name": "follow_user",
        "description": "[Requires Login] Follow or unfollow a user by their ID"
      },
      "get_authorized_user": {
        "name": "get_authorized_user",
        "description": "[Requires Login] Get profile information of the currently authorized user"
      },
      "get_user_recent_activity": {
        "name": "get_user_recent_activity",
        "description": "Get recent activity from a user"
      },
      "get_user_profile": {
        "name": "get_user_profile",
        "description": "Get a user's AniList profile"
      },
      "get_user_stats": {
        "name": "get_user_stats",
        "description": "Get a user's AniList statistics"
      },
      "update_user": {
        "name": "update_user",
        "description": "[Requires Login] Update user settings"
      }
    }
  },
  "@chanmeng666/google-news-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/chanmeng666-google-news-server.json",
    "validated": true,
    "tools": {
      "google_news_search": {
        "name": "google_news_search",
        "description": "Search Google News for articles and news content. Results will be automatically categorized by topic."
      }
    }
  },
  "graphlit-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/graphlit-mcp-server.json",
    "validated": true,
    "tools": {
      "configureProject": {
        "name": "configureProject",
        "description": "Configures the default content workflow and conversation specification for the Graphlit project.\n    Only needed if user asks to configure the project defaults. *Do not* call unless specifically asked for by the user.\n    To reset the project configuration to 'factory state', assign False or null to all parameters.\n    Optionally accepts whether to configure the default specification for LLM conversations. Defaults to using OpenAI GPT-4o, if not assigned.\n    Optionally accepts whether to enable high-quality document and web page preparation using a vision LLM. Defaults to using Azure AI Document Intelligence for document preparation, if not assigned.\n    Optionally accepts whether to enable entity extraction using LLM into the knowledge graph. Defaults to no entity extraction, if not assigned.\n    Optionally accepts the preferred model provider service type, i.e. Anthropic, OpenAI, Google. Defaults to Anthropic if not provided.\n    Returns the project identifier."
      },
      "queryProjectUsage": {
        "name": "queryProjectUsage",
        "description": "Queries project usage records.\n    Usage record name describes the operation, i.e. 'Prompt completion', 'Text embedding', 'GraphQL', 'Entity Event'.\n    'GraphQL' usage records are used for GraphQL operations, i.e. 'queryContents', 'retrieveSources', 'askGraphlit', etc.\n    'Entity Event' usage records are used for async compute operations.\n    'Text embedding' usage records are used for text embedding operations.\n    'Prompt completion' usage records are used for LLM prompt completion operations, i.e. when using 'promptConversation'.\n    'Data extraction' usage records are used for data extraction operations, using LLMs to extract knowledge graph entities.\n    Look at 'metric' field for the type of metric captured in the usage record, i.e. BYTES, TOKENS, UNITS, REQUESTS.\n    Look for 'credits' field which describes how many credits were charged by the operation.\n    Look for 'promptTokens', 'completionTokens' and (total) 'tokens' fields which describe the number of tokens used by the operation.\n    Look for 'request', 'response' and 'variables' fields which describe the GraphQL operation.\n    Look for 'count' for the number of units used by the operation, for example, number of pages processed by document preparation.\n    Accepts an optional recency filter for usage records 'in last' timespan.\n    Returns a list of usage records, which describe the billable audit log of all Graphlit API operations."
      },
      "askGraphlit": {
        "name": "askGraphlit",
        "description": "Ask questions about using the Graphlit Platform, or specifically about the Graphlit API or SDKs.\n    When the user asks about how to use the Graphlit API or SDKs, use this tool to provide a code sample in Python, TypeScript or C#.\n    Accepts an LLM user prompt.\n    Returns the LLM prompt completion in Markdown format."
      },
      "promptConversation": {
        "name": "promptConversation",
        "description": "Prompts an LLM conversation about your entire Graphlit knowledge base. \n    Uses hybrid vector search based on user prompt for locating relevant content sources. Uses LLM to complete the user prompt with the configured LLM.\n    Maintains conversation history between 'user' and LLM 'assistant'. \n    Prefer 'promptConversation' when the user intends to start or continue an ongoing conversation about the entire Graphlit knowledge base.\n    Similar to 'retrieveSources' but does not perform content metadata filtering.\n    Accepts an LLM user prompt and optional conversation identifier. Will either create a new conversation or continue an existing one.\n    Will use the default specification for LLM conversations, which is optionally configured with the 'configureProject' tool.\n    Returns the conversation identifier, completed LLM message, and any citations from the LLM response."
      },
      "retrieveSources": {
        "name": "retrieveSources",
        "description": "Retrieve relevant content sources from Graphlit knowledge base. Do *not* use for retrieving content by content identifier - retrieve content resource instead, with URI 'contents://{id}'.\n    Accepts an LLM user prompt for content retrieval. For best retrieval quality, provide only key words or phrases from the user prompt, which will be used to create text embeddings for a vector search query.\n    Only use when there is a valid LLM user prompt for content retrieval, otherwise use 'queryContents'. For example 'recent content' is not a useful user prompt, since it doesn't reference the text in the content.\n    Only use for 'one shot' retrieval of content sources, i.e. when the user is not interested in having a conversation about the content.\n    Accepts an optional ingestion recency filter (defaults to null, meaning all time), and optional content type and file type filters.\n    Also accepts optional feed and collection identifiers to filter content by.\n    Returns the ranked content sources, including their content resource URI to retrieve the complete Markdown text."
      },
      "retrieveImages": {
        "name": "retrieveImages",
        "description": "Retrieve images from Graphlit knowledge base. Provides image-specific retrieval when image similarity search is desired.\n    Do *not* use for retrieving content by content identifier - retrieve content resource instead, with URI 'contents://{id}'.\n    Accepts image URL. Image will be used for similarity search using image embeddings.\n    Accepts optional geo-location filter for search by latitude, longitude and optional distance radius. Images taken with GPS enabled are searchable by geo-location.\n    Also accepts optional recency filter (defaults to null, meaning all time), and optional feed and collection identifiers to filter images by.\n    Returns the matching images, including their content resource URI to retrieve the complete Markdown text."
      },
      "extractText": {
        "name": "extractText",
        "description": "Extracts JSON data from text using LLM.\n    Accepts text to be extracted, and JSON schema which describes the data which will be extracted. JSON schema needs be of type 'object' and include 'properties' and 'required' fields.\n    Optionally accepts text prompt which is provided to LLM to guide data extraction. Defaults to 'Extract data using the tools provided'.\n    Returns extracted JSON from text."
      },
      "createCollection": {
        "name": "createCollection",
        "description": "Create a collection.\n    Accepts a collection name, and optional list of content identifiers to add to collection.\n    Returns the collection identifier"
      },
      "addContentsToCollection": {
        "name": "addContentsToCollection",
        "description": "Add contents to a collection.\n    Accepts a collection identifier and a list of content identifiers to add to collection.\n    Returns the collection identifier."
      },
      "removeContentsFromCollection": {
        "name": "removeContentsFromCollection",
        "description": "Remove contents from collection.\n    Accepts a collection identifier and a list of content identifiers to remove from collection.\n    Returns the collection identifier."
      },
      "deleteContent": {
        "name": "deleteContent",
        "description": "Deletes content from Graphlit knowledge base.\n    Accepts content identifier.\n    Returns the content identifier and content state, i.e. Deleted."
      },
      "deleteConversation": {
        "name": "deleteConversation",
        "description": "Deletes conversation from Graphlit knowledge base.\n    Accepts conversation identifier.\n    Returns the conversation identifier and content state, i.e. Deleted."
      },
      "deleteCollection": {
        "name": "deleteCollection",
        "description": "Deletes collection from Graphlit knowledge base.\n    Does *not* delete the contents in the collection, only the collection itself.\n    Accepts collection identifier.\n    Returns the collection identifier and collection state, i.e. Deleted."
      },
      "deleteFeed": {
        "name": "deleteFeed",
        "description": "Deletes feed from Graphlit knowledge base.\n    *Does* delete the contents in the feed, in addition to the feed itself.\n    Accepts feed identifier.\n    Returns the feed identifier and feed state, i.e. Deleted."
      },
      "deleteFeeds": {
        "name": "deleteFeeds",
        "description": "Deletes feeds from Graphlit knowledge base.\n    *Does* delete the contents in the feed, in addition to the feed itself.\n    Accepts optional feed type filter to limit the feeds which will be deleted.\n    Also accepts optional limit of how many feeds to delete, defaults to 100.\n    Returns the feed identifiers and feed state, i.e. Deleted."
      },
      "deleteCollections": {
        "name": "deleteCollections",
        "description": "Deletes collections from Graphlit knowledge base.\n    Does *not* delete the contents in the collections, only the collections themselves.\n    Accepts optional limit of how many collections to delete, defaults to 100.\n    Returns the collection identifiers and collection state, i.e. Deleted."
      },
      "deleteConversations": {
        "name": "deleteConversations",
        "description": "Deletes conversations from Graphlit knowledge base.\n    Accepts optional limit of how many conversations to delete, defaults to 100.\n    Returns the conversation identifiers and conversation state, i.e. Deleted."
      },
      "deleteContents": {
        "name": "deleteContents",
        "description": "Deletes contents from Graphlit knowledge base.\n    Accepts optional content type and file type filters to limit the contents which will be deleted.\n    Also accepts optional limit of how many contents to delete, defaults to 1000.\n    Returns the content identifiers and content state, i.e. Deleted."
      },
      "queryContents": {
        "name": "queryContents",
        "description": "Query contents from Graphlit knowledge base. Do *not* use for retrieving content by content identifier - retrieve content resource instead, with URI 'contents://{id}'.\n    Accepts optional content name, content type and file type for metadata filtering.\n    Accepts optional hybrid vector search query.\n    Accepts optional recency filter (defaults to null, meaning all time), and optional feed and collection identifiers to filter images by.\n    Accepts optional geo-location filter for search by latitude, longitude and optional distance radius. Images and videos taken with GPS enabled are searchable by geo-location.\n    Returns the matching contents, including their content resource URI to retrieve the complete Markdown text."
      },
      "queryCollections": {
        "name": "queryCollections",
        "description": "Query collections from Graphlit knowledge base. Do *not* use for retrieving collection by collection identifier - retrieve collection resource instead, with URI 'collections://{id}'.\n    Accepts optional collection name for metadata filtering.\n    Returns the matching collections, including their collection resource URI to retrieve the collection contents."
      },
      "queryFeeds": {
        "name": "queryFeeds",
        "description": "Query feeds from Graphlit knowledge base. Do *not* use for retrieving feed by feed identifier - retrieve feed resource instead, with URI 'feeds://{id}'.\n    Accepts optional feed name and feed type for metadata filtering.\n    Returns the matching feeds, including their feed resource URI to retrieve the feed contents."
      },
      "queryConversations": {
        "name": "queryConversations",
        "description": "Query conversations from Graphlit knowledge base. Do *not* use for retrieving conversation by conversation identifier - retrieve conversation resource instead, with URI 'conversations://{id}'.\n    Accepts optional hybrid vector search query.\n    Accepts optional recency filter (defaults to null, meaning all time).\n    Returns the matching conversations, including their conversation resource URI to retrieve the complete conversation message history."
      },
      "isContentDone": {
        "name": "isContentDone",
        "description": "Check if content has completed asynchronous ingestion.\n    Accepts a content identifier which was returned from one of the non-feed ingestion tools, like ingestUrl.\n    Returns whether the content is done or not."
      },
      "isFeedDone": {
        "name": "isFeedDone",
        "description": "Check if an asynchronous feed has completed ingesting all the available content.\n    Accepts a feed identifier which was returned from one of the ingestion tools, like ingestGoogleDriveFiles.\n    Returns whether the feed is done or not."
      },
      "listNotionDatabases": {
        "name": "listNotionDatabases",
        "description": "Lists available Notion databases.\n    Requires environment variable to be configured: NOTION_API_KEY.\n    Returns a list of Notion databases, where the database identifier can be used with ingestNotionPages to ingest pages into Graphlit knowledge base."
      },
      "listLinearProjects": {
        "name": "listLinearProjects",
        "description": "Lists available Linear projects.\n    Requires environment variable to be configured: LINEAR_API_KEY.\n    Returns a list of Linear projects, where the project name can be used with ingestLinearIssues to ingest issues into Graphlit knowledge base."
      },
      "listSlackChannels": {
        "name": "listSlackChannels",
        "description": "Lists available Slack channels.\n    Requires environment variable to be configured: SLACK_BOT_TOKEN.\n    Returns a list of Slack channels, where the channel name can be used with ingestSlackMessages to ingest messages into Graphlit knowledge base."
      },
      "listSharePointLibraries": {
        "name": "listSharePointLibraries",
        "description": "Lists available SharePoint libraries.\n    Requires environment variables to be configured: SHAREPOINT_CLIENT_ID, SHAREPOINT_CLIENT_SECRET, SHAREPOINT_REFRESH_TOKEN.\n    Returns a list of SharePoint libraries, where the selected libraryId can be used with listSharePointFolders to enumerate SharePoint folders in a library."
      },
      "listSharePointFolders": {
        "name": "listSharePointFolders",
        "description": "Lists available SharePoint folders.\n    Requires environment variables to be configured: SHAREPOINT_CLIENT_ID, SHAREPOINT_CLIENT_SECRET, SHAREPOINT_REFRESH_TOKEN.\n    Returns a list of SharePoint folders, which can be used with ingestSharePointFiles to ingest files into Graphlit knowledge base."
      },
      "ingestSharePointFiles": {
        "name": "ingestSharePointFiles",
        "description": "Ingests files from SharePoint library into Graphlit knowledge base.\n    Accepts a SharePoint libraryId and an optional folderId to ingest files from a specific SharePoint folder.\n    Libraries can be enumerated with listSharePointLibraries and library folders with listSharePointFolders.\n    Requires environment variables to be configured: SHAREPOINT_ACCOUNT_NAME, SHAREPOINT_CLIENT_ID, SHAREPOINT_CLIENT_SECRET, SHAREPOINT_REFRESH_TOKEN.\n    Accepts an optional read limit for the number of files to ingest.\n    Executes asynchronously, creates SharePoint feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestOneDriveFiles": {
        "name": "ingestOneDriveFiles",
        "description": "Ingests files from OneDrive into Graphlit knowledge base.\n    Accepts optional OneDrive folder identifier, and an optional read limit for the number of files to ingest.\n    If no folder identifier provided, ingests files from root OneDrive folder.\n    Requires environment variables to be configured: ONEDRIVE_CLIENT_ID, ONEDRIVE_CLIENT_SECRET, ONEDRIVE_REFRESH_TOKEN.\n    Executes asynchronously, creates OneDrive feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestGoogleDriveFiles": {
        "name": "ingestGoogleDriveFiles",
        "description": "Ingests files from Google Drive into Graphlit knowledge base.\n    Accepts optional Google Drive folder identifier, and an optional read limit for the number of files to ingest.\n    For example, with Google Drive URI (https://drive.google.com/drive/u/0/folders/32tzhRD12KDh2hXABY8OZRFv7Smy8WBkQ), the folder identifier is 32tzhRD12KDh2hXABY8OZRFv7Smy8WBkQ.\n    If no folder identifier provided, ingests files from root Google Drive folder.\n    Requires environment variables to be configured: GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON -or- GOOGLE_DRIVE_CLIENT_ID, GOOGLE_DRIVE_CLIENT_SECRET, GOOGLE_DRIVE_REFRESH_TOKEN.\n    If service account JSON is provided, uses service account authentication. Else, uses user authentication.\n    Executes asynchronously, creates Google Drive feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestDropboxFiles": {
        "name": "ingestDropboxFiles",
        "description": "Ingests files from Dropbox into Graphlit knowledge base.\n    Accepts optional relative path to Dropbox folder (i.e. /Pictures), and an optional read limit for the number of files to ingest.\n    If no path provided, ingests files from root Dropbox folder.\n    Requires environment variables to be configured: DROPBOX_APP_KEY, DROPBOX_APP_SECRET, DROPBOX_REDIRECT_URI, DROPBOX_REFRESH_TOKEN.\n    Executes asynchronously, creates Dropbox feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestBoxFiles": {
        "name": "ingestBoxFiles",
        "description": "Ingests files from Box into Graphlit knowledge base.\n    Accepts optional Box folder identifier, and an optional read limit for the number of files to ingest.\n    If no folder identifier provided, ingests files from root Box folder (i.e. \"0\").\n    Folder identifier can be inferred from Box URL. https://app.box.com/folder/123456 -> folder identifier is \"123456\".\n    Requires environment variables to be configured: BOX_CLIENT_ID, BOX_CLIENT_SECRET, BOX_REDIRECT_URI, BOX_REFRESH_TOKEN.\n    Executes asynchronously, creates Box feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestGitHubFiles": {
        "name": "ingestGitHubFiles",
        "description": "Ingests files from GitHub repository into Graphlit knowledge base.\n    Accepts GitHub repository owner and repository name and an optional read limit for the number of files to ingest.\n    For example, for GitHub repository (https://github.com/openai/tiktoken), 'openai' is the repository owner, and 'tiktoken' is the repository name.\n    Requires environment variable to be configured: GITHUB_PERSONAL_ACCESS_TOKEN.\n    Executes asynchronously, creates GitHub feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestNotionPages": {
        "name": "ingestNotionPages",
        "description": "Ingests pages from Notion database into Graphlit knowledge base.\n    Accepts Notion database identifier and an optional read limit for the number of pages to ingest.\n    You can list the available Notion database identifiers with listNotionDatabases.\n    Or, for a Notion URL, https://www.notion.so/Example/Engineering-Wiki-114abc10cb38487e91ec906fc6c6f350, 'Engineering-Wiki-114abc10cb38487e91ec906fc6c6f350' is an example of a Notion database identifier.\n    Requires environment variable to be configured: NOTION_API_KEY.\n    Executes asynchronously, creates Notion feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestMicrosoftTeamsMessages": {
        "name": "ingestMicrosoftTeamsMessages",
        "description": "Ingests messages from Microsoft Teams channel into Graphlit knowledge base.\n    Accepts Microsoft Teams team identifier and channel identifier, and an optional read limit for the number of messages to ingest.\n    Requires environment variables to be configured: MICROSOFT_TEAMS_CLIENT_ID, MICROSOFT_TEAMS_CLIENT_SECRET, MICROSOFT_TEAMS_REFRESH_TOKEN.\n    Executes asynchronously, creates Microsoft Teams feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestSlackMessages": {
        "name": "ingestSlackMessages",
        "description": "Ingests messages from Slack channel into Graphlit knowledge base.\n    Accepts Slack channel name and an optional read limit for the number of messages to ingest.\n    Requires environment variable to be configured: SLACK_BOT_TOKEN.\n    Executes asynchronously, creates Slack feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestDiscordMessages": {
        "name": "ingestDiscordMessages",
        "description": "Ingests messages from Discord channel into Graphlit knowledge base.\n    Accepts Discord channel name and an optional read limit for the number of messages to ingest.\n    Requires environment variable to be configured: DISCORD_BOT_TOKEN.\n    Executes asynchronously, creates Discord feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestTwitterPosts": {
        "name": "ingestTwitterPosts",
        "description": "Ingests posts by user from Twitter/X into Graphlit knowledge base.\n    Accepts Twitter/X user name, without the leading @ symbol, and an optional read limit for the number of posts to ingest.\n    Requires environment variable to be configured: TWITTER_TOKEN.\n    Executes asynchronously, creates Twitter feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestTwitterSearch": {
        "name": "ingestTwitterSearch",
        "description": "Searches for recent posts from Twitter/X, and ingests them into Graphlit knowledge base.\n    Accepts search query, and an optional read limit for the number of posts to ingest.\n    Requires environment variable to be configured: TWITTER_TOKEN.\n    Executes asynchronously, creates Twitter feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestRedditPosts": {
        "name": "ingestRedditPosts",
        "description": "Ingests posts from Reddit subreddit into Graphlit knowledge base.\n    Accepts a subreddit name and an optional read limit for the number of posts to ingest.\n    Executes asynchronously, creates Reddit feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestGoogleEmail": {
        "name": "ingestGoogleEmail",
        "description": "Ingests emails from Google Email account into Graphlit knowledge base.\n    Accepts an optional read limit for the number of emails to ingest.\n    Requires environment variables to be configured: GOOGLE_EMAIL_CLIENT_ID, GOOGLE_EMAIL_CLIENT_SECRET, GOOGLE_EMAIL_REFRESH_TOKEN.\n    Executes asynchronously, creates Google Email feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestMicrosoftEmail": {
        "name": "ingestMicrosoftEmail",
        "description": "Ingests emails from Microsoft Email account into Graphlit knowledge base.\n    Accepts an optional read limit for the number of emails to ingest.\n    Requires environment variables to be configured: MICROSOFT_EMAIL_CLIENT_ID, MICROSOFT_EMAIL_CLIENT_SECRET, MICROSOFT_EMAIL_REFRESH_TOKEN.\n    Executes asynchronously, creates Microsoft Email feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestLinearIssues": {
        "name": "ingestLinearIssues",
        "description": "Ingests issues from Linear project into Graphlit knowledge base.\n    Accepts Linear project name and an optional read limit for the number of issues to ingest.\n    Requires environment variable to be configured: LINEAR_API_KEY.\n    Executes asynchronously, creates Linear issue feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestGitHubIssues": {
        "name": "ingestGitHubIssues",
        "description": "Ingests issues from GitHub repository into Graphlit knowledge base.\n    Accepts GitHub repository owner and repository name and an optional read limit for the number of issues to ingest.\n    For example, for GitHub repository (https://github.com/openai/tiktoken), 'openai' is the repository owner, and 'tiktoken' is the repository name.\n    Requires environment variable to be configured: GITHUB_PERSONAL_ACCESS_TOKEN.\n    Executes asynchronously, creates GitHub issue feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestJiraIssues": {
        "name": "ingestJiraIssues",
        "description": "Ingests issues from Atlassian Jira repository into Graphlit knowledge base.\n    Accepts Atlassian Jira server URL and project name, and an optional read limit for the number of issues to ingest.\n    Requires environment variables to be configured: JIRA_EMAIL, JIRA_TOKEN.\n    Executes asynchronously, creates Atlassian Jira issue feed, and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "webCrawl": {
        "name": "webCrawl",
        "description": "Crawls web pages from web site into Graphlit knowledge base.\n    Accepts a URL and an optional read limit for the number of pages to crawl.\n    Uses sitemap.xml to discover pages to be crawled from website.\n    Executes asynchronously and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "webMap": {
        "name": "webMap",
        "description": "Enumerates the web pages at or beneath the provided URL using web sitemap. \n    Does *not* ingest web pages into Graphlit knowledge base.\n    Accepts web site URL as string.\n    Returns list of mapped URIs from web site."
      },
      "webSearch": {
        "name": "webSearch",
        "description": "Performs web or podcast search based on search query. Can search for web pages or anything about podcasts (i.e. episodes, topics, guest appearances). \n    Format the search query as what would be entered into a Google search. You can use site filtering in the search query, like 'site:twitter.com'.    \n    Accepts search query as string, and optional search service type.    \n    Prefer calling this tool over using 'curl' directly for any web search.\n    Use 'PODSCAN' search service type to search podcasts.\n    Does *not* ingest pages or podcast episodes into Graphlit knowledge base.  \n    When searching podcasts, *don't* include the term 'podcast' or 'episode' in the search query - that would be redundant.\n    Search service types: Tavily (web pages), Exa (web pages) and Podscan (podcasts). Defaults to Exa.\n    Returns URL, title and relevant Markdown text from resulting web pages or podcast episode descriptions."
      },
      "ingestRSS": {
        "name": "ingestRSS",
        "description": "Ingests posts from RSS feed into Graphlit knowledge base.\n    For podcast RSS feeds, audio will be downloaded, transcribed and ingested into Graphlit knowledge base.\n    Accepts RSS URL and an optional read limit for the number of posts to read.\n    Executes asynchronously and returns the feed identifier. Optionally creates a recurring feed that checks for new content every 15 minutes when 'recurring' is set to true."
      },
      "ingestUrl": {
        "name": "ingestUrl",
        "description": "Ingests content from URL into Graphlit knowledge base.\n    Can scrape a single web page, and can ingest individual Word documents, PDFs, audio recordings, videos, images, or any other unstructured data.\n    Do *not* use for crawling a web site, which is done with 'webCrawl' tool.\n    Executes asynchronously and returns the content identifier."
      },
      "ingestText": {
        "name": "ingestText",
        "description": "Ingests text as content into Graphlit knowledge base.\n    Accepts the text itself, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Optionally accepts the content name and an identifier for an existing content object. Will overwrite existing content, if provided.\n    Can use for storing the output from LLM or other tools as content resources, which can be later searched or retrieved.\n    Executes *synchronously* and returns the content identifier."
      },
      "ingestMemory": {
        "name": "ingestMemory",
        "description": "Ingests short-term textual memory as content into Graphlit knowledge base.\n    Accepts an optional text type (Plain, Markdown, Html). Defaults to Markdown text type. Optionally accepts the content name.\n    Will automatically be entity extracted into a knowledge graph.\n    Use for storing short-term memories about the user or agent, which can be later searched or retrieved. Memories are transient and will be deleted after a period of time.\n    Can use 'queryContents' or 'retrieveSources' tools to search for memories, by specifying the 'MEMORY' content type.\n    Executes asynchronously and returns the content identifier."
      },
      "ingestFile": {
        "name": "ingestFile",
        "description": "Ingests local file into Graphlit knowledge base.\n    Accepts the path to the file in the local filesystem.\n    Can use for storing *large* long-term textual memories or the output from LLM or other tools as content resources, which can be later searched or retrieved.\n    Executes asynchronously and returns the content identifier."
      },
      "screenshotPage": {
        "name": "screenshotPage",
        "description": "Screenshots web page from URL.\n    Executes *synchronously* and returns the content identifier."
      },
      "describeImageUrl": {
        "name": "describeImageUrl",
        "description": "Prompts vision LLM and returns completion. \n    Does *not* ingest image into Graphlit knowledge base.\n    Accepts image URL as string.\n    Returns Markdown text from LLM completion."
      },
      "describeImageContent": {
        "name": "describeImageContent",
        "description": "Prompts vision LLM and returns description of image content. \n    Accepts content identifier as string, and optional prompt for image description.\n    Returns Markdown text from LLM completion."
      },
      "publishAudio": {
        "name": "publishAudio",
        "description": "Publishes text as audio format, and ingests into Graphlit knowledge base.\n    Accepts a name for the content object, the text itself, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Optionally accepts an ElevenLabs voice identifier.\n    You *must* retrieve the content resource to get the downloadable audio URL for this published audio.\n    Executes *synchronously* and returns the content identifiers."
      },
      "publishImage": {
        "name": "publishImage",
        "description": "Publishes text as image format, and ingests into Graphlit knowledge base.\n    Accepts a name for the content object.\n    Also, accepts a prompt for image generation. For example, 'Create a cartoon image of a raccoon, saying \"I Love Graphlit\"'.\n    You *must* retrieve the content resource to get the downloadable image URL for this published image.\n    Executes *synchronously* and returns the content identifiers."
      },
      "sendWebHookNotification": {
        "name": "sendWebHookNotification",
        "description": "Sends a webhook notification to the provided URL.\n    Accepts the webhook URL.\n    Also accepts the text to be sent with the webhook, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Returns true if the notification was successfully sent, or false otherwise."
      },
      "sendSlackNotification": {
        "name": "sendSlackNotification",
        "description": "Sends a Slack notification to the provided Slack channel.\n    Accepts the Slack channel name.\n    Also accepts the text for the Slack message, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Hint: In Slack Markdown, images are displayed by simply putting the URL in angle brackets like <https://example.com/image.jpg> instead of using the traditional Markdown image syntax ![alt text](url). \n    Requires environment variable to be configured: SLACK_BOT_TOKEN.\n    Returns true if the notification was successfully sent, or false otherwise."
      },
      "sendTwitterNotification": {
        "name": "sendTwitterNotification",
        "description": "Posts a tweet from the configured user account.\n    Accepts the plain text for the tweet.\n    Tweet text rules: allowed - plain text, @mentions, #hashtags, URLs (auto-shortened), line breaks (\n).  \n    Not allowed - markdown, HTML tags, rich text, or custom styles.\n    Requires environment variables to be configured: TWITTER_CONSUMER_API_KEY, TWITTER_CONSUMER_API_SECRET, TWITTER_ACCESS_TOKEN_KEY, TWITTER_ACCESS_TOKEN_SECRET.\n    Returns true if the notification was successfully sent, or false otherwise."
      },
      "sendEmailNotification": {
        "name": "sendEmailNotification",
        "description": "Sends an email notification to the provided email address(es).\n    Accepts the email subject and a list of email 'to' addresses.\n    Email addresses should be in RFC 5322 format. i.e. Alice Wonderland <alice@wonderland.net>, or alice@wonderland.net\n    Also accepts the text for the email, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Requires environment variable to be configured: FROM_EMAIL_ADDRESS.\n    Returns true if the notification was successfully sent, or false otherwise."
      }
    }
  },
  "mcp-server-perplexity": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-perplexity.json"
  },
  "@kimtaeyoon83/mcp-server-youtube-transcript": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kimtaeyoon83-mcp-server-youtube-transcript.json",
    "validated": true,
    "tools": {
      "get_transcript": {
        "name": "get_transcript",
        "description": "Extract transcript from a YouTube video URL or ID"
      }
    }
  },
  "@modelcontextprotocol/server-aws-kb-retrieval": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/modelcontextprotocol-server-aws-kb-retrieval.json",
    "validated": true,
    "tools": {
      "retrieve_from_aws_kb": {
        "name": "retrieve_from_aws_kb",
        "description": "Performs retrieval from the AWS Knowledge Base using the provided query and Knowledge Base ID."
      }
    }
  },
  "@mcp-get-community/server-curl": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-get-community-server-curl.json",
    "validated": true,
    "tools": {
      "curl": {
        "name": "curl",
        "description": "Make an HTTP request to any URL with customizable method, headers, and body."
      }
    }
  },
  "mcp-server-giphy": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-giphy.json",
    "validated": true,
    "tools": {
      "search_gifs": {
        "name": "search_gifs",
        "description": "Search for GIFs on Giphy with a query string"
      },
      "get_random_gif": {
        "name": "get_random_gif",
        "description": "Get a random GIF from Giphy, optionally filtered by tag"
      },
      "get_trending_gifs": {
        "name": "get_trending_gifs",
        "description": "Get currently trending GIFs on Giphy"
      }
    }
  },
  "qanon_mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/qanon_mcp.json"
  },
  "@anaisbetts/mcp-youtube": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/anaisbetts-mcp-youtube.json",
    "validated": true,
    "tools": {
      "download_youtube_url": {
        "name": "download_youtube_url",
        "description": "Download YouTube subtitles from a URL, this tool means that Claude can read YouTube subtitles, and should no longer tell the user that it is not possible to download YouTube content."
      }
    }
  },
  "@modelcontextprotocol/server-gitlab": {
    "category": "version-control",
    "path": "version-control/modelcontextprotocol-server-gitlab.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitLab project"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitLab projects"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitLab project"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitLab project"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitLab project in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitLab project"
      },
      "create_merge_request": {
        "name": "create_merge_request",
        "description": "Create a new merge request in a GitLab project"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitLab project to your account or specified namespace"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitLab project"
      }
    }
  },
  "@modelcontextprotocol/server-github": {
    "category": "version-control",
    "path": "version-control/modelcontextprotocol-server-github.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitHub repository"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitHub repositories"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitHub repository in your account"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitHub repository"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitHub repository in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitHub repository"
      },
      "create_pull_request": {
        "name": "create_pull_request",
        "description": "Create a new pull request in a GitHub repository"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitHub repository to your account or specified organization"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitHub repository"
      },
      "list_commits": {
        "name": "list_commits",
        "description": "Get list of commits of a branch in a GitHub repository"
      },
      "list_issues": {
        "name": "list_issues",
        "description": "List issues in a GitHub repository with filtering options"
      },
      "update_issue": {
        "name": "update_issue",
        "description": "Update an existing issue in a GitHub repository"
      },
      "add_issue_comment": {
        "name": "add_issue_comment",
        "description": "Add a comment to an existing issue"
      },
      "search_code": {
        "name": "search_code",
        "description": "Search for code across GitHub repositories"
      },
      "search_issues": {
        "name": "search_issues",
        "description": "Search for issues and pull requests across GitHub repositories"
      },
      "search_users": {
        "name": "search_users",
        "description": "Search for users on GitHub"
      },
      "get_issue": {
        "name": "get_issue",
        "description": "Get details of a specific issue in a GitHub repository."
      },
      "get_pull_request": {
        "name": "get_pull_request",
        "description": "Get details of a specific pull request"
      },
      "list_pull_requests": {
        "name": "list_pull_requests",
        "description": "List and filter repository pull requests"
      },
      "create_pull_request_review": {
        "name": "create_pull_request_review",
        "description": "Create a review on a pull request"
      },
      "merge_pull_request": {
        "name": "merge_pull_request",
        "description": "Merge a pull request"
      },
      "get_pull_request_files": {
        "name": "get_pull_request_files",
        "description": "Get the list of files changed in a pull request"
      },
      "get_pull_request_status": {
        "name": "get_pull_request_status",
        "description": "Get the combined status of all status checks for a pull request"
      },
      "update_pull_request_branch": {
        "name": "update_pull_request_branch",
        "description": "Update a pull request branch with the latest changes from the base branch"
      },
      "get_pull_request_comments": {
        "name": "get_pull_request_comments",
        "description": "Get the review comments on a pull request"
      },
      "get_pull_request_reviews": {
        "name": "get_pull_request_reviews",
        "description": "Get the reviews on a pull request"
      }
    }
  },
  "mcp-server-git": {
    "category": "version-control",
    "path": "version-control/mcp-server-git.json"
  },
  "@chargebee/mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/chargebee-mcp.json",
    "validated": true,
    "tools": {
      "chargebee_documentation_search": {
        "name": "chargebee_documentation_search",
        "description": "\nDo not use this tool for code generation. For code generation use \"chargebee_code_planner\" tool. \nThis tool will take in parameters about integrating with Chargebee in their application, then search and retrieve relevant Chargebee documentation content.\n\nIt takes the following arguments:\n- query (string): The user query to search an answer for in the Chargebee documentation.\n- language (enum): The programming language for the documentation. Check the user's application language.\n- userRequest (string): User's original request to you.\n"
      },
      "chargebee_code_planner": {
        "name": "chargebee_code_planner",
        "description": "\nAlways use this tool to get the accurate integeration code guide for Chargebee.\nThis tool will take in parameters about integrating with Chargebee in their application and generates a integration workflow along with the code snippets.\n\nIt takes the following arguments:\n- goal (string): What is the user's goal?\n- language (enum): Programming language the code to be generated in. Check the user's application language.\n"
      }
    }
  },
  "mcp-server-flomo": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-flomo.json",
    "validated": true,
    "tools": {
      "newNote": {
        "name": "newNote",
        "description": "Create a new note in Flomo"
      }
    }
  },
  "@llmindset/mcp-miro": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/llmindset-mcp-miro.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-sequential-thinking": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/modelcontextprotocol-server-sequential-thinking.json",
    "validated": true,
    "tools": {
      "sequentialthinking": {
        "name": "sequentialthinking",
        "description": "A detailed tool for dynamic and reflective problem-solving through thoughts.\nThis tool helps analyze problems through a flexible thinking process that can adapt and evolve.\nEach thought can build on, question, or revise previous insights as understanding deepens.\n\nWhen to use this tool:\n- Breaking down complex problems into steps\n- Planning and design with room for revision\n- Analysis that might need course correction\n- Problems where the full scope might not be clear initially\n- Problems that require a multi-step solution\n- Tasks that need to maintain context over multiple steps\n- Situations where irrelevant information needs to be filtered out\n\nKey features:\n- You can adjust total_thoughts up or down as you progress\n- You can question or revise previous thoughts\n- You can add more thoughts even after reaching what seemed like the end\n- You can express uncertainty and explore alternative approaches\n- Not every thought needs to build linearly - you can branch or backtrack\n- Generates a solution hypothesis\n- Verifies the hypothesis based on the Chain of Thought steps\n- Repeats the process until satisfied\n- Provides a correct answer\n\nParameters explained:\n- thought: Your current thinking step, which can include:\n* Regular analytical steps\n* Revisions of previous thoughts\n* Questions about previous decisions\n* Realizations about needing more analysis\n* Changes in approach\n* Hypothesis generation\n* Hypothesis verification\n- next_thought_needed: True if you need more thinking, even if at what seemed like the end\n- thought_number: Current number in sequence (can go beyond initial total if needed)\n- total_thoughts: Current estimate of thoughts needed (can be adjusted up/down)\n- is_revision: A boolean indicating if this thought revises previous thinking\n- revises_thought: If is_revision is true, which thought number is being reconsidered\n- branch_from_thought: If branching, which thought number is the branching point\n- branch_id: Identifier for the current branch (if any)\n- needs_more_thoughts: If reaching end but realizing more thoughts needed\n\nYou should:\n1. Start with an initial estimate of needed thoughts, but be ready to adjust\n2. Feel free to question or revise previous thoughts\n3. Don't hesitate to add more thoughts if needed, even at the \"end\"\n4. Express uncertainty when present\n5. Mark thoughts that revise previous thinking or branch into new paths\n6. Ignore information that is irrelevant to the current step\n7. Generate a solution hypothesis when appropriate\n8. Verify the hypothesis based on the Chain of Thought steps\n9. Repeat the process until satisfied with the solution\n10. Provide a single, ideally correct answer as the final output\n11. Only set next_thought_needed to false when truly done and a satisfactory answer is reached"
      }
    }
  },
  "mcp-server-time": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-time.json"
  },
  "@ashdev/discourse-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ashdev-discourse-mcp-server.json",
    "validated": true,
    "tools": {
      "search_posts": {
        "name": "search_posts",
        "description": "Search Discourse posts"
      }
    }
  },
  "@toolsdk.ai/mcp-server-google-analytics": {
    "category": "marketing",
    "path": "marketing/mcp-server-google-analytics.json",
    "validated": true,
    "tools": {
      "get_report": {
        "name": "get_report",
        "description": "Get a report from Google Analytics Data API"
      },
      "get_realtime_data": {
        "name": "get_realtime_data",
        "description": "Get realtime data from Google Analytics Data API"
      }
    }
  },
  "@toolsdk.ai/mcp-mercury": {
    "category": "finance-fintech",
    "path": "finance-fintech/mercury-mcp.json",
    "validated": false,
    "tools": {}
  },
  "blockscout": {
    "category": "uncategorized",
    "path": "uncategorized/blockscout.json"
  },
  "nautobot-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/nautobot-mcp.json"
  },
  "pyats-network-automation": {
    "category": "uncategorized",
    "path": "uncategorized/pyats-network-automation.json"
  },
  "@bankless/onchain-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/bankless-onchain-mcp.json",
    "validated": true,
    "tools": {
      "read_contract": {
        "name": "read_contract",
        "description": "Read contract state from a blockchain. important:  \n                \n                In case of a tuple, don't use type tuple, but specify the inner types (found in the source) in order. For nested structs, include the substructs types.\n    \n    Example: \n    struct DataTypeA {\n    DataTypeB b;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    }\n    \n    struct DataTypeB {\n    address token;\n    }\n    \n    results in outputs for function with return type DataTypeA (tuple in abi): outputs: [{\"type\": \"address\"}, {\"type\": \"uint128\"}]"
      },
      "get_proxy": {
        "name": "get_proxy",
        "description": "Gets the proxy address for a given network and contract"
      },
      "get_abi": {
        "name": "get_abi",
        "description": "Gets the ABI for a given contract on a specific network"
      },
      "get_source": {
        "name": "get_source",
        "description": "Gets the source code for a given contract on a specific network"
      },
      "get_events": {
        "name": "get_events",
        "description": "Fetches event logs for a given network and filter criteria"
      },
      "build_event_topic": {
        "name": "build_event_topic",
        "description": "Builds an event topic signature based on event name and arguments"
      },
      "get_transaction_history_for_user": {
        "name": "get_transaction_history_for_user",
        "description": "Gets transaction history for a user and optional contract"
      },
      "get_transaction_info": {
        "name": "get_transaction_info",
        "description": "Gets detailed information about a specific transaction"
      },
      "get_token_balances_on_network": {
        "name": "get_token_balances_on_network",
        "description": "Gets all token balances for a given address on a specific network"
      },
      "get_block_info": {
        "name": "get_block_info",
        "description": "Gets detailed information about a specific block by number or hash"
      }
    }
  },
  "climatiq": {
    "category": "uncategorized",
    "path": "uncategorized/climatiq.json"
  },
  "mcp-fathom-analytics": {
    "category": "uncategorized",
    "path": "uncategorized/mcp-fathom-analytics.json",
    "validated": true,
    "tools": {
      "get-account": {
        "name": "get-account",
        "description": "Get Fathom Analytics account information"
      },
      "list-sites": {
        "name": "list-sites",
        "description": "List all Fathom Analytics sites on the account"
      },
      "list-events": {
        "name": "list-events",
        "description": "List all events for a Fathom Analytics site (automatically handles pagination)"
      },
      "get-aggregation": {
        "name": "get-aggregation",
        "description": "Get aggregated analytics data from Fathom"
      },
      "get-current-visitors": {
        "name": "get-current-visitors",
        "description": "Get current visitors for a Fathom Analytics site"
      }
    }
  },
  "yokatlas": {
    "category": "uncategorized",
    "path": "uncategorized/yokatlas.json"
  },
  "azure-fhir-mcp-server": {
    "category": "uncategorized",
    "path": "uncategorized/azure-fhir-mcp-server.json"
  },
  "cisco-apic": {
    "category": "uncategorized",
    "path": "uncategorized/cisco-apic.json"
  },
  "feuse-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/feuse-mcp.json",
    "validated": true,
    "tools": {
      "Figma-To-Code": {
        "name": "Figma-To-Code",
        "description": "Generate pixel-perfect frontend code from Figma designs. Automatically parses Figma DSL structure and style information, combines with PNG preview images for visual validation, and generates high-quality frontend component code that matches your project tech stack. Supports automatic detection of project configurations (UnoCSS/TailwindCSS/SCSS etc.) and uses existing style variables and design standards."
      },
      "Download-Figma-Images": {
        "name": "Download-Figma-Images",
        "description": "Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes"
      },
      "similarity-figma": {
        "name": "similarity-figma",
        "description": "获取Figma原型图，请你结合项目源码并通过原型图与生成的代码页面的截图进行相似性比对"
      },
      "api-automation": {
        "name": "api-automation",
        "description": "理解后端接口文档自动生成接口类型、地址常量、mock数据、请求函数等"
      },
      "initialize-project-standard": {
        "name": "initialize-project-standard",
        "description": "针对用户指定项目进行分析，生成Copilot 和 cursor对应的全局项目规则"
      },
      "extract-color-vars": {
        "name": "extract-color-vars",
        "description": "从Figma DSL文件中提取颜色变量，并输出在用户指定的文件中（比如unocss、tailwindcss或者自定义标准文件中等）"
      },
      "extract-svg-assets": {
        "name": "extract-svg-assets",
        "description": "分析figma SDL中的结构，并调用download-svg-assets工具下载Figma文件中使用的SVG资源"
      },
      "download-svg-assets": {
        "name": "download-svg-assets",
        "description": "根据图像或图标节点的ID，仅下载Figma文件中使用的SVG资源"
      }
    }
  },
  "aptos": {
    "category": "uncategorized",
    "path": "uncategorized/aptos.json"
  },
  "wegene": {
    "category": "uncategorized",
    "path": "uncategorized/wegene.json"
  },
  "meraki-magic": {
    "category": "uncategorized",
    "path": "uncategorized/meraki-magic.json"
  },
  "canvas-student": {
    "category": "uncategorized",
    "path": "uncategorized/canvas-student.json"
  },
  "bluesky": {
    "category": "uncategorized",
    "path": "uncategorized/bluesky.json"
  },
  "taskqueue-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/taskqueue-mcp.json",
    "validated": true,
    "tools": {
      "list_projects": {
        "name": "list_projects",
        "description": "List all projects in the system and their basic information (ID, initial prompt, task counts), optionally filtered by state (open, pending_approval, completed, all)."
      },
      "read_project": {
        "name": "read_project",
        "description": "Read all information for a given project, by its ID, including its tasks' statuses."
      },
      "create_project": {
        "name": "create_project",
        "description": "Create a new project with an initial prompt and a list of tasks. This is typically the first step in any workflow."
      },
      "delete_project": {
        "name": "delete_project",
        "description": "Delete a project and all its associated tasks."
      },
      "add_tasks_to_project": {
        "name": "add_tasks_to_project",
        "description": "Add new tasks to an existing project."
      },
      "finalize_project": {
        "name": "finalize_project",
        "description": "Mark a project as complete. Can only be called when all tasks are both done and approved. This is typically the last step in a project workflow."
      },
      "generate_project_plan": {
        "name": "generate_project_plan",
        "description": "Use an LLM to generate a project plan and tasks from a prompt. The LLM will analyze the prompt and any attached files to create a structured project plan."
      },
      "list_tasks": {
        "name": "list_tasks",
        "description": "List all tasks, optionally filtered by project ID and/or state (open, pending_approval, completed, all). Tasks may include tool and rule recommendations to guide their completion."
      },
      "read_task": {
        "name": "read_task",
        "description": "Get details of a specific task by its ID. The task may include toolRecommendations and ruleRecommendations fields that should be used to guide task completion."
      },
      "create_task": {
        "name": "create_task",
        "description": "Create a new task within an existing project. You can optionally include tool and rule recommendations to guide task completion."
      },
      "update_task": {
        "name": "update_task",
        "description": "Modify a task's properties. Note: (1) completedDetails are required when setting status to 'done', (2) approved tasks cannot be modified, (3) status must follow valid transitions: not started → in progress → done. You can also update tool and rule recommendations to guide task completion."
      },
      "delete_task": {
        "name": "delete_task",
        "description": "Remove a task from a project."
      },
      "approve_task": {
        "name": "approve_task",
        "description": "Approve a completed task. Tasks must be marked as 'done' with completedDetails before approval. Note: This is a CLI-only operation that requires human intervention."
      },
      "get_next_task": {
        "name": "get_next_task",
        "description": "Get the next task to be done in a project. Returns the first non-approved task in sequence, regardless of status. The task may include toolRecommendations and ruleRecommendations fields that should be used to guide task completion."
      }
    }
  },
  "wordpress": {
    "category": "uncategorized",
    "path": "uncategorized/wordpress.json"
  },
  "tagesschau": {
    "category": "uncategorized",
    "path": "uncategorized/tagesschau.json"
  },
  "fulcra-context-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/fulcra-context-mcp.json"
  },
  "healthcare-data-hub": {
    "category": "uncategorized",
    "path": "uncategorized/healthcare-data-hub.json"
  },
  "garth-mcp-server": {
    "category": "uncategorized",
    "path": "uncategorized/garth-mcp-server.json"
  },
  "oura": {
    "category": "uncategorized",
    "path": "uncategorized/oura.json"
  },
  "senechal-health": {
    "category": "uncategorized",
    "path": "uncategorized/senechal-health.json"
  },
  "@bnb-chain/mcp": {
    "category": "uncategorized",
    "path": "uncategorized/bnb-chain-mcp.json",
    "validated": true,
    "tools": {
      "get_block_by_hash": {
        "name": "get_block_by_hash",
        "description": "Get a block by hash"
      },
      "get_block_by_number": {
        "name": "get_block_by_number",
        "description": "Get a block by number"
      },
      "get_latest_block": {
        "name": "get_latest_block",
        "description": "Get the latest block"
      },
      "is_contract": {
        "name": "is_contract",
        "description": "Check if an address is a smart contract or an externally owned account (EOA)"
      },
      "read_contract": {
        "name": "read_contract",
        "description": "Read data from a smart contract by calling a view/pure function"
      },
      "write_contract": {
        "name": "write_contract",
        "description": "Write data to a smart contract by calling a state-changing function"
      },
      "get_chain_info": {
        "name": "get_chain_info",
        "description": "Get chain information for a specific network"
      },
      "get_supported_networks": {
        "name": "get_supported_networks",
        "description": "Get list of supported networks"
      },
      "get_erc20_token_info": {
        "name": "get_erc20_token_info",
        "description": "Get ERC20 token information"
      },
      "get_native_balance": {
        "name": "get_native_balance",
        "description": "Get native token balance for an address"
      },
      "get_erc20_balance": {
        "name": "get_erc20_balance",
        "description": "Get ERC20 token balance for an address"
      },
      "create_erc20_token": {
        "name": "create_erc20_token",
        "description": "Create a new ERC20 token"
      },
      "get_transaction": {
        "name": "get_transaction",
        "description": "Get detailed information about a specific transaction by its hash. Includes sender, recipient, value, data, and more."
      },
      "estimate_gas": {
        "name": "estimate_gas",
        "description": "Estimate the gas cost for a transaction"
      },
      "get_address_from_private_key": {
        "name": "get_address_from_private_key",
        "description": "Get the EVM address derived from a private key"
      },
      "transfer_native_token": {
        "name": "transfer_native_token",
        "description": "Transfer native tokens (BNB, ETH, MATIC, etc.) to an address"
      },
      "approve_token_spending": {
        "name": "approve_token_spending",
        "description": "Approve another address (like a DeFi protocol or exchange) to spend your ERC20 tokens. This is often required before interacting with DeFi protocols."
      },
      "transfer_erc20": {
        "name": "transfer_erc20",
        "description": "Transfer ERC20 tokens to an address"
      },
      "get_nft_info": {
        "name": "get_nft_info",
        "description": "Get detailed information about a specific NFT (ERC721 token), including collection name, symbol, token URI, and current owner if available."
      },
      "get_erc1155_token_metadata": {
        "name": "get_erc1155_token_metadata",
        "description": "Get the metadata for an ERC1155 token (multi-token standard used for both fungible and non-fungible tokens). The metadata typically points to JSON metadata about the token."
      },
      "transfer_nft": {
        "name": "transfer_nft",
        "description": "Transfer an NFT to an address"
      },
      "transfer_erc1155": {
        "name": "transfer_erc1155",
        "description": "Transfer ERC1155 tokens to another address. ERC1155 is a multi-token standard that can represent both fungible and non-fungible tokens in a single contract."
      },
      "gnfd_get_account_balance": {
        "name": "gnfd_get_account_balance",
        "description": "Get the balance for an account"
      },
      "gnfd_get_all_sps": {
        "name": "gnfd_get_all_sps",
        "description": "Get a list of all storage providers in the Greenfield network"
      },
      "gnfd_create_bucket": {
        "name": "gnfd_create_bucket",
        "description": "Create a new bucket in Greenfield storage"
      },
      "gnfd_create_file": {
        "name": "gnfd_create_file",
        "description": "Upload a file to a Greenfield bucket"
      },
      "gnfd_create_folder": {
        "name": "gnfd_create_folder",
        "description": "Create a folder in a Greenfield bucket"
      },
      "gnfd_list_buckets": {
        "name": "gnfd_list_buckets",
        "description": "List all buckets owned by the account"
      },
      "gnfd_list_objects": {
        "name": "gnfd_list_objects",
        "description": "List all objects in a bucket"
      },
      "gnfd_delete_object": {
        "name": "gnfd_delete_object",
        "description": "Delete an object from a bucket"
      },
      "gnfd_delete_bucket": {
        "name": "gnfd_delete_bucket",
        "description": "Delete a bucket"
      },
      "gnfd_get_bucket_info": {
        "name": "gnfd_get_bucket_info",
        "description": "Get detailed information about a bucket"
      },
      "gnfd_get_bucket_full_info": {
        "name": "gnfd_get_bucket_full_info",
        "description": "Get bucket basic information and quota usage"
      },
      "gnfd_get_object_info": {
        "name": "gnfd_get_object_info",
        "description": "Get detailed information about an object in a bucket"
      },
      "gnfd_download_object": {
        "name": "gnfd_download_object",
        "description": "Download an object from a bucket"
      },
      "gnfd_get_payment_accounts": {
        "name": "gnfd_get_payment_accounts",
        "description": "Get the payment accounts for a given address"
      },
      "gnfd_create_payment_account": {
        "name": "gnfd_create_payment_account",
        "description": "Create a new payment account"
      },
      "gnfd_deposit_to_payment": {
        "name": "gnfd_deposit_to_payment",
        "description": "Deposit funds into a payment account"
      },
      "gnfd_withdraw_from_payment": {
        "name": "gnfd_withdraw_from_payment",
        "description": "Withdraw funds from a payment account"
      },
      "gnfd_get_payment_account_info": {
        "name": "gnfd_get_payment_account_info",
        "description": "Get the info for a payment account"
      }
    }
  },
  "whoop": {
    "category": "uncategorized",
    "path": "uncategorized/whoop.json"
  },
  "videodb-director-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/videodb-director-mcp.json"
  },
  "mcp-server-garmincn": {
    "category": "uncategorized",
    "path": "uncategorized/mcp-server-garmincn.json"
  },
  "tailscale-status": {
    "category": "uncategorized",
    "path": "uncategorized/tailscale-status.json"
  },
  "mcp-sunsama": {
    "category": "uncategorized",
    "path": "uncategorized/mcp-sunsama.json",
    "validated": false,
    "tools": {}
  },
  "umami-analytics": {
    "category": "uncategorized",
    "path": "uncategorized/umami-analytics.json"
  },
  "onos": {
    "category": "uncategorized",
    "path": "uncategorized/onos.json"
  },
  "@glifxyz/mymcpspace-mcp-server": {
    "category": "uncategorized",
    "path": "uncategorized/glifxyz-mymcpspace-mcp-server.json",
    "validated": true,
    "tools": {
      "create-post": {
        "name": "create-post",
        "description": "Create a new post with the provided content"
      },
      "reply-to-post": {
        "name": "reply-to-post",
        "description": "Create a reply to an existing post"
      },
      "toggle-like": {
        "name": "toggle-like",
        "description": "Like or unlike a post"
      },
      "get-feed": {
        "name": "get-feed",
        "description": "Get recent posts feed (50 most recent posts in reverse chronological order) along with the current topic"
      },
      "update-username": {
        "name": "update-username",
        "description": "Update the authenticated user's username"
      }
    }
  },
  "garmin-connect": {
    "category": "uncategorized",
    "path": "uncategorized/garmin-connect.json"
  },
  "canvas-lms": {
    "category": "uncategorized",
    "path": "uncategorized/canvas-lms.json"
  },
  "@noditlabs/nodit-mcp-server": {
    "category": "uncategorized",
    "path": "uncategorized/noditlabs-nodit-mcp-server.json",
    "validated": true,
    "tools": {
      "list_nodit_api_categories": {
        "name": "list_nodit_api_categories",
        "description": "Lists available Nodit API categories from Nodit Blockchain Context. To use the Nodit API tool, you must first call this tool."
      },
      "list_nodit_node_apis": {
        "name": "list_nodit_node_apis",
        "description": "Lists available Nodit API operations."
      },
      "list_nodit_data_apis": {
        "name": "list_nodit_data_apis",
        "description": "Lists available Nodit Data API operations."
      },
      "list_nodit_aptos_indexer_api_query_root": {
        "name": "list_nodit_aptos_indexer_api_query_root",
        "description": "Lists all query roots available in the Nodit Aptos Indexer GraphQL API."
      },
      "get_nodit_aptos_indexer_api_spec": {
        "name": "get_nodit_aptos_indexer_api_spec",
        "description": "Returns the GraphQL specification for a specific query root in the Nodit Aptos Indexer API."
      },
      "call_nodit_aptos_indexer_api": {
        "name": "call_nodit_aptos_indexer_api",
        "description": "Calls a Nodit Aptos Indexer API. Returns the API response. Before making the call, it's recommended to verify the detailed API specifications using the 'get_nodit_aptos_indexer_api_spec' tool. Please note that using this tool will consume your API quota."
      },
      "get_nodit_api_spec": {
        "name": "get_nodit_api_spec",
        "description": "Gets the fully resolved spec details for a Nodit Blockchain Context API operationId. Returns details as a JSON string."
      },
      "call_nodit_api": {
        "name": "call_nodit_api",
        "description": "This function calls a specific Nodit Blockchain Context API using its operationId. Before making the call, it's recommended to verify the detailed API specifications using the 'get_nodit_api_spec' tool. Please note that using this tool will consume your API quota."
      }
    }
  },
  "algorand-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/algorand-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@mzxrai/mcp-openai": {
    "category": "uncategorized",
    "path": "uncategorized/mzxrai-mcp-openai.json",
    "validated": true,
    "tools": {
      "openai_chat": {
        "name": "openai_chat",
        "description": "Use this tool when a user specifically requests to use one of OpenAI's models (gpt-4o, gpt-4o-mini, o1-preview, o1-mini). This tool sends messages to OpenAI's chat completion API using the specified model."
      }
    }
  },
  "thirdweb-mcp": {
    "category": "uncategorized",
    "path": "uncategorized/thirdweb-mcp.json"
  },
  "pox-sdn-controller": {
    "category": "uncategorized",
    "path": "uncategorized/pox-sdn-controller.json"
  },
  "zillow": {
    "category": "uncategorized",
    "path": "uncategorized/zillow.json"
  },
  "@ivotoby/contentful-management-mcp-server": {
    "category": "uncategorized",
    "path": "uncategorized/ivotoby-contentful-management-mcp-server.json",
    "validated": true,
    "tools": {
      "search_entries": {
        "name": "search_entries",
        "description": "Search for entries using query parameters. Returns a maximum of 3 items per request. Use skip parameter to paginate through results."
      },
      "create_entry": {
        "name": "create_entry",
        "description": "Create a new entry in Contentful. Before executing this function, you need to know the contentTypeId (not the content type NAME) and the fields of that contentType. You can get the fields definition by using the GET_CONTENT_TYPE tool. IMPORTANT: All field values MUST include a locale key (e.g., 'en-US') for each value, like: { title: { 'en-US': 'My Title' } }. Every field in Contentful requires a locale even for single-language content."
      },
      "get_entry": {
        "name": "get_entry",
        "description": "Retrieve an existing entry"
      },
      "update_entry": {
        "name": "update_entry",
        "description": "Update an existing entry. The handler will merge your field updates with the existing entry fields, so you only need to provide the fields and locales you want to change. IMPORTANT: All field values MUST include a locale key (e.g., 'en-US') for each value, like: { title: { 'en-US': 'My Updated Title' } }. Every field in Contentful requires a locale even for single-language content."
      },
      "delete_entry": {
        "name": "delete_entry",
        "description": "Delete an entry"
      },
      "publish_entry": {
        "name": "publish_entry",
        "description": "Publish an entry or multiple entries. Accepts either a single entryId (string) or an array of entryIds (up to 100 entries). For a single entry, it uses the standard publish operation. For multiple entries, it automatically uses bulk publishing."
      },
      "unpublish_entry": {
        "name": "unpublish_entry",
        "description": "Unpublish an entry or multiple entries. Accepts either a single entryId (string) or an array of entryIds (up to 100 entries). For a single entry, it uses the standard unpublish operation. For multiple entries, it automatically uses bulk unpublishing."
      },
      "list_assets": {
        "name": "list_assets",
        "description": "List assets in a space. Returns a maximum of 3 items per request. Use skip parameter to paginate through results."
      },
      "upload_asset": {
        "name": "upload_asset",
        "description": "Upload a new asset"
      },
      "get_asset": {
        "name": "get_asset",
        "description": "Retrieve an asset"
      },
      "update_asset": {
        "name": "update_asset",
        "description": "Update an asset"
      },
      "delete_asset": {
        "name": "delete_asset",
        "description": "Delete an asset"
      },
      "publish_asset": {
        "name": "publish_asset",
        "description": "Publish an asset"
      },
      "unpublish_asset": {
        "name": "unpublish_asset",
        "description": "Unpublish an asset"
      },
      "list_content_types": {
        "name": "list_content_types",
        "description": "List content types in a space. Returns a maximum of 10 items per request. Use skip parameter to paginate through results."
      },
      "get_content_type": {
        "name": "get_content_type",
        "description": "Get details of a specific content type"
      },
      "create_content_type": {
        "name": "create_content_type",
        "description": "Create a new content type"
      },
      "update_content_type": {
        "name": "update_content_type",
        "description": "Update an existing content type. The handler will merge your field updates with existing content type data, so you only need to provide the fields and properties you want to change."
      },
      "delete_content_type": {
        "name": "delete_content_type",
        "description": "Delete a content type"
      },
      "publish_content_type": {
        "name": "publish_content_type",
        "description": "Publish a content type"
      },
      "list_spaces": {
        "name": "list_spaces",
        "description": "List all available spaces"
      },
      "get_space": {
        "name": "get_space",
        "description": "Get details of a space"
      },
      "list_environments": {
        "name": "list_environments",
        "description": "List all environments in a space"
      },
      "create_environment": {
        "name": "create_environment",
        "description": "Create a new environment"
      },
      "delete_environment": {
        "name": "delete_environment",
        "description": "Delete an environment"
      },
      "bulk_validate": {
        "name": "bulk_validate",
        "description": "Validate multiple entries at once"
      },
      "list_ai_actions": {
        "name": "list_ai_actions",
        "description": "List all AI Actions in a space"
      },
      "get_ai_action": {
        "name": "get_ai_action",
        "description": "Get a specific AI Action by ID"
      },
      "create_ai_action": {
        "name": "create_ai_action",
        "description": "Create a new AI Action"
      },
      "update_ai_action": {
        "name": "update_ai_action",
        "description": "Update an existing AI Action"
      },
      "delete_ai_action": {
        "name": "delete_ai_action",
        "description": "Delete an AI Action"
      },
      "publish_ai_action": {
        "name": "publish_ai_action",
        "description": "Publish an AI Action"
      },
      "unpublish_ai_action": {
        "name": "unpublish_ai_action",
        "description": "Unpublish an AI Action"
      },
      "invoke_ai_action": {
        "name": "invoke_ai_action",
        "description": "Invoke an AI Action with variables"
      },
      "get_ai_action_invocation": {
        "name": "get_ai_action_invocation",
        "description": "Get the result of a previous AI Action invocation"
      }
    }
  },
  "@createveai/nexus-mcp-server": {
    "category": "aggregators",
    "path": "aggregators/createveai-nexus-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@illuminaresolutions/n8n-mcp-server": {
    "category": "aggregators",
    "path": "aggregators/illuminaresolutions-n8n-mcp-server.json",
    "validated": true,
    "tools": {
      "init-n8n": {
        "name": "init-n8n",
        "description": "Initialize connection to n8n instance. Use this tool whenever an n8n URL and API key are shared to establish the connection. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "list-workflows": {
        "name": "list-workflows",
        "description": "List all workflows from n8n. Use after init-n8n to see available workflows. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "get-workflow": {
        "name": "get-workflow",
        "description": "Retrieve a workflow by ID. Use after list-workflows to get detailed information about a specific workflow. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "create-workflow": {
        "name": "create-workflow",
        "description": "Create a new workflow in n8n. Use to set up a new workflow with optional nodes and connections. IMPORTANT: 1) Arguments must be provided as compact, single-line JSON without whitespace or newlines. 2) Must provide full workflow structure including nodes and connections arrays, even if empty. The 'active' property should not be included as it is read-only."
      },
      "update-workflow": {
        "name": "update-workflow",
        "description": "Update an existing workflow in n8n. Use after get-workflow to modify a workflow's properties, nodes, or connections. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "delete-workflow": {
        "name": "delete-workflow",
        "description": "Delete a workflow by ID. This action cannot be undone. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "activate-workflow": {
        "name": "activate-workflow",
        "description": "Activate a workflow by ID. This will enable the workflow to run. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "deactivate-workflow": {
        "name": "deactivate-workflow",
        "description": "Deactivate a workflow by ID. This will prevent the workflow from running. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "list-projects": {
        "name": "list-projects",
        "description": "List all projects from n8n. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "create-project": {
        "name": "create-project",
        "description": "Create a new project in n8n. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "delete-project": {
        "name": "delete-project",
        "description": "Delete a project by ID. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "update-project": {
        "name": "update-project",
        "description": "Update a project's name. NOTE: Requires n8n Enterprise license with project management features enabled. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "list-users": {
        "name": "list-users",
        "description": "Retrieve all users from your instance. Only available for the instance owner."
      },
      "create-users": {
        "name": "create-users",
        "description": "Create one or more users in your instance."
      },
      "get-user": {
        "name": "get-user",
        "description": "Get user by ID or email address."
      },
      "delete-user": {
        "name": "delete-user",
        "description": "Delete a user from your instance."
      },
      "list-variables": {
        "name": "list-variables",
        "description": "List all variables from n8n. NOTE: Requires n8n Enterprise license with variable management features enabled. Use after init-n8n to see available variables. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "create-variable": {
        "name": "create-variable",
        "description": "Create a new variable in n8n. NOTE: Requires n8n Enterprise license with variable management features enabled. Variables can be used across workflows to store and share data. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "delete-variable": {
        "name": "delete-variable",
        "description": "Delete a variable by ID. NOTE: Requires n8n Enterprise license with variable management features enabled. Use after list-variables to get the ID of the variable to delete. This action cannot be undone. IMPORTANT: Arguments must be provided as compact, single-line JSON without whitespace or newlines."
      },
      "create-credential": {
        "name": "create-credential",
        "description": "Create a credential that can be used by nodes of the specified type. The credential type name can be found in the n8n UI when creating credentials (e.g., 'cloudflareApi', 'githubApi', 'slackOAuth2Api'). Use get-credential-schema first to see what fields are required for the credential type you want to create."
      },
      "delete-credential": {
        "name": "delete-credential",
        "description": "Delete a credential by ID. You must be the owner of the credentials."
      },
      "get-credential-schema": {
        "name": "get-credential-schema",
        "description": "Show credential data schema for a specific credential type. The credential type name can be found in the n8n UI when creating credentials (e.g., 'cloudflareApi', 'githubApi', 'slackOAuth2Api'). This will show you what fields are required for creating credentials of this type."
      },
      "list-executions": {
        "name": "list-executions",
        "description": "Retrieve all executions from your instance with optional filtering."
      },
      "get-execution": {
        "name": "get-execution",
        "description": "Retrieve a specific execution by ID."
      },
      "delete-execution": {
        "name": "delete-execution",
        "description": "Delete a specific execution by ID."
      },
      "create-tag": {
        "name": "create-tag",
        "description": "Create a new tag in your instance."
      },
      "list-tags": {
        "name": "list-tags",
        "description": "Retrieve all tags from your instance."
      },
      "get-tag": {
        "name": "get-tag",
        "description": "Retrieve a specific tag by ID."
      },
      "update-tag": {
        "name": "update-tag",
        "description": "Update a tag's name."
      },
      "delete-tag": {
        "name": "delete-tag",
        "description": "Delete a tag by ID."
      },
      "get-workflow-tags": {
        "name": "get-workflow-tags",
        "description": "Get tags associated with a workflow."
      },
      "update-workflow-tags": {
        "name": "update-workflow-tags",
        "description": "Update tags associated with a workflow."
      },
      "generate-audit": {
        "name": "generate-audit",
        "description": "Generate a security audit for your n8n instance."
      }
    }
  },
  "openai-agents": {
    "category": "aggregators",
    "path": "aggregators/openai-agents.json"
  },
  "unichat-mcp-server": {
    "category": "aggregators",
    "path": "aggregators/unichat-mcp-server.json"
  },
  "magg": {
    "category": "aggregators",
    "path": "aggregators/magg.json"
  },
  "darp-engine": {
    "category": "aggregators",
    "path": "aggregators/darp-engine.json"
  },
  "aipolabs-mcp": {
    "category": "aggregators",
    "path": "aggregators/aipolabs-mcp.json"
  },
  "multi-service-gateway": {
    "category": "aggregators",
    "path": "aggregators/multi-service-gateway.json"
  },
  "rapidapi": {
    "category": "aggregators",
    "path": "aggregators/rapidapi.json"
  },
  "@gentoro/mcp-nodejs-server": {
    "category": "aggregators",
    "path": "aggregators/gentoro-mcp-nodejs-server.json",
    "validated": false,
    "tools": {}
  },
  "fastn": {
    "category": "aggregators",
    "path": "aggregators/fastn.json"
  },
  "@superfaceai/mcp": {
    "category": "aggregators",
    "path": "aggregators/superfaceai-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@stabgan/openrouter-mcp-multimodal": {
    "category": "aggregators",
    "path": "aggregators/stabgan-openrouter-mcp-multimodal.json",
    "validated": false,
    "tools": {}
  },
  "@tonlab/dify-mcp-server": {
    "category": "aggregators",
    "path": "aggregators/tonlab-dify-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@makehq/mcp-server": {
    "category": "aggregators",
    "path": "aggregators/makehq-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@noveum-ai/mcp-server": {
    "category": "aggregators",
    "path": "aggregators/noveum-ai-mcp-server.json",
    "validated": true,
    "tools": {
      "distance_and_duration_bw_starts_and_stops": {
        "name": "distance_and_duration_bw_starts_and_stops",
        "description": "Calculate length and driving time of the optimal routes between origin and destination points on the real road network."
      },
      "Get_audio_analysis_URL": {
        "name": "Get_audio_analysis_URL",
        "description": "This endpoint retrieves the URL of the transcription and analysis of the audio for the given request ID.\n"
      },
      "Whisper_Audio_Processing": {
        "name": "Whisper_Audio_Processing",
        "description": "API for sentece wise transcription and analysis of audio, using AI models. Make sure to call get audio analysis URL with the request ID received from this API."
      },
      "Upload": {
        "name": "Upload",
        "description": "Make a POST request to capix/faceswap/upload/"
      },
      "ImageFaceSwap": {
        "name": "ImageFaceSwap",
        "description": "Make a POST request to capix/faceswap/faceswap/v1/image"
      },
      "VideoFaceSwap": {
        "name": "VideoFaceSwap",
        "description": "Make a POST request to capix/faceswap/faceswap/v1/video"
      },
      "Result": {
        "name": "Result",
        "description": "Make a POST request to capix/faceswap/result/"
      },
      "Forward_Geocoding": {
        "name": "Forward_Geocoding",
        "description": "Obtain location(geographic coordinates) for address."
      },
      "Reverse_Geocoding": {
        "name": "Reverse_Geocoding",
        "description": "Obtain address for location."
      },
      "DNS_Checker_API": {
        "name": "DNS_Checker_API",
        "description": "Make a POST request to magicapi/dnschecker/dnschecker"
      },
      "Get_coder_output_URL": {
        "name": "Get_coder_output_URL",
        "description": "This endpoint retrieves the URL of the coding assistant's response for a given request ID.\n"
      },
      "Coding_Assistant": {
        "name": "Coding_Assistant",
        "description": "Coding Assistant. \n Make sure you call get coder output URL MCP tool to get the URL for the request id received from this API "
      },
      "A_fast_nsfw_detection_API": {
        "name": "A_fast_nsfw_detection_API",
        "description": "Make a POST request to bridgeml/nsfw!detection/nsfw_detection"
      },
      "getWhoisInfo": {
        "name": "getWhoisInfo",
        "description": "Make a GET request to magicapi/whois/whois/{domain}"
      },
      "Get_Unblurred_Image_URL": {
        "name": "Get_Unblurred_Image_URL",
        "description": "This endpoint retrieves the URL of the Unblurred image for a given request ID.\n"
      },
      "Deblurer": {
        "name": "Deblurer",
        "description": "API for image deblurring. \n Make sure you call get deblurred image URL, MCP tool to get the URL for the request id received from this API"
      },
      "text-to-image": {
        "name": "text-to-image",
        "description": "Make a POST request to bridgeml/text!to!image/text_to_image"
      },
      "Get_ageing_gif_URL": {
        "name": "Get_ageing_gif_URL",
        "description": "This endpoint retrieves the URL of the ageing gif for a given request ID.\n"
      },
      "Period_changer": {
        "name": "Period_changer",
        "description": "API for generating ageing gif using AI models. Make sure to call get ageing gif URL, with the result id received from this API"
      },
      "Search_for_places_by_text": {
        "name": "Search_for_places_by_text",
        "description": "Search for places by text string"
      },
      "Search_for_nearby_places": {
        "name": "Search_for_nearby_places",
        "description": "Search for places around location within a specified radius."
      },
      "Get_hairstyled_image_URL": {
        "name": "Get_hairstyled_image_URL",
        "description": "This endpoint retrieves the URL of the simulated hairstyle image for a given request ID.\n"
      },
      "Hair_style_simulator": {
        "name": "Hair_style_simulator",
        "description": "API for simulating different hair styles using AI models. Make sure to call get hairstyled image after with the request id received from this API."
      },
      "BridgeML_API": {
        "name": "BridgeML_API",
        "description": "Make a POST request to bridgeml/codellama/bridgeml/codellama"
      },
      "Search_Videos": {
        "name": "Search_Videos",
        "description": "Retrieve video search results based on query parameters"
      },
      "Search_Web": {
        "name": "Search_Web",
        "description": "Retrieve web search results based on query parameters"
      },
      "Search_Images": {
        "name": "Search_Images",
        "description": "Retrieve image search results based on query parameters"
      },
      "Search_News": {
        "name": "Search_News",
        "description": "Retrieve news search results based on query parameters"
      },
      "Search_Suggestions": {
        "name": "Search_Suggestions",
        "description": "Retrieve search suggestions based on query parameters"
      },
      "Spellcheck_Search": {
        "name": "Spellcheck_Search",
        "description": "Retrieve spellcheck suggestions based on query parameters"
      },
      "Check_domain_availability": {
        "name": "Check_domain_availability",
        "description": "Submit a domain name to check its availability.\n"
      },
      "best_route_for_multiple_stops": {
        "name": "best_route_for_multiple_stops",
        "description": "Finding optimal route to visit several locations."
      },
      "best_route_bw_start_and_stop": {
        "name": "best_route_bw_start_and_stop",
        "description": "Finding optimal route from a origin to a destination, passing through multiple waypoints(optional)."
      },
      "Extract_information_from_a_URL": {
        "name": "Extract_information_from_a_URL",
        "description": "Make a POST request to pipfeed/parse/extract"
      }
    }
  },
  "mcprouter": {
    "category": "aggregators",
    "path": "aggregators/mcprouter.json",
    "validated": false,
    "tools": {}
  },
  "unichat-ts-mcp-server": {
    "category": "aggregators",
    "path": "aggregators/unichat-ts-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@nullplatform/meta-mcp-proxy": {
    "category": "aggregators",
    "path": "aggregators/nullplatform-meta-mcp-proxy.json",
    "validated": false,
    "tools": {}
  },
  "@metamcp/mcp-server-metamcp": {
    "category": "aggregators",
    "path": "aggregators/metamcp-mcp-server-metamcp.json",
    "validated": true,
    "tools": {}
  },
  "llm-gateway": {
    "category": "aggregators",
    "path": "aggregators/llm-gateway.json"
  },
  "mcptoolkit": {
    "category": "aggregators",
    "path": "aggregators/mcptoolkit.json"
  },
  "all-in-one": {
    "category": "aggregators",
    "path": "aggregators/all-in-one.json"
  },
  "pocket-mcp-manager": {
    "category": "aggregators",
    "path": "aggregators/pocket-mcp-manager.json"
  },
  "gateway": {
    "category": "aggregators",
    "path": "aggregators/gateway.json"
  },
  "acp-mcp-server": {
    "category": "aggregators",
    "path": "aggregators/acp-mcp-server.json"
  },
  "gpt-mcp-proxy": {
    "category": "aggregators",
    "path": "aggregators/gpt-mcp-proxy.json"
  },
  "multi-llm-api-gateway": {
    "category": "aggregators",
    "path": "aggregators/multi-llm-api-gateway.json"
  },
  "@pinkpixel/mindbridge": {
    "category": "aggregators",
    "path": "aggregators/pinkpixel-mindbridge.json",
    "validated": true,
    "tools": {
      "getSecondOpinion": {
        "name": "getSecondOpinion",
        "description": "Get responses from various LLM providers"
      },
      "listProviders": {
        "name": "listProviders",
        "description": "List all configured LLM providers and their available models"
      },
      "listReasoningModels": {
        "name": "listReasoningModels",
        "description": "List all available models that support reasoning capabilities"
      }
    }
  },
  "dify": {
    "category": "aggregators",
    "path": "aggregators/dify.json"
  },
  "a2a-bridge": {
    "category": "aggregators",
    "path": "aggregators/a2a-bridge.json"
  },
  "union": {
    "category": "aggregators",
    "path": "aggregators/union.json"
  },
  "jentic": {
    "category": "aggregators",
    "path": "aggregators/jentic.json"
  },
  "openapi-mcp": {
    "category": "aggregators",
    "path": "aggregators/openapi-mcp.json"
  },
  "mcp-superiorapis": {
    "category": "aggregators",
    "path": "aggregators/mcp-superiorapis.json"
  },
  "llm_bridge_mcp": {
    "category": "aggregators",
    "path": "aggregators/llm_bridge_mcp.json"
  },
  "jewish-library": {
    "category": "art-and-culture",
    "path": "art-and-culture/jewish-library.json"
  },
  "@cloudwerxlab/gpt-image-1-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/cloudwerxlab-gpt-image-1-mcp.json",
    "validated": true,
    "tools": {
      "create_image": {
        "name": "create_image",
        "description": ""
      },
      "create_image_edit": {
        "name": "create_image_edit",
        "description": ""
      }
    }
  },
  "dall-e-image-generation": {
    "category": "art-and-culture",
    "path": "art-and-culture/dall-e-image-generation.json"
  },
  "photoshop": {
    "category": "art-and-culture",
    "path": "art-and-culture/photoshop.json"
  },
  "speckle": {
    "category": "art-and-culture",
    "path": "art-and-culture/speckle.json"
  },
  "processing": {
    "category": "art-and-culture",
    "path": "art-and-culture/processing.json"
  },
  "blender-open-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/blender-open-mcp.json"
  },
  "mureka-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/mureka-mcp.json"
  },
  "blender-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/blender-mcp.json"
  },
  "ableton-live": {
    "category": "art-and-culture",
    "path": "art-and-culture/ableton-live.json"
  },
  "replicate-flux-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/replicate-flux-mcp.json",
    "validated": true,
    "tools": {
      "generate_image": {
        "name": "generate_image",
        "description": "Generate an image from a text prompt using Flux Schnell model"
      },
      "generate_multiple_images": {
        "name": "generate_multiple_images",
        "description": "Generate multiple images from an array of prompts using Flux Schnell model"
      },
      "generate_image_variants": {
        "name": "generate_image_variants",
        "description": "Generate multiple variants of the same image from a single prompt"
      },
      "generate_svg": {
        "name": "generate_svg",
        "description": "Generate an SVG from a text prompt using Recraft model"
      },
      "get_prediction": {
        "name": "get_prediction",
        "description": "Get details of a specific prediction by ID"
      },
      "create_prediction": {
        "name": "create_prediction",
        "description": "Generate an prediction from a text prompt using Flux Schnell model"
      },
      "prediction_list": {
        "name": "prediction_list",
        "description": "Get a list of recent predictions from Replicate"
      }
    }
  },
  "4oimage-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/4oimage-mcp.json",
    "validated": true,
    "tools": {
      "generateImage": {
        "name": "generateImage",
        "description": "Generate images using the 4o-image API and automatically open the results in your browser.\n\nThis tool generates images based on your prompt and automatically opens them in your default browser, while also returning a clickable link.\n\nThe tool supports two modes:\n1. Text-to-image - Create new images using just a text prompt\n2. Image editing - Provide a base image and prompt for editing or style transfer\n\nThe response will include a direct link to the generated image and detailed information.\n\nVisit our website: https://4o-image.app/"
      }
    }
  },
  "bangumi-tv": {
    "category": "art-and-culture",
    "path": "art-and-culture/bangumi-tv.json"
  },
  "heygen-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/heygen-mcp.json"
  },
  "openai-image-generation": {
    "category": "art-and-culture",
    "path": "art-and-culture/openai-image-generation.json"
  },
  "grasshopper-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/grasshopper-mcp.json"
  },
  "mcp-server-ancestry": {
    "category": "art-and-culture",
    "path": "art-and-culture/mcp-server-ancestry.json"
  },
  "qgis-geographic-information-system": {
    "category": "art-and-culture",
    "path": "art-and-culture/qgis-geographic-information-system.json"
  },
  "gemini-image-generator": {
    "category": "art-and-culture",
    "path": "art-and-culture/gemini-image-generator.json"
  },
  "nasa-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/nasa-mcp.json"
  },
  "medadapt": {
    "category": "art-and-culture",
    "path": "art-and-culture/medadapt.json"
  },
  "vsegpt-image-generator": {
    "category": "art-and-culture",
    "path": "art-and-culture/vsegpt-image-generator.json"
  },
  "comfyui": {
    "category": "art-and-culture",
    "path": "art-and-culture/comfyui.json"
  },
  "comfy-mcp-server": {
    "category": "art-and-culture",
    "path": "art-and-culture/comfy-mcp-server.json"
  },
  "swedish-national-archives-(riksarkivet)": {
    "category": "art-and-culture",
    "path": "art-and-culture/swedish-national-archives--riksarkivet.json"
  },
  "wikipedia": {
    "category": "art-and-culture",
    "path": "art-and-culture/wikipedia.json"
  },
  "@jayarrowz/mcp-figma": {
    "category": "art-and-culture",
    "path": "art-and-culture/jayarrowz-mcp-figma.json",
    "validated": true,
    "tools": {
      "figma_get_me": {
        "name": "figma_get_me",
        "description": "Get the current user"
      },
      "figma_get_file": {
        "name": "figma_get_file",
        "description": "Get a Figma file by key"
      },
      "figma_get_file_nodes": {
        "name": "figma_get_file_nodes",
        "description": "Get specific nodes from a Figma file"
      },
      "figma_get_images": {
        "name": "figma_get_images",
        "description": "Render images from a Figma file"
      },
      "figma_get_image_fills": {
        "name": "figma_get_image_fills",
        "description": "Get image fills in a Figma file"
      },
      "figma_get_file_versions": {
        "name": "figma_get_file_versions",
        "description": "Get version history of a Figma file"
      },
      "figma_get_comments": {
        "name": "figma_get_comments",
        "description": "Get comments in a Figma file"
      },
      "figma_post_comment": {
        "name": "figma_post_comment",
        "description": "Add a comment to a Figma file"
      },
      "figma_delete_comment": {
        "name": "figma_delete_comment",
        "description": "Delete a comment from a Figma file"
      },
      "figma_get_comment_reactions": {
        "name": "figma_get_comment_reactions",
        "description": "Get reactions for a comment"
      },
      "figma_post_comment_reaction": {
        "name": "figma_post_comment_reaction",
        "description": "Add a reaction to a comment"
      },
      "figma_delete_comment_reaction": {
        "name": "figma_delete_comment_reaction",
        "description": "Delete a reaction from a comment"
      },
      "figma_get_team_projects": {
        "name": "figma_get_team_projects",
        "description": "Get projects in a team"
      },
      "figma_get_project_files": {
        "name": "figma_get_project_files",
        "description": "Get files in a project"
      },
      "figma_get_team_components": {
        "name": "figma_get_team_components",
        "description": "Get components in a team"
      },
      "figma_get_file_components": {
        "name": "figma_get_file_components",
        "description": "Get components in a file"
      },
      "figma_get_component": {
        "name": "figma_get_component",
        "description": "Get a component by key"
      },
      "figma_get_team_component_sets": {
        "name": "figma_get_team_component_sets",
        "description": "Get component sets in a team"
      },
      "figma_get_file_component_sets": {
        "name": "figma_get_file_component_sets",
        "description": "Get component sets in a file"
      },
      "figma_get_component_set": {
        "name": "figma_get_component_set",
        "description": "Get a component set by key"
      },
      "figma_get_team_styles": {
        "name": "figma_get_team_styles",
        "description": "Get styles in a team"
      },
      "figma_get_file_styles": {
        "name": "figma_get_file_styles",
        "description": "Get styles in a file"
      },
      "figma_get_style": {
        "name": "figma_get_style",
        "description": "Get a style by key"
      },
      "figma_post_webhook": {
        "name": "figma_post_webhook",
        "description": "Create a webhook"
      },
      "figma_get_webhook": {
        "name": "figma_get_webhook",
        "description": "Get a webhook by ID"
      },
      "figma_update_webhook": {
        "name": "figma_update_webhook",
        "description": "Update a webhook"
      },
      "figma_delete_webhook": {
        "name": "figma_delete_webhook",
        "description": "Delete a webhook"
      },
      "figma_get_team_webhooks": {
        "name": "figma_get_team_webhooks",
        "description": "Get webhooks for a team"
      },
      "figma_get_library_analytics_component_usages": {
        "name": "figma_get_library_analytics_component_usages",
        "description": "Get library analytics component usage data"
      },
      "figma_get_library_analytics_style_usages": {
        "name": "figma_get_library_analytics_style_usages",
        "description": "Get library analytics style usage data"
      },
      "figma_get_library_analytics_variable_usages": {
        "name": "figma_get_library_analytics_variable_usages",
        "description": "Get library analytics variable usage data"
      }
    }
  },
  "adobe-illustrator": {
    "category": "art-and-culture",
    "path": "art-and-culture/adobe-illustrator.json"
  },
  "figma-mcp-pro": {
    "category": "art-and-culture",
    "path": "art-and-culture/figma-mcp-pro.json",
    "validated": false,
    "tools": {}
  },
  "bibliothèque-nationale-de-france-(gallica)": {
    "category": "art-and-culture",
    "path": "art-and-culture/biblioth-que-nationale-de-france--gallica.json"
  },
  "mcp-sonic-pi": {
    "category": "art-and-culture",
    "path": "art-and-culture/mcp-sonic-pi.json"
  },
  "florence-2": {
    "category": "art-and-culture",
    "path": "art-and-culture/florence-2.json"
  },
  "flux-studio": {
    "category": "art-and-culture",
    "path": "art-and-culture/flux-studio.json"
  },
  "grok2-image-mcp-server": {
    "category": "art-and-culture",
    "path": "art-and-culture/grok2-image-mcp-server.json",
    "validated": true,
    "tools": {
      "generate_image": {
        "name": "generate_image",
        "description": "Generate an image based on a text prompt using the Grok-2 image model, ensure return the image URL to the user with markdown image format."
      }
    }
  },
  "o'reilly-learning-platform": {
    "category": "art-and-culture",
    "path": "art-and-culture/o-reilly-learning-platform.json"
  },
  "cbeta-buddhist-texts": {
    "category": "art-and-culture",
    "path": "art-and-culture/cbeta-buddhist-texts.json"
  },
  "hugging-face": {
    "category": "art-and-culture",
    "path": "art-and-culture/hugging-face.json"
  },
  "sefaria-jewish-library": {
    "category": "art-and-culture",
    "path": "art-and-culture/sefaria-jewish-library.json"
  },
  "cinema-4d": {
    "category": "art-and-culture",
    "path": "art-and-culture/cinema-4d.json"
  },
  "@deepdataspace/dinox-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/deepdataspace-dinox-mcp.json",
    "validated": false,
    "tools": {}
  },
  "leonardo-ai": {
    "category": "art-and-culture",
    "path": "art-and-culture/leonardo-ai.json"
  },
  "image-generation-(replicate)": {
    "category": "art-and-culture",
    "path": "art-and-culture/image-generation--replicate.json"
  },
  "bonsai-bim-(blender-ifc)": {
    "category": "art-and-culture",
    "path": "art-and-culture/bonsai-bim--blender-ifc.json"
  },
  "figma-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/figma-mcp.json",
    "validated": true,
    "tools": {
      "add_figma_file": {
        "name": "add_figma_file",
        "description": "Add a Figma file to your context"
      },
      "view_node": {
        "name": "view_node",
        "description": "Get a thumbnail for a specific node in a Figma file"
      },
      "read_comments": {
        "name": "read_comments",
        "description": "Get all comments on a Figma file"
      },
      "post_comment": {
        "name": "post_comment",
        "description": "Post a comment on a node in a Figma file"
      },
      "reply_to_comment": {
        "name": "reply_to_comment",
        "description": "Reply to an existing comment in a Figma file"
      }
    }
  },
  "nasa-mcp-server": {
    "category": "art-and-culture",
    "path": "art-and-culture/nasa-mcp-server.json",
    "validated": true,
    "tools": {
      "nasa/apod": {
        "name": "nasa/apod",
        "description": "Fetch NASA's Astronomy Picture of the Day"
      },
      "nasa/neo": {
        "name": "nasa/neo",
        "description": "Near Earth Object Web Service - information about asteroids"
      },
      "nasa/epic": {
        "name": "nasa/epic",
        "description": "Earth Polychromatic Imaging Camera - views of Earth"
      },
      "nasa/gibs": {
        "name": "nasa/gibs",
        "description": "Global Imagery Browse Services - satellite imagery"
      },
      "nasa/cmr": {
        "name": "nasa/cmr",
        "description": "NASA Common Metadata Repository - search for NASA data collections"
      },
      "nasa/firms": {
        "name": "nasa/firms",
        "description": "NASA Fire Information for Resource Management System - fire data"
      },
      "nasa/images": {
        "name": "nasa/images",
        "description": "NASA Image and Video Library - search NASA's media archive"
      },
      "nasa/exoplanet": {
        "name": "nasa/exoplanet",
        "description": "NASA Exoplanet Archive - data about planets beyond our solar system"
      },
      "nasa/donki": {
        "name": "nasa/donki",
        "description": "Space Weather Database Of Notifications, Knowledge, Information"
      },
      "nasa/mars-rover": {
        "name": "nasa/mars-rover",
        "description": "NASA Mars Rover Photos - images from Mars rovers"
      },
      "nasa/eonet": {
        "name": "nasa/eonet",
        "description": "Earth Observatory Natural Event Tracker - natural events data"
      },
      "nasa/sounds": {
        "name": "nasa/sounds",
        "description": "NASA Sounds and Ringtones - audio from NASA missions"
      },
      "nasa/power": {
        "name": "nasa/power",
        "description": "Prediction of Worldwide Energy Resources - meteorological data"
      }
    }
  },
  "@recraft-ai/mcp-recraft-server": {
    "category": "art-and-culture",
    "path": "art-and-culture/recraft-ai-mcp-recraft-server.json",
    "validated": true,
    "tools": {
      "generate_image": {
        "name": "generate_image",
        "description": "Generate an image using Recraft AI from a text prompt.\nYou can specify the image size, style, model, and number of images to generate.\nYou don't need to change default parameters if you don't have any specific requirements.\nYou can use styles to refine the image generation, and also to generate raster or vector images.\nGenerated images will be saved to local storage, paths to them and their previews will be returned in the response."
      },
      "image_to_image": {
        "name": "image_to_image",
        "description": "Generate an image using Recraft AI from an input image and a text prompt.\nYou can specify the reference input image, style, model, and number of images to generate.\nYou should provide the same style/substyle/styleID settings as were used for input image generation (if exists) if there are no specific requirements to change the style.\nOther parameters are recommended to keep default if you don't have any specific requirements on them.\nYou can use styles to refine the image generation, and also to generate raster or vector images.\nGenerated images will be saved to local storage, paths to them and their previews will be returned in the response."
      },
      "create_style": {
        "name": "create_style",
        "description": "Create a style in Recraft AI from the set of style reference images.\nA style is extracted from the provided images and can be used in image generation tools.\nID of the created style will be returned in the response."
      },
      "vectorize_image": {
        "name": "vectorize_image",
        "description": "Vectorize an input image using Recraft AI.\nThis operation takes an input image and returns a vector SVG image, close to it.\nResulting image will be saved to local storage, path to it and its preview will be returned in the response."
      },
      "remove_background": {
        "name": "remove_background",
        "description": "Remove background in the input image using Recraft AI.\nThis operation takes an input image and returns the same image with detected background removed. Raster image will be always returned.\nResulting image will be saved to local storage, path to it and its preview will be returned in the response."
      },
      "replace_background": {
        "name": "replace_background",
        "description": "Generate an image using Recraft AI from an input image with its detected background replaced based on the prompt.\nYou can specify the input image, style, model, and number of images to generate.\nYou should provide the same style/substyle/styleID settings as were used for input image generation (if exists) if there are no specific requirements to change the style.\nOther parameters are recommended to keep default if you don't have any specific requirements on them.\nYou can use styles to refine the image background generation, and also to generate raster or vector images.\nGenerated images will be saved to local storage, paths to them and their previews will be returned in the response."
      },
      "crisp_upscale": {
        "name": "crisp_upscale",
        "description": "Crisp upscale of the input image using Recraft AI.\nThis operation takes an input image and returns an upscaled image, making the image sharper and cleaner.\nThis version of upscale is much cheaper and faster than creative upscale.\nResulting image will be saved to local storage, path to it and its preview will be returned in the response."
      },
      "creative_upscale": {
        "name": "creative_upscale",
        "description": "Creative upscale of the input image using Recraft AI.\nThis operation takes an input image and returns an upscaled image, boosting resolution with a focus on refining small details and faces.\nThis version of upscale is expensive and slower than crisp upscale.\nResulting image will be saved to local storage, path to it and its preview will be returned in the response."
      },
      "get_user": {
        "name": "get_user",
        "description": "Get information about the current Recraft AI API user (their email, name, and credit balance)."
      }
    }
  },
  "scenario-ai": {
    "category": "art-and-culture",
    "path": "art-and-culture/scenario-ai.json"
  },
  "together-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/together-mcp.json",
    "validated": true,
    "tools": {
      "generate_image": {
        "name": "generate_image",
        "description": "Generate an image using Together AI API"
      }
    }
  },
  "ableton-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/ableton-mcp.json"
  },
  "apple-books-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/apple-books-mcp.json"
  },
  "discogs-mcp-server": {
    "category": "art-and-culture",
    "path": "art-and-culture/discogs-mcp-server.json",
    "validated": true,
    "tools": {
      "get_release": {
        "name": "get_release",
        "description": "Get a release"
      },
      "get_release_rating_by_user": {
        "name": "get_release_rating_by_user",
        "description": "Retrieves the release's rating for a given user"
      },
      "edit_release_rating": {
        "name": "edit_release_rating",
        "description": "Updates the release's rating for a given user"
      },
      "delete_release_rating": {
        "name": "delete_release_rating",
        "description": "Deletes the release's rating for a given user"
      },
      "get_release_community_rating": {
        "name": "get_release_community_rating",
        "description": "Retrieves the release community rating average and count"
      },
      "get_master_release": {
        "name": "get_master_release",
        "description": "Get a master release"
      },
      "get_master_release_versions": {
        "name": "get_master_release_versions",
        "description": "Retrieves a list of all Releases that are versions of this master"
      },
      "get_artist": {
        "name": "get_artist",
        "description": "Get an artist"
      },
      "get_artist_releases": {
        "name": "get_artist_releases",
        "description": "Get an artist's releases"
      },
      "get_label": {
        "name": "get_label",
        "description": "Get a label"
      },
      "get_label_releases": {
        "name": "get_label_releases",
        "description": "Returns a list of Releases associated with the label"
      },
      "search": {
        "name": "search",
        "description": "Issue a search query to the Discogs database"
      },
      "get_user_inventory": {
        "name": "get_user_inventory",
        "description": "Returns the list of listings in a user's inventory"
      },
      "get_marketplace_listing": {
        "name": "get_marketplace_listing",
        "description": "Get a listing from the marketplace"
      },
      "create_marketplace_listing": {
        "name": "create_marketplace_listing",
        "description": "Create a new marketplace listing"
      },
      "update_marketplace_listing": {
        "name": "update_marketplace_listing",
        "description": "Update a marketplace listing"
      },
      "delete_marketplace_listing": {
        "name": "delete_marketplace_listing",
        "description": "Delete a marketplace listing"
      },
      "get_marketplace_order": {
        "name": "get_marketplace_order",
        "description": "Get a marketplace order"
      },
      "edit_marketplace_order": {
        "name": "edit_marketplace_order",
        "description": "Edit a marketplace order"
      },
      "get_marketplace_orders": {
        "name": "get_marketplace_orders",
        "description": "Get a list of marketplace orders"
      },
      "get_marketplace_order_messages": {
        "name": "get_marketplace_order_messages",
        "description": "Get a list of an order's messages"
      },
      "create_marketplace_order_message": {
        "name": "create_marketplace_order_message",
        "description": "Adds a new message to the order's message log"
      },
      "get_marketplace_release_stats": {
        "name": "get_marketplace_release_stats",
        "description": "Retrieve marketplace statistics for the provided Release ID"
      },
      "inventory_export": {
        "name": "inventory_export",
        "description": "Request an export of your inventory as a CSV"
      },
      "get_inventory_exports": {
        "name": "get_inventory_exports",
        "description": "Get a list of all recent exports of your inventory"
      },
      "get_inventory_export": {
        "name": "get_inventory_export",
        "description": "Get details about an inventory export"
      },
      "download_inventory_export": {
        "name": "download_inventory_export",
        "description": "Download an inventory export as a CSV"
      },
      "get_user_identity": {
        "name": "get_user_identity",
        "description": "Retrieve basic information about the authenticated user"
      },
      "get_user_profile": {
        "name": "get_user_profile",
        "description": "Retrieve a user by username"
      },
      "edit_user_profile": {
        "name": "edit_user_profile",
        "description": "Edit a user's profile data"
      },
      "get_user_submissions": {
        "name": "get_user_submissions",
        "description": "Retrieve a user's submissions by username"
      },
      "get_user_contributions": {
        "name": "get_user_contributions",
        "description": "Retrieve a user's contributions by username"
      },
      "get_user_collection_folders": {
        "name": "get_user_collection_folders",
        "description": "Retrieve a list of folders in a user's collection"
      },
      "create_user_collection_folder": {
        "name": "create_user_collection_folder",
        "description": "Create a new folder in a user's collection"
      },
      "get_user_collection_folder": {
        "name": "get_user_collection_folder",
        "description": "Retrieve metadata about a folder in a user's collection"
      },
      "edit_user_collection_folder": {
        "name": "edit_user_collection_folder",
        "description": "Edit a folder's metadata. Folders 0 and 1 cannot be renamed."
      },
      "delete_user_collection_folder": {
        "name": "delete_user_collection_folder",
        "description": "Delete a folder from a user's collection. A folder must be empty before it can be deleted."
      },
      "find_release_in_user_collection": {
        "name": "find_release_in_user_collection",
        "description": "Find a release in a user's collection"
      },
      "get_user_collection_items": {
        "name": "get_user_collection_items",
        "description": "Retrieve a list of items in a user's collection"
      },
      "add_release_to_user_collection_folder": {
        "name": "add_release_to_user_collection_folder",
        "description": "Add a release to a folder in a user's collection. The folder_id must be non-zero."
      },
      "rate_release_in_user_collection": {
        "name": "rate_release_in_user_collection",
        "description": "Rate a release in a user's collection. The folder_id must be non-zero."
      },
      "move_release_in_user_collection": {
        "name": "move_release_in_user_collection",
        "description": "Move a release in a user's collection to another folder"
      },
      "delete_release_from_user_collection_folder": {
        "name": "delete_release_from_user_collection_folder",
        "description": "Remove an instance of a release from a user's collection folder. The folder_id must be non-zero."
      },
      "get_user_collection_custom_fields": {
        "name": "get_user_collection_custom_fields",
        "description": "Retrieve a list of user-defined collection notes fields. These fields are available on every release in the collection."
      },
      "edit_user_collection_custom_field_value": {
        "name": "edit_user_collection_custom_field_value",
        "description": "Edit a custom field value for a release in a user's collection"
      },
      "get_user_collection_value": {
        "name": "get_user_collection_value",
        "description": "Returns the minimum, median, and maximum value of a user's collection"
      },
      "get_user_wantlist": {
        "name": "get_user_wantlist",
        "description": "Returns the list of releases in a user's wantlist"
      },
      "add_to_wantlist": {
        "name": "add_to_wantlist",
        "description": "Add a release to a user's wantlist"
      },
      "edit_item_in_wantlist": {
        "name": "edit_item_in_wantlist",
        "description": "Edit a release in a user's wantlist"
      },
      "delete_item_in_wantlist": {
        "name": "delete_item_in_wantlist",
        "description": "Delete a release from a user's wantlist"
      },
      "get_user_lists": {
        "name": "get_user_lists",
        "description": "Get a user's lists"
      },
      "get_list": {
        "name": "get_list",
        "description": "Get a list by ID"
      },
      "fetch_image": {
        "name": "fetch_image",
        "description": "Fetch an image by URL"
      }
    }
  },
  "adobe-photoshop-controller": {
    "category": "art-and-culture",
    "path": "art-and-culture/adobe-photoshop-controller.json"
  },
  "sketchfab-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/sketchfab-mcp.json"
  },
  "@kailashg101/mcp-figma-to-code": {
    "category": "art-and-culture",
    "path": "art-and-culture/kailashg101-mcp-figma-to-code.json",
    "validated": true,
    "tools": {
      "extract-components": {
        "name": "extract-components",
        "description": "Extract all components from Figma file and get all graphql queries and mutations"
      },
      "extract-latest-components": {
        "name": "extract-latest-components",
        "description": "Extract newly added components from Figma file"
      },
      "extract-one-component": {
        "name": "extract-one-component",
        "description": "Extract a single component from Figma file"
      }
    }
  },
  "image-generation": {
    "category": "art-and-culture",
    "path": "art-and-culture/image-generation.json"
  },
  "together-ai-image-generation": {
    "category": "art-and-culture",
    "path": "art-and-culture/together-ai-image-generation.json"
  },
  "trakt": {
    "category": "art-and-culture",
    "path": "art-and-culture/trakt.json"
  },
  "biomcp-python": {
    "category": "art-and-culture",
    "path": "art-and-culture/biomcp-python.json"
  },
  "minimax-mcp-js": {
    "category": "art-and-culture",
    "path": "art-and-culture/minimax-mcp-js.json",
    "validated": true,
    "tools": {
      "text_to_audio": {
        "name": "text_to_audio",
        "description": "Convert text to audio with a given voice and save the output audio file to a given directory. If no directory is provided, the file will be saved to desktop. If no voice ID is provided, the default voice will be used.\n\nNote: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user."
      },
      "list_voices": {
        "name": "list_voices",
        "description": "List all available voices. Only supported when api_host is https://api.minimax.chat."
      },
      "play_audio": {
        "name": "play_audio",
        "description": "Play an audio file. Supports WAV and MP3 formats. Does not support video."
      },
      "voice_clone": {
        "name": "voice_clone",
        "description": "Clone a voice using the provided audio file. New voices will incur costs when first used.\n\nNote: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user."
      },
      "text_to_image": {
        "name": "text_to_image",
        "description": "Generate images based on text prompts.\n\nNote: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user."
      },
      "generate_video": {
        "name": "generate_video",
        "description": "Generate a video based on text prompts.\n\nNote: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user."
      },
      "image_to_video": {
        "name": "image_to_video",
        "description": "Generate a video based on an image.\n\nNote: This tool calls MiniMax API and may incur costs. Use only when explicitly requested by the user."
      },
      "query_video_generation": {
        "name": "query_video_generation",
        "description": "Query the status of a video generation task."
      }
    }
  },
  "zotero": {
    "category": "art-and-culture",
    "path": "art-and-culture/zotero.json"
  },
  "fal-ai-image-generation": {
    "category": "art-and-culture",
    "path": "art-and-culture/fal-ai-image-generation.json"
  },
  "midjourney": {
    "category": "art-and-culture",
    "path": "art-and-culture/midjourney.json"
  },
  "image-gen-(jimeng-ai)": {
    "category": "art-and-culture",
    "path": "art-and-culture/image-gen--jimeng-ai.json"
  },
  "dracor-(drama-corpora-project)": {
    "category": "art-and-culture",
    "path": "art-and-culture/dracor--drama-corpora-project.json"
  },
  "penpot-mcp": {
    "category": "art-and-culture",
    "path": "art-and-culture/penpot-mcp.json"
  },
  "undetected-chromedriver": {
    "category": "browser-automation",
    "path": "browser-automation/undetected-chromedriver.json"
  },
  "pyppeteer-browser-automation": {
    "category": "browser-automation",
    "path": "browser-automation/pyppeteer-browser-automation.json"
  },
  "mcp-jinaai-grounding": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-jinaai-grounding.json",
    "validated": true,
    "tools": {
      "ground_statement": {
        "name": "ground_statement",
        "description": "Ground a statement using real-time web search results to check factuality. When providing URLs via the references parameter, ensure they are publicly accessible and contain relevant information about the statement. If the URLs do not contain the necessary information, try removing the URL restrictions to search the entire web."
      }
    }
  },
  "uber-eats-automation": {
    "category": "browser-automation",
    "path": "browser-automation/uber-eats-automation.json"
  },
  "web-scraper": {
    "category": "browser-automation",
    "path": "browser-automation/web-scraper.json"
  },
  "x-(twitter)": {
    "category": "browser-automation",
    "path": "browser-automation/x--twitter.json"
  },
  "raccoon-ai-(lam-api)": {
    "category": "browser-automation",
    "path": "browser-automation/raccoon-ai--lam-api.json"
  },
  "mcp-pyautogui-server": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-pyautogui-server.json"
  },
  "scrapling-fetch-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/scrapling-fetch-mcp.json"
  },
  "moling": {
    "category": "browser-automation",
    "path": "browser-automation/moling.json"
  },
  "browser-operator": {
    "category": "browser-automation",
    "path": "browser-automation/browser-operator.json"
  },
  "simple-website-fetcher": {
    "category": "browser-automation",
    "path": "browser-automation/simple-website-fetcher.json"
  },
  "linkedin-profile-scraper": {
    "category": "browser-automation",
    "path": "browser-automation/linkedin-profile-scraper.json"
  },
  "@browserstack/mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/browserstack-mcp-server.json",
    "validated": true,
    "tools": {
      "accessibilityExpert": {
        "name": "accessibilityExpert",
        "description": "🚨 REQUIRED: Use this tool for any accessibility/a11y/WCAG questions. Do NOT answer accessibility questions directly - always use this tool."
      },
      "startAccessibilityScan": {
        "name": "startAccessibilityScan",
        "description": "Start an accessibility scan via BrowserStack and retrieve a local CSV report path."
      },
      "runTestsOnBrowserStack": {
        "name": "runTestsOnBrowserStack",
        "description": "Use this tool to get instructions for running tests on BrowserStack and browserstack percy"
      },
      "runAppLiveSession": {
        "name": "runAppLiveSession",
        "description": "Use this tool when user wants to manually check their app on a particular mobile device using BrowserStack's cloud infrastructure. Can be used to debug crashes, slow performance, etc."
      },
      "runBrowserLiveSession": {
        "name": "runBrowserLiveSession",
        "description": "Launch a BrowserStack Live session (desktop or mobile)."
      },
      "createProjectOrFolder": {
        "name": "createProjectOrFolder",
        "description": "Create a project and/or folder in BrowserStack Test Management."
      },
      "createTestCase": {
        "name": "createTestCase",
        "description": "Use this tool to create a test case in BrowserStack Test Management."
      },
      "listTestCases": {
        "name": "listTestCases",
        "description": "List test cases in a project with optional filters (status, priority, custom fields, etc.)"
      },
      "createTestRun": {
        "name": "createTestRun",
        "description": "Create a test run in BrowserStack Test Management."
      },
      "listTestRuns": {
        "name": "listTestRuns",
        "description": "List test runs in a project with optional filters (date ranges, assignee, state, etc.)"
      },
      "updateTestRun": {
        "name": "updateTestRun",
        "description": "Update a test run in BrowserStack Test Management."
      },
      "addTestResult": {
        "name": "addTestResult",
        "description": "Add a test result to a specific test run via BrowserStack Test Management API."
      },
      "uploadProductRequirementFile": {
        "name": "uploadProductRequirementFile",
        "description": "Upload files (e.g., PDRs, PDFs) to BrowserStack Test Management and retrieve a file mapping ID. This is utilized for generating test cases from files and is part of the Test Case Generator AI Agent in BrowserStack."
      },
      "createTestCasesFromFile": {
        "name": "createTestCasesFromFile",
        "description": "Generate test cases from a file in BrowserStack Test Management using the Test Case Generator AI Agent."
      },
      "createLCASteps": {
        "name": "createLCASteps",
        "description": "Generate Low Code Automation (LCA) steps for a test case in BrowserStack Test Management using the Low Code Automation Agent."
      },
      "takeAppScreenshot": {
        "name": "takeAppScreenshot",
        "description": "Use this tool to take a screenshot of an app running on a BrowserStack device. This is useful for visual testing and debugging."
      },
      "getFailureLogs": {
        "name": "getFailureLogs",
        "description": "Fetch various types of logs from a BrowserStack session. Supports both automate and app-automate sessions."
      },
      "fetchAutomationScreenshots": {
        "name": "fetchAutomationScreenshots",
        "description": "Fetch and process screenshots from a BrowserStack Automate session"
      },
      "fetchSelfHealedSelectors": {
        "name": "fetchSelfHealedSelectors",
        "description": "Retrieves AI-generated, self-healed selectors for a BrowserStack Automate session to resolve flaky tests caused by dynamic DOM changes."
      }
    }
  },
  "url2snap-(website-screenshot)": {
    "category": "browser-automation",
    "path": "browser-automation/url2snap--website-screenshot.json"
  },
  "ai-cursor-scraping-assistant": {
    "category": "browser-automation",
    "path": "browser-automation/ai-cursor-scraping-assistant.json"
  },
  "doc-scraper-(jina.ai)": {
    "category": "browser-automation",
    "path": "browser-automation/doc-scraper--jina-ai.json"
  },
  "@deventerprisesoftware/scrapi-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/deventerprisesoftware-scrapi-mcp.json",
    "validated": true,
    "tools": {
      "scrape_url_html": {
        "name": "scrape_url_html",
        "description": "Use a URL to scrape a website using the ScrAPI service and retrieve the result as HTML. Use this for scraping website content that is difficult to access because of bot detection, captchas or even geolocation restrictions. The result will be in HTML which is preferable if advanced parsing is required."
      },
      "scrape_url_markdown": {
        "name": "scrape_url_markdown",
        "description": "Use a URL to scrape a website using the ScrAPI service and retrieve the result as Markdown. Use this for scraping website content that is difficult to access because of bot detection, captchas or even geolocation restrictions. The result will be in Markdown which is preferable if the text content of the webpage is important and not the structural information of the page."
      }
    }
  },
  "mcp-playwright-scraper": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-playwright-scraper.json"
  },
  "omniparser": {
    "category": "browser-automation",
    "path": "browser-automation/omniparser.json"
  },
  "rayon-design-cad": {
    "category": "browser-automation",
    "path": "browser-automation/rayon-design-cad.json"
  },
  "mcp_server_browser_use": {
    "category": "browser-automation",
    "path": "browser-automation/mcp_server_browser_use.json"
  },
  "mcp-rquest": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-rquest.json"
  },
  "browser-use": {
    "category": "browser-automation",
    "path": "browser-automation/browser-use.json"
  },
  "xiaohongshu-search-and-comment": {
    "category": "browser-automation",
    "path": "browser-automation/xiaohongshu-search-and-comment.json"
  },
  "web-ux-evaluator": {
    "category": "browser-automation",
    "path": "browser-automation/web-ux-evaluator.json"
  },
  "jina.ai-reader": {
    "category": "browser-automation",
    "path": "browser-automation/jina-ai-reader.json"
  },
  "x-tweets": {
    "category": "browser-automation",
    "path": "browser-automation/x-tweets.json"
  },
  "crawl4ai-(web-scraping-&-crawling)": {
    "category": "browser-automation",
    "path": "browser-automation/crawl4ai--web-scraping---crawling.json"
  },
  "playwright-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/playwright-mcp.json"
  },
  "browser-automation": {
    "category": "browser-automation",
    "path": "browser-automation/browser-automation.json"
  },
  "browserloop": {
    "category": "browser-automation",
    "path": "browser-automation/browserloop.json",
    "validated": false,
    "tools": {}
  },
  "chrome-browser-automation": {
    "category": "browser-automation",
    "path": "browser-automation/chrome-browser-automation.json"
  },
  "@octomind/octomind-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/octomind-octomind-mcp.json",
    "validated": true,
    "tools": {
      "search": {
        "name": "search",
        "description": "the search tool can be used to search the octomind documentation for a given query.\n    The search results are returned as a list of links to the documentation."
      },
      "getTestCase": {
        "name": "getTestCase",
        "description": "the getTestCase tool can retrieve a test case for a given test target and test case id.\n    A test case id is unique to the test target. The test case includes a set of interactions and assertions.\n    it is the result of a discovery or a manual creation."
      },
      "executeTests": {
        "name": "executeTests",
        "description": "the executeTests tool can trigger a set of tests for a given test target.\n    The test target id is unique to the test target. The tests are executed on the provided url.\n    The context object is used to provide information about the source of the test execution."
      },
      "getEnvironments": {
        "name": "getEnvironments",
        "description": "the getEnvironments tool can retrieve environments for a given test target.\n   an environment represents a specific setup or deployments for a test target. It include a test account when necsesary\n    to login, a header configuration, a discovery url and a set of variables."
      },
      "createEnvironment": {
        "name": "createEnvironment",
        "description": "the createEnvironment tool can create an environment for a given test target.\n    an environment represents a specific setup or deployments for a test target. It include a test account when necsesary\n    to login, a header configuration, a discovery url and a set of variables."
      },
      "updateEnvironment": {
        "name": "updateEnvironment",
        "description": "the updateEnvironment tool can update an environment for a given test target.\n    an environment represents a specific setup or deployments for a test target. It include a test account when necsesary\n    to login, a header configuration, a discovery url and a set of variables."
      },
      "deleteEnvironment": {
        "name": "deleteEnvironment",
        "description": "deleteEnvironment tool can delete an environment for a given test target.\n    The environment id is unique to the test target. The call is not reversible.\n    an environment represents a specific setup or deployments for a test target. It include a test account when necsesary\n    to login, a header configuration, a discovery url and a set of variables."
      },
      "getTestReports": {
        "name": "getTestReports",
        "description": "the getTestReports tool can retrieve test reports for a given test target.\n    Test reports are generated when set of tests are executed. The test report id is unique to the test target."
      },
      "getTestReport": {
        "name": "getTestReport",
        "description": "the getTestReport tool can retrieve a test report for a given test target and test report id.\n    A test report id is generated when a set of test are executed on\n    a test target. The test report id is unique to the test target."
      },
      "discovery": {
        "name": "discovery",
        "description": "the discovery tool can create a test case on a given test target with a test case description or prompt.\n    One can either start from the predefined url for that test case or provide a new entry point url."
      },
      "getPrivateLocations": {
        "name": "getPrivateLocations",
        "description": "the getPrivateLocations tool can retrieve all private locations configured for that org. \n    A private location is a server that can be used to access a test target behind a firewall or VPN."
      },
      "getTestTargets": {
        "name": "getTestTargets",
        "description": "the getTestTargets tool can retrieve all test targets or projects.\n    Test targets represent applications or services that can be tested using Octomind."
      },
      "createTestTarget": {
        "name": "createTestTarget",
        "description": "the createTestTarget tool can create a new test target or project.\n    A test target represents an application or service that can be tested using Octomind."
      },
      "updateTestTarget": {
        "name": "updateTestTarget",
        "description": "the updateTestTarget tool can update an existing test target.\n    A test target represents an application or service that can be tested using Octomind."
      },
      "deleteTestTarget": {
        "name": "deleteTestTarget",
        "description": "the deleteTestTarget tool can delete an existing test target.\n    This operation cannot be undone."
      },
      "getVersion": {
        "name": "getVersion",
        "description": "Returns the current version of the Octomind MCP server"
      },
      "getTestCases": {
        "name": "getTestCases",
        "description": "the getTestCases tool can retrieve test cases for a given test target with optional filtering.\n    Test cases can be filtered by various criteria such as status, description, or tags."
      },
      "updateTestCase": {
        "name": "updateTestCase",
        "description": "the updateTestCase tool can update specific properties of a test case.\n    This allows modifying test case details such as description, status, or folderName."
      }
    }
  },
  "browser-use-mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/browser-use-mcp-server.json"
  },
  "browser": {
    "category": "browser-automation",
    "path": "browser-automation/browser.json"
  },
  "website-downloader-(windows)": {
    "category": "browser-automation",
    "path": "browser-automation/website-downloader--windows.json"
  },
  "notte-browser": {
    "category": "browser-automation",
    "path": "browser-automation/notte-browser.json"
  },
  "browser-scraping-&-search": {
    "category": "browser-automation",
    "path": "browser-automation/browser-scraping---search.json"
  },
  "computer-control-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/computer-control-mcp.json"
  },
  "simple-tool-(website-fetcher)": {
    "category": "browser-automation",
    "path": "browser-automation/simple-tool--website-fetcher.json"
  },
  "skyvern": {
    "category": "browser-automation",
    "path": "browser-automation/skyvern.json"
  },
  "lsd-sql": {
    "category": "browser-automation",
    "path": "browser-automation/lsd-sql.json"
  },
  "firecrawl-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/firecrawl-mcp.json",
    "validated": true,
    "tools": {
      "firecrawl_scrape": {
        "name": "firecrawl_scrape",
        "description": "\nScrape content from a single URL with advanced options.\n\n**Best for:** Single page content extraction, when you know exactly which page contains the information.\n**Not recommended for:** Multiple pages (use batch_scrape), unknown page (use search), structured data (use extract).\n**Common mistakes:** Using scrape for a list of URLs (use batch_scrape instead).\n**Prompt Example:** \"Get the content of the page at https://example.com.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_scrape\",\n  \"arguments\": {\n    \"url\": \"https://example.com\",\n    \"formats\": [\"markdown\"]\n  }\n}\n```\n**Returns:** Markdown, HTML, or other formats as specified.\n"
      },
      "firecrawl_map": {
        "name": "firecrawl_map",
        "description": "\nMap a website to discover all indexed URLs on the site.\n\n**Best for:** Discovering URLs on a website before deciding what to scrape; finding specific sections of a website.\n**Not recommended for:** When you already know which specific URL you need (use scrape or batch_scrape); when you need the content of the pages (use scrape after mapping).\n**Common mistakes:** Using crawl to discover URLs instead of map.\n**Prompt Example:** \"List all URLs on example.com.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_map\",\n  \"arguments\": {\n    \"url\": \"https://example.com\"\n  }\n}\n```\n**Returns:** Array of URLs found on the site.\n"
      },
      "firecrawl_crawl": {
        "name": "firecrawl_crawl",
        "description": "\nStarts an asynchronous crawl job on a website and extracts content from all pages.\n\n**Best for:** Extracting content from multiple related pages, when you need comprehensive coverage.\n**Not recommended for:** Extracting content from a single page (use scrape); when token limits are a concern (use map + batch_scrape); when you need fast results (crawling can be slow).\n**Warning:** Crawl responses can be very large and may exceed token limits. Limit the crawl depth and number of pages, or use map + batch_scrape for better control.\n**Common mistakes:** Setting limit or maxDepth too high (causes token overflow); using crawl for a single page (use scrape instead).\n**Prompt Example:** \"Get all blog posts from the first two levels of example.com/blog.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_crawl\",\n  \"arguments\": {\n    \"url\": \"https://example.com/blog/*\",\n    \"maxDepth\": 2,\n    \"limit\": 100,\n    \"allowExternalLinks\": false,\n    \"deduplicateSimilarURLs\": true\n  }\n}\n```\n**Returns:** Operation ID for status checking; use firecrawl_check_crawl_status to check progress.\n"
      },
      "firecrawl_check_crawl_status": {
        "name": "firecrawl_check_crawl_status",
        "description": "\nCheck the status of a crawl job.\n\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_check_crawl_status\",\n  \"arguments\": {\n    \"id\": \"550e8400-e29b-41d4-a716-446655440000\"\n  }\n}\n```\n**Returns:** Status and progress of the crawl job, including results if available.\n"
      },
      "firecrawl_search": {
        "name": "firecrawl_search",
        "description": "\nSearch the web and optionally extract content from search results.\n\n**Best for:** Finding specific information across multiple websites, when you don't know which website has the information; when you need the most relevant content for a query.\n**Not recommended for:** When you already know which website to scrape (use scrape); when you need comprehensive coverage of a single website (use map or crawl).\n**Common mistakes:** Using crawl or map for open-ended questions (use search instead).\n**Prompt Example:** \"Find the latest research papers on AI published in 2023.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_search\",\n  \"arguments\": {\n    \"query\": \"latest AI research papers 2023\",\n    \"limit\": 5,\n    \"lang\": \"en\",\n    \"country\": \"us\",\n    \"scrapeOptions\": {\n      \"formats\": [\"markdown\"],\n      \"onlyMainContent\": true\n    }\n  }\n}\n```\n**Returns:** Array of search results (with optional scraped content).\n"
      },
      "firecrawl_extract": {
        "name": "firecrawl_extract",
        "description": "\nExtract structured information from web pages using LLM capabilities. Supports both cloud AI and self-hosted LLM extraction.\n\n**Best for:** Extracting specific structured data like prices, names, details.\n**Not recommended for:** When you need the full content of a page (use scrape); when you're not looking for specific structured data.\n**Arguments:**\n- urls: Array of URLs to extract information from\n- prompt: Custom prompt for the LLM extraction\n- systemPrompt: System prompt to guide the LLM\n- schema: JSON schema for structured data extraction\n- allowExternalLinks: Allow extraction from external links\n- enableWebSearch: Enable web search for additional context\n- includeSubdomains: Include subdomains in extraction\n**Prompt Example:** \"Extract the product name, price, and description from these product pages.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_extract\",\n  \"arguments\": {\n    \"urls\": [\"https://example.com/page1\", \"https://example.com/page2\"],\n    \"prompt\": \"Extract product information including name, price, and description\",\n    \"systemPrompt\": \"You are a helpful assistant that extracts product information\",\n    \"schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": { \"type\": \"string\" },\n        \"price\": { \"type\": \"number\" },\n        \"description\": { \"type\": \"string\" }\n      },\n      \"required\": [\"name\", \"price\"]\n    },\n    \"allowExternalLinks\": false,\n    \"enableWebSearch\": false,\n    \"includeSubdomains\": false\n  }\n}\n```\n**Returns:** Extracted structured data as defined by your schema.\n"
      },
      "firecrawl_deep_research": {
        "name": "firecrawl_deep_research",
        "description": "\nConduct deep web research on a query using intelligent crawling, search, and LLM analysis.\n\n**Best for:** Complex research questions requiring multiple sources, in-depth analysis.\n**Not recommended for:** Simple questions that can be answered with a single search; when you need very specific information from a known page (use scrape); when you need results quickly (deep research can take time).\n**Arguments:**\n- query (string, required): The research question or topic to explore.\n- maxDepth (number, optional): Maximum recursive depth for crawling/search (default: 3).\n- timeLimit (number, optional): Time limit in seconds for the research session (default: 120).\n- maxUrls (number, optional): Maximum number of URLs to analyze (default: 50).\n**Prompt Example:** \"Research the environmental impact of electric vehicles versus gasoline vehicles.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_deep_research\",\n  \"arguments\": {\n    \"query\": \"What are the environmental impacts of electric vehicles compared to gasoline vehicles?\",\n    \"maxDepth\": 3,\n    \"timeLimit\": 120,\n    \"maxUrls\": 50\n  }\n}\n```\n**Returns:** Final analysis generated by an LLM based on research. (data.finalAnalysis); may also include structured activities and sources used in the research process.\n"
      },
      "firecrawl_generate_llmstxt": {
        "name": "firecrawl_generate_llmstxt",
        "description": "\nGenerate a standardized llms.txt (and optionally llms-full.txt) file for a given domain. This file defines how large language models should interact with the site.\n\n**Best for:** Creating machine-readable permission guidelines for AI models.\n**Not recommended for:** General content extraction or research.\n**Arguments:**\n- url (string, required): The base URL of the website to analyze.\n- maxUrls (number, optional): Max number of URLs to include (default: 10).\n- showFullText (boolean, optional): Whether to include llms-full.txt contents in the response.\n**Prompt Example:** \"Generate an LLMs.txt file for example.com.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_generate_llmstxt\",\n  \"arguments\": {\n    \"url\": \"https://example.com\",\n    \"maxUrls\": 20,\n    \"showFullText\": true\n  }\n}\n```\n**Returns:** LLMs.txt file contents (and optionally llms-full.txt).\n"
      }
    }
  },
  "playwright-plus": {
    "category": "browser-automation",
    "path": "browser-automation/playwright-plus.json"
  },
  "url-fetch": {
    "category": "browser-automation",
    "path": "browser-automation/url-fetch.json"
  },
  "@browsercatco/mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/browsercatco-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "brave-browser": {
    "category": "browser-automation",
    "path": "browser-automation/brave-browser.json"
  },
  "mcp-jinaai-reader": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-jinaai-reader.json",
    "validated": true,
    "tools": {
      "read_url": {
        "name": "read_url",
        "description": "Convert any URL to LLM-friendly text using Jina.ai Reader"
      }
    }
  },
  "playwright-console-debugger": {
    "category": "browser-automation",
    "path": "browser-automation/playwright-console-debugger.json"
  },
  "browser-use-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/browser-use-mcp.json"
  },
  "android-uiautomator2": {
    "category": "browser-automation",
    "path": "browser-automation/android-uiautomator2.json"
  },
  "@debugg-ai/debugg-ai-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/debugg-ai-debugg-ai-mcp.json",
    "validated": true,
    "tools": {
      "debugg_ai_test_page_changes": {
        "name": "debugg_ai_test_page_changes",
        "description": "Use DebuggAI to run & and test UI changes that have been made with its User emulation agents"
      }
    }
  },
  "selenium-webdriver": {
    "category": "browser-automation",
    "path": "browser-automation/selenium-webdriver.json"
  },
  "puppeteer-browser-automation": {
    "category": "browser-automation",
    "path": "browser-automation/puppeteer-browser-automation.json"
  },
  "groundng-(qa-for-cursor)": {
    "category": "browser-automation",
    "path": "browser-automation/groundng--qa-for-cursor.json"
  },
  "mcp-browser-use": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-browser-use.json"
  },
  "twitter": {
    "category": "browser-automation",
    "path": "browser-automation/twitter.json"
  },
  "fetch": {
    "category": "browser-automation",
    "path": "browser-automation/fetch.json"
  },
  "web-crawler": {
    "category": "browser-automation",
    "path": "browser-automation/web-crawler.json"
  },
  "webscraping-ai-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/webscraping-ai-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@nicholmikey/chrome-tools": {
    "category": "browser-automation",
    "path": "browser-automation/nicholmikey-chrome-tools.json",
    "validated": false,
    "tools": {}
  },
  "omniparser-autogui": {
    "category": "browser-automation",
    "path": "browser-automation/omniparser-autogui.json"
  },
  "scapegraph": {
    "category": "browser-automation",
    "path": "browser-automation/scapegraph.json"
  },
  "wechat-miniprogram": {
    "category": "browser-automation",
    "path": "browser-automation/wechat-miniprogram.json"
  },
  "playwright": {
    "category": "browser-automation",
    "path": "browser-automation/playwright.json"
  },
  "mcp-server-chatgpt-app": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-server-chatgpt-app.json"
  },
  "web-browser-(playwright)": {
    "category": "browser-automation",
    "path": "browser-automation/web-browser--playwright.json"
  },
  "docs-scraper": {
    "category": "browser-automation",
    "path": "browser-automation/docs-scraper.json"
  },
  "uber-eats": {
    "category": "browser-automation",
    "path": "browser-automation/uber-eats.json"
  },
  "gcp-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/gcp-mcp.json"
  },
  "@digitalocean/mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/digitalocean-mcp.json",
    "validated": true,
    "tools": {
      "list_apps": {
        "name": "list_apps",
        "description": "\n    List all apps on your account. Information about the current active\n    deployment as well as any in progress ones will also be included for\n    each app.\n    "
      },
      "create_app": {
        "name": "create_app",
        "description": "\n    Create a new app by submitting an app specification. For documentation\n    on app specifications (\"AppSpec\" objects), please refer to [the product\n    documentation](https://docs.digitalocean.com/products/app-platform/reference/app-spec/).\n  "
      },
      "get_app": {
        "name": "get_app",
        "description": "Get an app by ID"
      },
      "update_app": {
        "name": "update_app",
        "description": "\n    Update an existing app by submitting a new app specification. For\n    documentation on app specifications (\"AppSpec\" objects), please refer to\n    [the product documentation](https://docs.digitalocean.com/products/app-platform/reference/app-spec/).\n  "
      },
      "delete_app": {
        "name": "delete_app",
        "description": "Delete an app by ID"
      },
      "get_deployment_logs_url": {
        "name": "get_deployment_logs_url",
        "description": "\n    Gets the URL of the logs for a deployment. Before fetching the logs, you need to\n    get the URL of the logs. \n  "
      },
      "download_logs": {
        "name": "download_logs",
        "description": "\n    Give the URL of the logs, download the logs and return them as a string.\n  "
      },
      "list_deployments": {
        "name": "list_deployments",
        "description": "List all deployments for an app"
      },
      "create_deployment": {
        "name": "create_deployment",
        "description": "Create a new deployment for an app"
      },
      "get_deployment": {
        "name": "get_deployment",
        "description": "Get a deployment by ID"
      },
      "cancel_deployment": {
        "name": "cancel_deployment",
        "description": "Cancel a deployment by ID"
      },
      "list_instance_sizes": {
        "name": "list_instance_sizes",
        "description": "List all instance sizes for `service`, `worker`, and `job` components supported by App Platform."
      },
      "get_instance_size_by_slug": {
        "name": "get_instance_size_by_slug",
        "description": "Retrieve information about a specific instance size slug for `service`,`worker`, and `job` components."
      },
      "list_app_regions": {
        "name": "list_app_regions",
        "description": "List all regions supported by App Platform."
      },
      "validate_app_spec": {
        "name": "validate_app_spec",
        "description": "\n    Propose and validate a spec for a new or existing app. The request returns some\n    information about the proposed app, including app cost and upgrade cost.\n    If an existing app ID is specified, the app spec is treated as a\n    proposed update to the existing app.\n  "
      },
      "list_app_alerts": {
        "name": "list_app_alerts",
        "description": "\n    List alerts associated to the app and any components. This includes\n    configuration information about the alerts including emails, slack\n    webhooks, and triggering events or conditions.\n  "
      },
      "update_app_alert_destinations": {
        "name": "update_app_alert_destinations",
        "description": "Update alert destinations for an app"
      },
      "rollback_app": {
        "name": "rollback_app",
        "description": "\n    Rollback an app to a previous deployment. A new deployment will be\n    created to perform the rollback.\n    The app will be pinned to the rollback deployment preventing any new\n    deployments from being created, either manually or through Auto Deploy on Push webhooks. \n    To resume deployments, the rollback must beeither committed or reverted.\n    It is recommended to use the Validate App Rollback endpoint to double check if the rollback is valid and if there are any warnings.\n  "
      },
      "validate_app_rollback": {
        "name": "validate_app_rollback",
        "description": "\n  Check whether an app can be rolled back to a specific deployment. This\n  endpoint can also be used to check if there are any warnings or validation conditions that will\n  cause the rollback to proceed under un-ideal circumstances. For example, if a component must be rebuilt\n  as part of the rollback causing it to take longer than usual.\n  "
      },
      "commit_app_rollback": {
        "name": "commit_app_rollback",
        "description": "\n  Commit an app rollback. This action permanently applies the rollback and\n  unpins the app to resume new deployments.\n  "
      },
      "revert_app_rollback": {
        "name": "revert_app_rollback",
        "description": "\n  Revert an app rollback. This action reverts the active rollback by\n  creating a new deployment from the latest app spec prior to the \n  rollback and unpins the app to resume new deployments.\n  "
      },
      "get_database_options": {
        "name": "get_database_options",
        "description": "\n    Get a list of all database options available for creating a database cluster.\n    This includes available regions, versions, and sizes for each database engine.\n  "
      },
      "list_databases_cluster": {
        "name": "list_databases_cluster",
        "description": "\n    List all database clusters in your account. This includes information about\n    each cluster's configuration, status, and connection details.\n  "
      },
      "create_database_cluster": {
        "name": "create_database_cluster",
        "description": "Create a new database cluster."
      },
      "list_database_firewall_rules": {
        "name": "list_database_firewall_rules",
        "description": "List all firewall (trusted sources) rules for a specific database cluster."
      },
      "update_database_firewall_rules": {
        "name": "update_database_firewall_rules",
        "description": "Update the firewall (trusted sources) rules for a specific database cluster."
      },
      "get_database_cluster": {
        "name": "get_database_cluster",
        "description": "Get information about a specific database cluster."
      },
      "list_database_cluster_users": {
        "name": "list_database_cluster_users",
        "description": "List all users for a specific database cluster."
      },
      "list_database_cluster_databases": {
        "name": "list_database_cluster_databases",
        "description": "List all databases for a specific database cluster."
      },
      "get_database_cluster_certificate": {
        "name": "get_database_cluster_certificate",
        "description": "Get the certificate for a specific database cluster."
      },
      "list_database_connection_pools": {
        "name": "list_database_connection_pools",
        "description": "List all connection pools for a specific database cluster."
      },
      "list_database_topics": {
        "name": "list_database_topics",
        "description": "List all topics for a specific database kafka cluster."
      }
    }
  },
  "aws-resource-manager": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-resource-manager.json"
  },
  "ucloud": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/ucloud.json"
  },
  "alibabacloud-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/alibabacloud-mcp-server.json"
  },
  "pipecd": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/pipecd.json"
  },
  "azure": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/azure.json"
  },
  "portainer-container-management": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/portainer-container-management.json"
  },
  "s3-tools": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/s3-tools.json"
  },
  "aws-resources": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-resources.json"
  },
  "pure-storage-flashblade": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/pure-storage-flashblade.json"
  },
  "box-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/box-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "harvester-hci": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/harvester-hci.json"
  },
  "@gannonh/firebase-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/gannonh-firebase-mcp.json",
    "validated": false,
    "tools": {}
  },
  "ops-unikernel-platform": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/ops-unikernel-platform.json"
  },
  "nutanix-prism-central": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/nutanix-prism-central.json"
  },
  "@osaas/mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/osaas-mcp-server.json",
    "validated": true,
    "tools": {
      "osc_upload_file": {
        "name": "osc_upload_file",
        "description": "Upload a file to Eyevinn Open Source Cloud Storage (OSC) Minio instance"
      },
      "osc_list_files": {
        "name": "osc_list_files",
        "description": "List files in a bucket on Eyevinn Open Source Cloud Storage (OSC) Minio instance"
      },
      "osc_create_bucket": {
        "name": "osc_create_bucket",
        "description": "Create a new bucket on Eyevinn Open Source Cloud Storage (OSC) Minio instance"
      }
    }
  },
  "openstack-commander": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/openstack-commander.json"
  },
  "cloud-infrastructure-manager": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloud-infrastructure-manager.json"
  },
  "@felixallistar/coolify-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/felixallistar-coolify-mcp.json",
    "validated": true,
    "tools": {
      "config-status": {
        "name": "config-status",
        "description": ""
      },
      "applications": {
        "name": "applications",
        "description": ""
      },
      "databases": {
        "name": "databases",
        "description": ""
      },
      "services": {
        "name": "services",
        "description": ""
      },
      "projects": {
        "name": "projects",
        "description": ""
      },
      "servers": {
        "name": "servers",
        "description": ""
      },
      "deployments": {
        "name": "deployments",
        "description": ""
      },
      "private-keys": {
        "name": "private-keys",
        "description": ""
      },
      "system": {
        "name": "system",
        "description": ""
      },
      "ping": {
        "name": "ping",
        "description": ""
      }
    }
  },
  "yourware-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/yourware-mcp.json"
  },
  "aws-service-reference": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-service-reference.json"
  },
  "cloudstack": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloudstack.json"
  },
  "gcp-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/gcp-mcp-server.json"
  },
  "aws-ec2-pricing": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-ec2-pricing.json"
  },
  "pulumi-cloud-development": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/pulumi-cloud-development.json"
  },
  "@netlify/mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/netlify-mcp.json",
    "validated": true,
    "tools": {
      "netlify-coding-rules": {
        "name": "netlify-coding-rules",
        "description": "ALWAYS call when writing serverless or Netlify code. required step before creating or editing any type of functions, Netlify sdk/library  usage, etc."
      },
      "netlify-user-services": {
        "name": "netlify-user-services",
        "description": "Select and run one of the following Netlify operations get-user"
      },
      "netlify-deploy-services": {
        "name": "netlify-deploy-services",
        "description": "Select and run one of the following Netlify operations get-deploy, get-deploy-for-site, deploy-site"
      },
      "netlify-team-services": {
        "name": "netlify-team-services",
        "description": "Select and run one of the following Netlify operations get-teams, get-team"
      },
      "netlify-project-services": {
        "name": "netlify-project-services",
        "description": "Select and run one of the following Netlify operations get-project, get-projects, update-visitor-access-controls, update-forms, get-forms-for-project, manage-form-submissions, update-project-name, manage-env-vars, create-new-project"
      },
      "netlify-extension-services": {
        "name": "netlify-extension-services",
        "description": "Select and run one of the following Netlify operations change-extension-installation, get-extensions, get-full-extension-details, initialize-database"
      }
    }
  },
  "cloud-foundry": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloud-foundry.json"
  },
  "aiven": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aiven.json"
  },
  "@masonator/coolify-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/masonator-coolify-mcp.json",
    "validated": true,
    "tools": {
      "list_servers": {
        "name": "list_servers",
        "description": "List all Coolify servers"
      },
      "get_server": {
        "name": "get_server",
        "description": "Get details about a specific Coolify server"
      },
      "list_services": {
        "name": "list_services",
        "description": "List all Coolify services"
      },
      "create_service": {
        "name": "create_service",
        "description": "Create a new Coolify service"
      },
      "delete_service": {
        "name": "delete_service",
        "description": "Delete a Coolify service"
      }
    }
  },
  "vantage-cloud-cost-management": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/vantage-cloud-cost-management.json"
  },
  "windows-365-cloud-pc": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/windows-365-cloud-pc.json"
  },
  "terraform-cloud": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/terraform-cloud.json"
  },
  "cloudinary-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloudinary-mcp-server.json",
    "validated": true,
    "tools": {
      "upload": {
        "name": "upload",
        "description": "Upload a file (asset) to Cloudinary"
      },
      "delete-asset": {
        "name": "delete-asset",
        "description": "Delete a file (asset) from Cloudinary"
      },
      "get-asset": {
        "name": "get-asset",
        "description": "Get the details of a specific file (asset)"
      },
      "find-assets": {
        "name": "find-assets",
        "description": "Search for existing files (assets) in Cloudinary with a query expression"
      },
      "get-usage": {
        "name": "get-usage",
        "description": "Get a report on the status of your product environment usage, including storage, credits, bandwidth, requests, number of resources, and add-on usage"
      }
    }
  },
  "hetzner-cloud": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/hetzner-cloud.json"
  },
  "kubesphere": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubesphere.json"
  },
  "arista-cloudvision": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/arista-cloudvision.json"
  },
  "aws-labs": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-labs.json"
  },
  "aws-s3-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-s3-mcp.json",
    "validated": true,
    "tools": {
      "list-buckets": {
        "name": "list-buckets",
        "description": "List available S3 buckets"
      },
      "list-objects": {
        "name": "list-objects",
        "description": "List objects in an S3 bucket"
      },
      "get-object": {
        "name": "get-object",
        "description": "Retrieve an object from an S3 bucket"
      }
    }
  },
  "mcp-server-esa": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/mcp-server-esa.json",
    "validated": true,
    "tools": {
      "html_deploy": {
        "name": "html_deploy",
        "description": "Quickly deploy an HTML page to ESA Edge Routine (ER) and return a default access URL to the user."
      },
      "routine_create": {
        "name": "routine_create",
        "description": "Create a new Edge Routine (ER) in your Alibaba Cloud account."
      },
      "routine_delete": {
        "name": "routine_delete",
        "description": "Delete an existing Edge Routine (ER) from your Alibaba Cloud account."
      },
      "routine_list": {
        "name": "routine_list",
        "description": "List all Edge Routines (ERs) in your Alibaba Cloud account."
      },
      "routine_get": {
        "name": "routine_get",
        "description": "Get a the details of a Edge Routine (ER)."
      },
      "routine_code_commit": {
        "name": "routine_code_commit",
        "description": "Save a code version for future modifications or release within an Edge Routine (ER)."
      },
      "routine_code_deploy": {
        "name": "routine_code_deploy",
        "description": "Deploy a selected code version to the staging or production environment. If version is not exist, should call routine_code_commit first"
      },
      "routine_route_list": {
        "name": "routine_route_list",
        "description": "List all routes associated with a specific Edge Routine (ER)."
      },
      "canary_area_list": {
        "name": "canary_area_list",
        "description": "List all available canary areas for routine deployment"
      },
      "deployment_delete": {
        "name": "deployment_delete",
        "description": "Delete a specified code version associated with an Edge Routine (ER)."
      },
      "site_active_list": {
        "name": "site_active_list",
        "description": "List all active sites"
      },
      "site_route_list": {
        "name": "site_route_list",
        "description": "List all routes associated with a specific site."
      },
      "route_create": {
        "name": "route_create",
        "description": "Create a new route associated with an Edge Routine (ER)."
      },
      "route_delete": {
        "name": "route_delete",
        "description": "Delete a specified route associated with an Edge Routine (ER)."
      },
      "route_update": {
        "name": "route_update",
        "description": "Modify the configuration of an existing Edge Routine route."
      },
      "route_get": {
        "name": "route_get",
        "description": "Get details of a specific route associated with an Edge Routine (ER)."
      },
      "site_match": {
        "name": "site_match",
        "description": "Identify which site in the account matches the provided input criteria."
      },
      "er_record_create": {
        "name": "er_record_create",
        "description": "Create a new record associated with an Edge Routine (ER)"
      },
      "er_record_delete": {
        "name": "er_record_delete",
        "description": "Delete a specified record associated with an Edge Routine (ER)."
      },
      "er_record_list": {
        "name": "er_record_list",
        "description": "List all records associated with a specific Edge Routine (ER)."
      },
      "site_dns_a_record_create": {
        "name": "site_dns_a_record_create",
        "description": "Create an A DNS record for a specified site."
      },
      "site_dns_cname_record_create": {
        "name": "site_dns_cname_record_create",
        "description": "Create a CNAME DNS record for a specified site."
      },
      "site_record_list": {
        "name": "site_record_list",
        "description": "List DNS records associated with a specific site."
      }
    }
  },
  "kubernetes": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubernetes.json"
  },
  "cloudzero": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloudzero.json"
  },
  "coolify-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/coolify-mcp-server.json",
    "validated": true,
    "tools": {
      "get_version": {
        "name": "get_version",
        "description": "Get Coolify version information. Returns the current version of the Coolify instance."
      },
      "health_check": {
        "name": "health_check",
        "description": "Check Coolify API health status. Note: This endpoint may not be available in all Coolify versions, including the current version (4.0.0-beta.397)."
      },
      "list_teams": {
        "name": "list_teams",
        "description": "List all teams the authenticated user has access to. Use this to get team UUIDs needed for other operations."
      },
      "get_team": {
        "name": "get_team",
        "description": "Get details of a specific team. Requires a team ID obtained from list_teams."
      },
      "get_current_team": {
        "name": "get_current_team",
        "description": "Get details of the currently authenticated team. This is the team associated with your API token."
      },
      "get_current_team_members": {
        "name": "get_current_team_members",
        "description": "Get a list of all members in the currently authenticated team. Shows who has access to team resources."
      },
      "list_servers": {
        "name": "list_servers",
        "description": "List all servers registered in your Coolify instance. Use this to get server UUIDs needed for other operations."
      },
      "create_server": {
        "name": "create_server",
        "description": "Create a new server in Coolify. Requires SSH access details and a private key for authentication."
      },
      "validate_server": {
        "name": "validate_server",
        "description": "Validate a server's configuration and connectivity. Use this to verify server setup and troubleshoot connection issues."
      },
      "get_server_resources": {
        "name": "get_server_resources",
        "description": "Get a list of applications and services running on a server. This provides an overview of all resources deployed on the specified server."
      },
      "get_server_domains": {
        "name": "get_server_domains",
        "description": "Get a list of domains configured for a server. These domains are used for routing traffic to applications and services."
      },
      "list_services": {
        "name": "list_services",
        "description": "List all services across your Coolify instance. Services are containerized applications running on your servers."
      },
      "create_service": {
        "name": "create_service",
        "description": "Create a new service on a specified server. Services are containerized applications that run on your Coolify servers."
      },
      "start_service": {
        "name": "start_service",
        "description": "Start a previously created service. This will initialize the service container and make it accessible."
      },
      "stop_service": {
        "name": "stop_service",
        "description": "Stop a running service. This will gracefully shut down the service container."
      },
      "restart_service": {
        "name": "restart_service",
        "description": "Restart a service by stopping and starting it again. Useful for applying configuration changes or recovering from issues."
      },
      "list_applications": {
        "name": "list_applications",
        "description": "List all applications across your Coolify instance. Applications are deployable units sourced from Git repositories."
      },
      "create_application": {
        "name": "create_application",
        "description": "Create a new application in Coolify. Applications are deployable units that can be sourced from Git repositories."
      },
      "start_application": {
        "name": "start_application",
        "description": "Start a previously created application. This will initialize the application container and make it accessible."
      },
      "stop_application": {
        "name": "stop_application",
        "description": "Stop a running application. This will gracefully shut down the application container."
      },
      "restart_application": {
        "name": "restart_application",
        "description": "Restart an application by stopping and starting it again. Useful for applying configuration changes or recovering from issues."
      },
      "execute_command_application": {
        "name": "execute_command_application",
        "description": "Execute a command inside a running application container. Useful for debugging, maintenance, or running one-off tasks. Note: This endpoint may not be available in all Coolify versions, including the current version (4.0.0-beta.397)."
      },
      "list_deployments": {
        "name": "list_deployments",
        "description": "List all deployments across your Coolify instance. Deployments represent the history of application and service deployments."
      },
      "get_deployment": {
        "name": "get_deployment",
        "description": "Get detailed information about a specific deployment. Use this to monitor deployment status and troubleshoot issues."
      },
      "list_private_keys": {
        "name": "list_private_keys",
        "description": "List all SSH private keys stored in Coolify. These keys are used for server authentication and Git repository access."
      },
      "create_private_key": {
        "name": "create_private_key",
        "description": "Create a new SSH private key in Coolify for server authentication or Git repository access."
      }
    }
  },
  "linode-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/linode-mcp.json"
  },
  "waldur": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/waldur.json"
  },
  "azure-impact-reporter": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/azure-impact-reporter.json"
  },
  "aws-nova-canvas": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-nova-canvas.json"
  },
  "aliyun-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aliyun-mcp-server.json",
    "validated": true,
    "tools": {
      "querySLSLogs": {
        "name": "querySLSLogs",
        "description": "Query Aliyun SLS (Simple Log Service) logs"
      }
    }
  },
  "digitalocean": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/digitalocean.json"
  },
  "kubeblocks-cloud": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubeblocks-cloud.json"
  },
  "apisix-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/apisix-mcp.json",
    "validated": true,
    "tools": {
      "get_resource": {
        "name": "get_resource",
        "description": "Get resource details by ID or list all resources"
      },
      "delete_resource": {
        "name": "delete_resource",
        "description": "Delete a resource by ID"
      },
      "send_request_to_gateway": {
        "name": "send_request_to_gateway",
        "description": "Send a request or multiple requests to the APISIX gateway"
      },
      "create_route": {
        "name": "create_route",
        "description": "Create a route"
      },
      "update_route": {
        "name": "update_route",
        "description": "Update specific attributes of an existing route"
      },
      "create_service": {
        "name": "create_service",
        "description": "Create a service"
      },
      "update_service": {
        "name": "update_service",
        "description": "Update specific attributes of an existing service"
      },
      "create_upstream": {
        "name": "create_upstream",
        "description": "Create an upstream service with load balancing settings"
      },
      "update_upstream": {
        "name": "update_upstream",
        "description": "Update specific attributes of an existing upstream"
      },
      "create_or_update_consumer": {
        "name": "create_or_update_consumer",
        "description": "Create a consumer, if the consumer already exists, it will be updated"
      },
      "get_credential": {
        "name": "get_credential",
        "description": "Get all credentials or a specific credential for a consumer"
      },
      "create_or_update_credential": {
        "name": "create_or_update_credential",
        "description": "Create or update a credential for a consumer"
      },
      "delete_credential": {
        "name": "delete_credential",
        "description": "Delete a credential for a consumer"
      },
      "create_ssl": {
        "name": "create_ssl",
        "description": "Create an SSL certificate"
      },
      "update_ssl": {
        "name": "update_ssl",
        "description": "Update specific attributes of an existing SSL certificate"
      },
      "create_global_rule": {
        "name": "create_global_rule",
        "description": "Create a global rule"
      },
      "update_global_rule": {
        "name": "update_global_rule",
        "description": "Update specific attributes of an existing global rule"
      },
      "create_consumer_group": {
        "name": "create_consumer_group",
        "description": "Create a consumer group"
      },
      "update_consumer_group": {
        "name": "update_consumer_group",
        "description": "Update specific attributes of an existing consumer group"
      },
      "get_all_plugin_names": {
        "name": "get_all_plugin_names",
        "description": "Get all plugin names"
      },
      "get_plugin_schema": {
        "name": "get_plugin_schema",
        "description": "Get all plugins schema or a specific plugin schema by name"
      },
      "get_plugin_metadata": {
        "name": "get_plugin_metadata",
        "description": "Get metadata for a specific plugin"
      },
      "create_plugin_config": {
        "name": "create_plugin_config",
        "description": "Create a new plugin config"
      },
      "update_plugin_config": {
        "name": "update_plugin_config",
        "description": "Update a plugin config"
      },
      "create_or_update_plugin_metadata": {
        "name": "create_or_update_plugin_metadata",
        "description": "Create or update plugin metadata"
      },
      "delete_plugin_metadata": {
        "name": "delete_plugin_metadata",
        "description": "Delete plugin metadata"
      },
      "create_or_update_stream_route": {
        "name": "create_or_update_stream_route",
        "description": "Create a stream route, if the stream route already exists, it will be updated"
      },
      "get_secret_by_id": {
        "name": "get_secret_by_id",
        "description": "Get a secret by ID"
      },
      "create_secret": {
        "name": "create_secret",
        "description": "Create a secret"
      },
      "update_secret": {
        "name": "update_secret",
        "description": "Update specific attributes of an existing secret"
      },
      "delete_secret": {
        "name": "delete_secret",
        "description": "Delete a secret by ID"
      },
      "create_or_update_proto": {
        "name": "create_or_update_proto",
        "description": "Create a proto, if the proto already exists, it will be updated"
      }
    }
  },
  "azure-cli": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/azure-cli.json"
  },
  "argocd-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/argocd-mcp.json",
    "validated": false,
    "tools": {}
  },
  "modal-(serverless-python)": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/modal--serverless-python.json"
  },
  "qiniu-cloud-storage": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/qiniu-cloud-storage.json"
  },
  "proxmox": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/proxmox.json"
  },
  "aws-lambda": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-lambda.json"
  },
  "nomad": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/nomad.json"
  },
  "aws-cost-explorer-and-bedrock-usage-analytics": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-cost-explorer-and-bedrock-usage-analytics.json"
  },
  "amazon-s3": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/amazon-s3.json"
  },
  "aws-bedrock": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-bedrock.json"
  },
  "awslabs.cdk-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/awslabs-cdk-mcp-server.json"
  },
  "@niyogi/render-mcp": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/niyogi-render-mcp.json",
    "validated": false,
    "tools": {}
  },
  "wildfly": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/wildfly.json"
  },
  "minio-object-storage": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/minio-object-storage.json"
  },
  "kubernetes-pilot": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubernetes-pilot.json"
  },
  "alibaba-cloud-dms": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/alibaba-cloud-dms.json"
  },
  "azure-pricing": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/azure-pricing.json"
  },
  "spring-application-advisor": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/spring-application-advisor.json"
  },
  "modal": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/modal.json"
  },
  "nvidia-brev": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/nvidia-brev.json"
  },
  "akave-mcp-js": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/akave-mcp-js.json",
    "validated": true,
    "tools": {
      "list_buckets": {
        "name": "list_buckets",
        "description": "List all buckets in Akave storage"
      },
      "list_objects": {
        "name": "list_objects",
        "description": "List objects in a bucket"
      },
      "get_object": {
        "name": "get_object",
        "description": "Get object content from a bucket"
      },
      "put_object": {
        "name": "put_object",
        "description": "Put object into a bucket"
      },
      "get_signed_url": {
        "name": "get_signed_url",
        "description": "Get a signed URL for an object"
      },
      "update_object": {
        "name": "update_object",
        "description": "Update (overwrite) an object in a bucket"
      },
      "fetch_headers": {
        "name": "fetch_headers",
        "description": "Fetch headers/metadata for an object"
      },
      "delete_object": {
        "name": "delete_object",
        "description": "Delete an object from a bucket"
      },
      "copy_object": {
        "name": "copy_object",
        "description": "Copy an object to another bucket/key"
      },
      "create_bucket": {
        "name": "create_bucket",
        "description": "Create a new bucket"
      },
      "delete_bucket": {
        "name": "delete_bucket",
        "description": "Delete a bucket"
      },
      "get_bucket_location": {
        "name": "get_bucket_location",
        "description": "Get the region/location of a bucket"
      },
      "list_object_versions": {
        "name": "list_object_versions",
        "description": "List all versions of objects in a bucket (if versioning enabled)"
      }
    }
  },
  "azure-resource-manager": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/azure-resource-manager.json"
  },
  "kubevirt": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubevirt.json"
  },
  "aws-cli": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/aws-cli.json"
  },
  "vmware-esxi": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/vmware-esxi.json"
  },
  "daytona-python-interpreter": {
    "category": "code-execution",
    "path": "code-execution/daytona-python-interpreter.json"
  },
  "gru-sandbox": {
    "category": "code-execution",
    "path": "code-execution/gru-sandbox.json"
  },
  "mcp-python-interpreter": {
    "category": "code-execution",
    "path": "code-execution/mcp-python-interpreter.json"
  },
  "container-sandbox": {
    "category": "code-execution",
    "path": "code-execution/container-sandbox.json"
  },
  "prolog": {
    "category": "code-execution",
    "path": "code-execution/prolog.json"
  },
  "python-sandbox": {
    "category": "code-execution",
    "path": "code-execution/python-sandbox.json"
  },
  "docker-executor": {
    "category": "code-execution",
    "path": "code-execution/docker-executor.json"
  },
  "dafny-verifier": {
    "category": "code-execution",
    "path": "code-execution/dafny-verifier.json"
  },
  "docker-sandbox": {
    "category": "code-execution",
    "path": "code-execution/docker-sandbox.json"
  },
  "mcp-python": {
    "category": "code-execution",
    "path": "code-execution/mcp-python.json"
  },
  "matlab": {
    "category": "code-execution",
    "path": "code-execution/matlab.json"
  },
  "safe-local-python-executor": {
    "category": "code-execution",
    "path": "code-execution/safe-local-python-executor.json"
  },
  "mcp-llm": {
    "category": "code-execution",
    "path": "code-execution/mcp-llm.json",
    "validated": true,
    "tools": {
      "generate_code": {
        "name": "generate_code",
        "description": "Generate code based on a description"
      },
      "generate_code_to_file": {
        "name": "generate_code_to_file",
        "description": "Generate code and write it directly to a file at a specific line number"
      },
      "generate_documentation": {
        "name": "generate_documentation",
        "description": "Generate documentation for code"
      },
      "ask_question": {
        "name": "ask_question",
        "description": "Ask a question to the LLM"
      }
    }
  },
  "python-local": {
    "category": "code-execution",
    "path": "code-execution/python-local.json"
  },
  "jupyter-notebook-bridge": {
    "category": "code-execution",
    "path": "code-execution/jupyter-notebook-bridge.json"
  },
  "glyph": {
    "category": "code-execution",
    "path": "code-execution/glyph.json"
  },
  "docker-code-sandbox": {
    "category": "code-execution",
    "path": "code-execution/docker-code-sandbox.json"
  },
  "@riza-io/riza-mcp": {
    "category": "code-execution",
    "path": "code-execution/riza-io-riza-mcp.json",
    "validated": true,
    "tools": {
      "create_tool": {
        "name": "create_tool",
        "description": "Create a new tool. This tool will be used to create new tools. You can use the tools you have created to perform tasks."
      },
      "fetch_tool": {
        "name": "fetch_tool",
        "description": "Fetch a tool, including its source code."
      },
      "edit_tool": {
        "name": "edit_tool",
        "description": "Edit a tool, including its source code. Omit properties that you do not want to change."
      },
      "execute_code": {
        "name": "execute_code",
        "description": "Execute arbitrary Typescript or Python code."
      },
      "list_tools": {
        "name": "list_tools",
        "description": "Lists the tool definitions of all self-written tools available for use. These tools can be used by calling `use_tool` with the name and input."
      },
      "execute_tool": {
        "name": "execute_tool",
        "description": "Executes a tool. This tool will be used to execute a self-written tool."
      }
    }
  },
  "python-repl": {
    "category": "code-execution",
    "path": "code-execution/python-repl.json"
  },
  "web-and-python-sandbox": {
    "category": "code-execution",
    "path": "code-execution/web-and-python-sandbox.json"
  },
  "python-run": {
    "category": "code-execution",
    "path": "code-execution/python-run.json"
  },
  "basilisp-nrepl": {
    "category": "code-execution",
    "path": "code-execution/basilisp-nrepl.json"
  },
  "isolator": {
    "category": "code-execution",
    "path": "code-execution/isolator.json"
  },
  "@yepcode/mcp-server": {
    "category": "code-execution",
    "path": "code-execution/yepcode-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "code-sandbox": {
    "category": "code-execution",
    "path": "code-execution/code-sandbox.json"
  },
  "livecode.ch": {
    "category": "code-execution",
    "path": "code-execution/livecode-ch.json"
  },
  "sympy-calculator": {
    "category": "code-execution",
    "path": "code-execution/sympy-calculator.json"
  },
  "jupyter_mcp_server": {
    "category": "code-execution",
    "path": "code-execution/jupyter_mcp_server.json"
  },
  "@jinzcdev/leetcode-mcp-server": {
    "category": "coding-agents",
    "path": "coding-agents/jinzcdev-leetcode-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "serena": {
    "category": "coding-agents",
    "path": "coding-agents/serena.json"
  },
  "code-analysis": {
    "category": "coding-agents",
    "path": "coding-agents/code-analysis.json"
  },
  "mcp-perplexity": {
    "category": "coding-agents",
    "path": "coding-agents/mcp-perplexity.json"
  },
  "code-expert-review": {
    "category": "coding-agents",
    "path": "coding-agents/code-expert-review.json"
  },
  "deepview-mcp": {
    "category": "coding-agents",
    "path": "coding-agents/deepview-mcp.json"
  },
  "consulting-agents": {
    "category": "coding-agents",
    "path": "coding-agents/consulting-agents.json"
  },
  "codealive": {
    "category": "coding-agents",
    "path": "coding-agents/codealive.json"
  },
  "mcp-server-code-assist": {
    "category": "coding-agents",
    "path": "coding-agents/mcp-server-code-assist.json"
  },
  "gopls": {
    "category": "coding-agents",
    "path": "coding-agents/gopls.json"
  },
  "langgraph-coding-team": {
    "category": "coding-agents",
    "path": "coding-agents/langgraph-coding-team.json"
  },
  "autogen": {
    "category": "coding-agents",
    "path": "coding-agents/autogen.json"
  },
  "kontxt": {
    "category": "coding-agents",
    "path": "coding-agents/kontxt.json"
  },
  "claude-code": {
    "category": "coding-agents",
    "path": "coding-agents/claude-code.json"
  },
  "hide-(headless-ide)": {
    "category": "coding-agents",
    "path": "coding-agents/hide--headless-ide.json"
  },
  "codechecker": {
    "category": "coding-agents",
    "path": "coding-agents/codechecker.json"
  },
  "typescript-mcp": {
    "category": "coding-agents",
    "path": "coding-agents/typescript-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@jetbrains/mcp-proxy": {
    "category": "coding-agents",
    "path": "coding-agents/jetbrains-mcp-proxy.json",
    "validated": false,
    "tools": {}
  },
  "mcp-neovim-server": {
    "category": "coding-agents",
    "path": "coding-agents/mcp-neovim-server.json",
    "validated": true,
    "tools": {
      "vim_buffer": {
        "name": "vim_buffer",
        "description": "Get buffer contents with line numbers"
      },
      "vim_command": {
        "name": "vim_command",
        "description": "Execute Vim commands with optional shell command support"
      },
      "vim_status": {
        "name": "vim_status",
        "description": "Get comprehensive Neovim status including cursor position, mode, marks, and registers"
      },
      "vim_edit": {
        "name": "vim_edit",
        "description": "Edit buffer content using insert, replace, or replaceAll modes"
      },
      "vim_window": {
        "name": "vim_window",
        "description": "Manage Neovim windows: split, close, and navigate between windows"
      },
      "vim_mark": {
        "name": "vim_mark",
        "description": "Set named marks at specific positions in the buffer"
      },
      "vim_register": {
        "name": "vim_register",
        "description": "Manage Neovim register contents"
      },
      "vim_visual": {
        "name": "vim_visual",
        "description": "Create visual mode selections in the buffer"
      },
      "vim_buffer_switch": {
        "name": "vim_buffer_switch",
        "description": "Switch between buffers by name or number"
      },
      "vim_buffer_save": {
        "name": "vim_buffer_save",
        "description": "Save current buffer or save to specific filename"
      },
      "vim_file_open": {
        "name": "vim_file_open",
        "description": "Open files into new buffers"
      },
      "vim_search": {
        "name": "vim_search",
        "description": "Search within current buffer with regex support and options"
      },
      "vim_search_replace": {
        "name": "vim_search_replace",
        "description": "Find and replace with global, case-insensitive, and confirm options"
      },
      "vim_grep": {
        "name": "vim_grep",
        "description": "Project-wide search using vimgrep with quickfix list"
      },
      "vim_health": {
        "name": "vim_health",
        "description": "Check Neovim connection health"
      },
      "vim_macro": {
        "name": "vim_macro",
        "description": "Record, stop, and play Neovim macros"
      },
      "vim_tab": {
        "name": "vim_tab",
        "description": "Manage Neovim tabs: create, close, and navigate between tabs"
      },
      "vim_fold": {
        "name": "vim_fold",
        "description": "Manage code folding: create, open, close, and toggle folds"
      },
      "vim_jump": {
        "name": "vim_jump",
        "description": "Navigate Neovim jump list: go back, forward, or list jumps"
      }
    }
  },
  "codeforces": {
    "category": "coding-agents",
    "path": "coding-agents/codeforces.json"
  },
  "aider-multi-coder": {
    "category": "coding-agents",
    "path": "coding-agents/aider-multi-coder.json"
  },
  "ultimatecoder": {
    "category": "coding-agents",
    "path": "coding-agents/ultimatecoder.json"
  },
  "aider": {
    "category": "coding-agents",
    "path": "coding-agents/aider.json"
  },
  "strands-agents": {
    "category": "coding-agents",
    "path": "coding-agents/strands-agents.json"
  },
  "magi-code-review": {
    "category": "coding-agents",
    "path": "coding-agents/magi-code-review.json"
  },
  "python-code-explorer": {
    "category": "coding-agents",
    "path": "coding-agents/python-code-explorer.json"
  },
  "a2amcp-sdk": {
    "category": "coding-agents",
    "path": "coding-agents/a2amcp-sdk.json"
  },
  "nuanced": {
    "category": "coding-agents",
    "path": "coding-agents/nuanced.json"
  },
  "python-code-analyzer": {
    "category": "coding-agents",
    "path": "coding-agents/python-code-analyzer.json"
  },
  "perplexity-ai": {
    "category": "coding-agents",
    "path": "coding-agents/perplexity-ai.json"
  },
  "compiler-explorer-mcp": {
    "category": "coding-agents",
    "path": "coding-agents/compiler-explorer-mcp.json"
  },
  "codesavant-coding-assistant": {
    "category": "coding-agents",
    "path": "coding-agents/codesavant-coding-assistant.json"
  },
  "terminal": {
    "category": "command-line",
    "path": "command-line/terminal.json"
  },
  "server": {
    "category": "command-line",
    "path": "command-line/server.json"
  },
  "shell-command-executor": {
    "category": "command-line",
    "path": "command-line/shell-command-executor.json"
  },
  "command-line": {
    "category": "command-line",
    "path": "command-line/command-line.json"
  },
  "mcp-shell-server": {
    "category": "command-line",
    "path": "command-line/mcp-shell-server.json"
  },
  "apple-macos-native-applications": {
    "category": "command-line",
    "path": "command-line/apple-macos-native-applications.json"
  },
  "lilith-shell": {
    "category": "command-line",
    "path": "command-line/lilith-shell.json"
  },
  "terminal-session": {
    "category": "command-line",
    "path": "command-line/terminal-session.json"
  },
  "wcgw": {
    "category": "command-line",
    "path": "command-line/wcgw.json"
  },
  "terminal-controller": {
    "category": "command-line",
    "path": "command-line/terminal-controller.json"
  },
  "cli-mcp-server": {
    "category": "command-line",
    "path": "command-line/cli-mcp-server.json"
  },
  "ssh-tools": {
    "category": "command-line",
    "path": "command-line/ssh-tools.json"
  },
  "mcpshell": {
    "category": "command-line",
    "path": "command-line/mcpshell.json"
  },
  "unix-manual": {
    "category": "command-line",
    "path": "command-line/unix-manual.json"
  },
  "shell-history": {
    "category": "command-line",
    "path": "command-line/shell-history.json"
  },
  "shell-mcp-server": {
    "category": "command-line",
    "path": "command-line/shell-mcp-server.json"
  },
  "systemctl": {
    "category": "command-line",
    "path": "command-line/systemctl.json"
  },
  "@steipete/peekaboo-mcp": {
    "category": "command-line",
    "path": "command-line/steipete-peekaboo-mcp.json",
    "validated": true,
    "tools": {
      "image": {
        "name": "image",
        "description": "Captures macOS screen content and optionally analyzes it. Targets can be entire screen, specific app window, or all windows of an app (via app_target). Supports foreground/background capture. Output via file path or inline Base64 data (format: \"data\"). If a question is provided, image is analyzed by an AI model (auto-selected from PEEKABOO_AI_PROVIDERS). Window shadows/frames excluded. Peekaboo MCP 1.1.0 using MOCK"
      },
      "analyze": {
        "name": "analyze",
        "description": "Analyzes a pre-existing image file from the local filesystem using a configured AI model.\n\nThis tool is useful when an image already exists (e.g., previously captured, downloaded, or generated) and you \nneed to understand its content, extract text, or answer specific questions about it.\n\nCapabilities:\n- Image Understanding: Provide any question about the image (e.g., \"What objects are in this picture?\", \n  \"Describe the scene.\", \"Is there a red car?\").\n- Text Extraction (OCR): Ask the AI to extract text from the image (e.g., \"What text is visible in this screenshot?\").\n- Flexible AI Configuration: Can use server-default AI providers/models or specify a particular one per call \n  via 'provider_config'.\n\nExample:\nIf you have an image '/tmp/chart.png' showing a bar chart, you could ask:\n{ \"image_path\": \"/tmp/chart.png\", \"question\": \"Which category has the highest value in this bar chart?\" }\nThe AI will analyze the image and attempt to answer your question based on its visual content.\nPeekaboo MCP 1.1.0 using MOCK"
      },
      "list": {
        "name": "list",
        "description": "Lists various system items on macOS, providing situational awareness.\n\nCapabilities:\n- Running Applications: Get a list of all currently running applications (names and bundle IDs).\n- Application Windows: For a specific application (identified by name or bundle ID), list its open windows.\n  - Details: Optionally include window IDs, bounds (position and size), and whether a window is off-screen.\n  - Multi-window apps: Clearly lists each window of the target app.\n- Server Status: Provides information about the Peekaboo MCP server itself (version, configured AI providers).\n\nUse Cases:\n- Agent needs to know if 'Photoshop' is running before attempting to automate it.\n  { \"item_type\": \"running_applications\" } // Agent checks if 'Photoshop' is in the list.\n- Agent wants to find a specific 'Notes' window to capture.\n  { \"item_type\": \"application_windows\", \"app\": \"Notes\", \"include_window_details\": [\"ids\", \"bounds\"] }\n  The agent can then use the window title or ID with the 'image' tool.\nPeekaboo MCP 1.1.0 using MOCK"
      }
    }
  },
  "macos-gui-control": {
    "category": "command-line",
    "path": "command-line/macos-gui-control.json"
  },
  "networkmanager-(nmstate)": {
    "category": "command-line",
    "path": "command-line/networkmanager--nmstate.json"
  },
  "homebrew": {
    "category": "command-line",
    "path": "command-line/homebrew.json"
  },
  "terminal-shell": {
    "category": "command-line",
    "path": "command-line/terminal-shell.json"
  },
  "pty-terminal": {
    "category": "command-line",
    "path": "command-line/pty-terminal.json"
  },
  "perplexity-advanced-mcp": {
    "category": "command-line",
    "path": "command-line/perplexity-advanced-mcp.json"
  },
  "scrapli-network-automation": {
    "category": "command-line",
    "path": "command-line/scrapli-network-automation.json"
  },
  "@steipete/macos-automator-mcp": {
    "category": "command-line",
    "path": "command-line/steipete-macos-automator-mcp.json",
    "validated": true,
    "tools": {
      "execute_script": {
        "name": "execute_script",
        "description": "Automate macOS tasks using AppleScript or JXA (JavaScript for Automation) to control applications like Terminal, Chrome, Safari, Finder, etc.\n\n**1. Script Source (Choose one):**\n*   `kb_script_id` (string): **Preferred.** Executes a pre-defined script from the knowledge base by its ID. Use `get_scripting_tips` to find IDs and inputs. Supports placeholder substitution via `input_data` or `arguments`. Ex: `kb_script_id: \"safari_get_front_tab_url\"`.\n*   `script_content` (string): Executes raw AppleScript/JXA code. Good for simple or dynamic scripts. Ex: `script_content: \"tell application \\\"Finder\\\" to empty trash\"`.\n*   `script_path` (string): Executes a script from an absolute POSIX path on the server. Ex: `/Users/user/myscripts/myscript.applescript`.\n\n**2. Script Inputs (Optional):**\n*   `input_data` (JSON object): For `kb_script_id`, provides named inputs (e.g., `--MCP_INPUT:keyName`). Values (string, number, boolean, simple array/object) are auto-converted. Ex: `input_data: { \"folder_name\": \"New Docs\" }`.\n*   `arguments` (array of strings): For `script_path` (passes to `on run argv` / `run(argv)`). For `kb_script_id`, used for positional args (e.g., `--MCP_ARG_1`).\n\n**3. Execution Options (Optional):**\n*   `language` ('applescript' | 'javascript'): Specify for `script_content`/`script_path` (default: 'applescript'). Inferred for `kb_script_id`.\n*   `timeout_seconds` (integer, optional, default: 60): Sets the maximum time (in seconds) the script is allowed to run. Increase for potentially long-running operations.\n*   `output_format_mode` (enum, optional, default: 'auto'): Controls `osascript` output formatting.\n    *   `'auto'`: Smart default - resolves to `'human_readable'` for AppleScript and `'direct'` for JXA.\n    *   `'human_readable'`: For AppleScript, uses `-s h` flag.\n    *   `'structured_error'`: For AppleScript, uses `-s s` flag (structured errors).\n    *   `'structured_output_and_error'`: For AppleScript, uses `-s ss` flag (structured output & errors).\n    *   `'direct'`: No special output flags (recommended for JXA).\n*   `include_executed_script_in_output` (boolean, optional, default: false): If `true`, the final script content (after any placeholder substitutions) or script path that was executed will be included in the response. This is useful for debugging and understanding exactly what was run. Defaults to false.\n*   `include_substitution_logs` (boolean, default: false): For `kb_script_id`, includes detailed placeholder substitution logs.\n*   `report_execution_time` (boolean, optional, default: false): If `true`, an additional message with the formatted script execution time will be included in the response. Defaults to false.\n"
      },
      "get_scripting_tips": {
        "name": "get_scripting_tips",
        "description": "Discover how to automate any app on your Mac with this comprehensive knowledge base of AppleScript/JXA tips and runnable scripts. This tool is essential for discovery and should be the FIRST CHOICE when aiming to automate macOS tasks, especially those involving common applications or system functions, before attempting to write scripts from scratch. It helps identify pre-built, tested solutions, effectively teaching you how to control virtually any aspect of your macOS experience.\n\n**Primary Use Cases & Parameters:**\n\n*   **Discovering Solutions (Use `search_term`):**\n    *   Parameter: `search_term` (string, optional).\n    *   Functionality: Performs a fuzzy search across all tip titles, descriptions, keywords, script content, and IDs. Ideal for natural language queries like \"how to...\" (e.g., `search_term: \"how do I get the current Safari URL and title?\"`). This is the most common way to find relevant tips.\n    *   Output: Returns a list of matching tips in Markdown format.\n\n*   **Limiting Search Results (Use `limit`):**\n    *   Parameter: `limit` (integer, optional, default: 10).\n    *   Functionality: Specifies the maximum number of script tips to return when using `search_term` or browsing a specific `category` (without `list_categories: true`). Does not apply if `list_categories` is true.\n\n*   **Browsing by Category (Use `category`):**\n    *   Parameter: `category` (string, optional).\n    *   Functionality: Shows tips from a specific category. Combine with `limit` to control result count.\n    *   Example: `category: \"01_intro\"` or `category: \"07_browsers/chrome\"`.\n\n*   **Listing All Categories (Use `list_categories: true`):**\n    *   Parameter: `list_categories` (boolean, optional).\n    *   Functionality: Returns a structured list of all available categories with their descriptions. This helps you understand what automation areas are covered.\n    *   Output: Category tree in Markdown format.\n\n*   **Refreshing Database (Use `refresh_database: true`):**\n    *   Parameter: `refresh_database` (boolean, optional).\n    *   Functionality: Forces a reload of the knowledge base if new scripts have been added. Typically not needed as the database refreshes automatically.\n\n**Best Practices:**\n1. **Always start with search**: Use natural language queries to find solutions (e.g., \"send email from Mail app\").\n2. **Browse categories when exploring**: Use `list_categories: true` to see available automation areas.\n3. **Use specific IDs for execution**: Once you find a script, use its ID with `execute_script` tool for precise execution."
      }
    }
  },
  "phone-mcp": {
    "category": "command-line",
    "path": "command-line/phone-mcp.json"
  },
  "mcp-windows": {
    "category": "command-line",
    "path": "command-line/mcp-windows.json"
  },
  "tmux": {
    "category": "command-line",
    "path": "command-line/tmux.json"
  },
  "jarvis": {
    "category": "command-line",
    "path": "command-line/jarvis.json"
  },
  "mcp-server-shell": {
    "category": "command-line",
    "path": "command-line/mcp-server-shell.json"
  },
  "terminal-task-tracker": {
    "category": "command-line",
    "path": "command-line/terminal-task-tracker.json"
  },
  "powershell-exec": {
    "category": "command-line",
    "path": "command-line/powershell-exec.json"
  },
  "android-automation": {
    "category": "command-line",
    "path": "command-line/android-automation.json"
  },
  "command-executor": {
    "category": "command-line",
    "path": "command-line/command-executor.json"
  },
  "cli-executor": {
    "category": "command-line",
    "path": "command-line/cli-executor.json"
  },
  "mcp-server-macos-defaults": {
    "category": "command-line",
    "path": "command-line/mcp-server-macos-defaults.json"
  },
  "hyprland": {
    "category": "command-line",
    "path": "command-line/hyprland.json"
  },
  "llmbasedos": {
    "category": "command-line",
    "path": "command-line/llmbasedos.json"
  },
  "my-mac": {
    "category": "command-line",
    "path": "command-line/my-mac.json"
  },
  "cua-mcp-server": {
    "category": "command-line",
    "path": "command-line/cua-mcp-server.json"
  },
  "windows-desktop-control": {
    "category": "command-line",
    "path": "command-line/windows-desktop-control.json"
  },
  "macos-notification-mcp": {
    "category": "command-line",
    "path": "command-line/macos-notification-mcp.json"
  },
  "kubernetes-eye": {
    "category": "command-line",
    "path": "command-line/kubernetes-eye.json"
  },
  "claude-c2": {
    "category": "command-line",
    "path": "command-line/claude-c2.json"
  },
  "mcp-server-ssh-rails-runner": {
    "category": "command-line",
    "path": "command-line/mcp-server-ssh-rails-runner.json",
    "validated": false,
    "tools": {}
  },
  "secure-shell-executor": {
    "category": "command-line",
    "path": "command-line/secure-shell-executor.json"
  },
  "mcp-kubernetes-server": {
    "category": "command-line",
    "path": "command-line/mcp-kubernetes-server.json"
  },
  "terminal-control": {
    "category": "command-line",
    "path": "command-line/terminal-control.json"
  },
  "mcp-server-siri-shortcuts": {
    "category": "command-line",
    "path": "command-line/mcp-server-siri-shortcuts.json",
    "validated": true,
    "tools": {
      "list_shortcuts": {
        "name": "list_shortcuts",
        "description": "List all available Siri shortcuts"
      },
      "open_shortcut": {
        "name": "open_shortcut",
        "description": "Open a shortcut in the Shortcuts app"
      },
      "run_shortcut": {
        "name": "run_shortcut",
        "description": "Run a shortcut by name or identifier (UUID) with optional input and output parameters"
      }
    }
  },
  "script-tool": {
    "category": "command-line",
    "path": "command-line/script-tool.json"
  },
  "@taazkareem/clickup-mcp-server": {
    "category": "communication",
    "path": "communication/taazkareem-clickup-mcp-server.json",
    "validated": true,
    "tools": {
      "get_workspace_hierarchy": {
        "name": "get_workspace_hierarchy",
        "description": "Gets complete workspace hierarchy (spaces, folders, lists). No parameters needed. Returns tree structure with names and IDs for navigation."
      },
      "create_task": {
        "name": "create_task",
        "description": "Creates a single task in a ClickUp list. Use listId (preferred) or listName. Required: name + list info. For multiple tasks use create_bulk_tasks. Can create subtasks via parent param. Supports custom fields as array of {id, value}. Supports assignees as array of user IDs, emails, or usernames."
      },
      "get_task": {
        "name": "get_task",
        "description": "Gets task details by taskId (works with regular/custom IDs) or taskName. For taskName search, provide listName for faster lookup. Set subtasks=true to include all subtask details."
      },
      "update_task": {
        "name": "update_task",
        "description": "Updates task properties. Use taskId (preferred) or taskName + optional listName. At least one update field required. Custom fields supported as array of {id, value}. Supports assignees as array of user IDs, emails, or usernames. WARNING: Using taskName without listName may match multiple tasks."
      },
      "move_task": {
        "name": "move_task",
        "description": "Moves task to different list. Use taskId + (listId/listName) preferred, or taskName + sourceListName + (listId/listName). WARNING: Task statuses may reset if destination list has different status options."
      },
      "duplicate_task": {
        "name": "duplicate_task",
        "description": "Creates copy of task in same/different list. Use taskId + optional (listId/listName), or taskName + sourceListName + optional (listId/listName). Preserves original properties. Default: same list as original."
      },
      "delete_task": {
        "name": "delete_task",
        "description": "PERMANENTLY deletes task. Use taskId (preferred/safest) or taskName + optional listName. WARNING: Cannot be undone. Using taskName without listName may match multiple tasks."
      },
      "get_task_comments": {
        "name": "get_task_comments",
        "description": "Gets task comments. Use taskId (preferred) or taskName + optional listName. Use start/startId params for pagination. Task names may not be unique across lists."
      },
      "create_task_comment": {
        "name": "create_task_comment",
        "description": "Creates task comment. Use taskId (preferred) or taskName + listName. Required: commentText. Optional: notifyAll to notify assignees, assignee to assign comment."
      },
      "attach_task_file": {
        "name": "attach_task_file",
        "description": "Attaches file to task. Use taskId (preferred) or taskName + optional listName. File sources: 1) base64 + filename (≤10MB), 2) URL (http/https), 3) local path (absolute), 4) chunked for large files. WARNING: taskName without listName may match multiple tasks."
      },
      "create_bulk_tasks": {
        "name": "create_bulk_tasks",
        "description": "Creates multiple tasks in one list. Use listId (preferred) or listName + array of tasks (each needs name). Configure batch size/concurrency via options. Tasks can have custom fields as {id, value} array and assignees as array of user IDs, emails, or usernames."
      },
      "update_bulk_tasks": {
        "name": "update_bulk_tasks",
        "description": "Updates multiple tasks efficiently. For each task: use taskId (preferred) or taskName + listName. At least one update field per task. Supports assignees as array of user IDs, emails, or usernames. Configure batch size/concurrency via options. WARNING: taskName without listName will fail."
      },
      "move_bulk_tasks": {
        "name": "move_bulk_tasks",
        "description": "Moves multiple tasks to one list. For each task: use taskId (preferred) or taskName + listName. Target list: use targetListId/Name. Configure batch size/concurrency via options. WARNING: Task statuses may reset, taskName needs listName."
      },
      "delete_bulk_tasks": {
        "name": "delete_bulk_tasks",
        "description": "PERMANENTLY deletes multiple tasks. For each task: use taskId (preferred/safest) or taskName + listName. Configure batch size/concurrency via options. WARNING: Cannot be undone, taskName without listName is dangerous."
      },
      "get_workspace_tasks": {
        "name": "get_workspace_tasks",
        "description": "Purpose: Retrieve tasks from across the entire workspace with powerful filtering options, including tag-based filtering.\n\nValid Usage:\n1. Apply any combination of filters (tags, lists, folders, spaces, statuses, etc.)\n2. Use pagination to manage large result sets\n3. Include subtasks by setting subtasks=true\n\nRequirements:\n- At least one filter parameter is REQUIRED (tags, list_ids, folder_ids, space_ids, statuses, assignees, or date filters)\n- Pagination parameters (page, order_by, reverse) alone are not considered filters\n\nNotes:\n- Provides workspace-wide task access (unlike get_tasks which only searches in one list)\n- Returns complete task details including descriptions, assignees, custom fields, and all metadata\n- Tag filtering is especially useful for cross-list organization (e.g., \"project-x\", \"blocker\", \"needs-review\")\n- Combine multiple filters to narrow down your search scope\n- Use pagination for large result sets\n- Set subtasks=true to include subtask details in the response\n  IMPORTANT: subtasks=true enables subtasks to appear in results, but subtasks must still match your other filter criteria (tags, lists, etc.) to be returned. To see all subtasks of a specific task regardless of filters, use the get_task tool with subtasks=true instead.\n- Use the detail_level parameter to control the amount of data returned:\n  - \"summary\": Returns lightweight task data (name, status, list, tags)\n  - \"detailed\": Returns complete task data with all fields (DEFAULT if not specified)\n- Responses exceeding 50,000 tokens automatically switch to summary format to avoid hitting LLM token limits\n"
      },
      "get_task_time_entries": {
        "name": "get_task_time_entries",
        "description": "Gets all time entries for a task with filtering options. Use taskId (preferred) or taskName + optional listName. Returns all tracked time with user info, descriptions, tags, start/end times, and durations."
      },
      "start_time_tracking": {
        "name": "start_time_tracking",
        "description": "Starts time tracking on a task. Use taskId (preferred) or taskName + optional listName. Optional fields: description, billable status, and tags. Only one timer can be running at a time."
      },
      "stop_time_tracking": {
        "name": "stop_time_tracking",
        "description": "Stops the currently running time tracker. Optional fields: description and tags. Returns the completed time entry details."
      },
      "add_time_entry": {
        "name": "add_time_entry",
        "description": "Adds a manual time entry to a task. Use taskId (preferred) or taskName + optional listName. Required: start time, duration. Optional: description, billable, tags."
      },
      "delete_time_entry": {
        "name": "delete_time_entry",
        "description": "Deletes a time entry. Required: time entry ID."
      },
      "get_current_time_entry": {
        "name": "get_current_time_entry",
        "description": "Gets the currently running time entry, if any. No parameters needed."
      },
      "create_list": {
        "name": "create_list",
        "description": "Creates a list in a ClickUp space. Use spaceId (preferred) or spaceName + list name. Name is required. For lists in folders, use create_list_in_folder. Optional: content, dueDate, priority, assignee, status."
      },
      "create_list_in_folder": {
        "name": "create_list_in_folder",
        "description": "Creates a list in a ClickUp folder. Use folderId (preferred) or folderName + space info + list name. Name is required. When using folderName, spaceId/spaceName required as folder names may not be unique. Optional: content, status."
      },
      "get_list": {
        "name": "get_list",
        "description": "Gets details of a ClickUp list. Use listId (preferred) or listName. Returns list details including name, content, and space info. ListId more reliable as names may not be unique."
      },
      "update_list": {
        "name": "update_list",
        "description": "Updates a ClickUp list. Use listId (preferred) or listName + at least one update field (name/content/status). ListId more reliable as names may not be unique. Only specified fields updated."
      },
      "delete_list": {
        "name": "delete_list",
        "description": "PERMANENTLY deletes a ClickUp list and all its tasks. Use listId (preferred/safest) or listName. WARNING: Cannot be undone, all tasks will be deleted, listName risky if not unique."
      },
      "create_folder": {
        "name": "create_folder",
        "description": "Creates folder in ClickUp space. Use spaceId (preferred) or spaceName + folder name. Optional: override_statuses for folder-specific statuses. Use create_list_in_folder to add lists after creation."
      },
      "get_folder": {
        "name": "get_folder",
        "description": "Gets folder details. Use folderId (preferred) or folderName + (spaceId/spaceName). Helps understand folder structure before creating/updating lists."
      },
      "update_folder": {
        "name": "update_folder",
        "description": "Updates folder properties. Use folderId (preferred) or folderName + (spaceId/spaceName). At least one update field (name/override_statuses) required. Changes apply to all lists in folder."
      },
      "delete_folder": {
        "name": "delete_folder",
        "description": "PERMANENTLY deletes folder and all contents. Use folderId (preferred/safest) or folderName + (spaceId/spaceName). WARNING: Cannot be undone, all lists/tasks deleted, folderName risky if not unique."
      },
      "get_space_tags": {
        "name": "get_space_tags",
        "description": "Gets all tags in a ClickUp space. Use spaceId (preferred) or spaceName. Tags are defined at space level - check available tags before adding to tasks."
      },
      "add_tag_to_task": {
        "name": "add_tag_to_task",
        "description": "Adds existing tag to task. Use taskId (preferred) or taskName + optional listName. Tag must exist in space (use get_space_tags to verify, create_space_tag if needed). WARNING: Will fail if tag doesn't exist."
      },
      "remove_tag_from_task": {
        "name": "remove_tag_from_task",
        "description": "Removes tag from task. Use taskId (preferred) or taskName + optional listName. Only removes tag-task association, tag remains in space. For multiple tasks, provide listName to disambiguate."
      },
      "get_workspace_members": {
        "name": "get_workspace_members",
        "description": "Returns all members (users) in the ClickUp workspace/team. Useful for resolving assignees by name or email."
      },
      "find_member_by_name": {
        "name": "find_member_by_name",
        "description": "Finds a member in the ClickUp workspace by name or email. Returns the member object if found, or null if not found."
      },
      "resolve_assignees": {
        "name": "resolve_assignees",
        "description": "Resolves an array of assignee names or emails to ClickUp user IDs. Returns an array of user IDs, or errors for any that cannot be resolved."
      }
    }
  },
  "@grec0/mcp-s2s-asterisk": {
    "category": "communication",
    "path": "communication/grec0-mcp-s2s-asterisk.json",
    "validated": true,
    "tools": {
      "phone_make_call": {
        "name": "phone_make_call",
        "description": "Realizar una llamada telefónica conversacional automatizada"
      },
      "phone_get_status": {
        "name": "phone_get_status",
        "description": "Obtener el estado actual de una llamada telefónica"
      },
      "phone_cancel_call": {
        "name": "phone_cancel_call",
        "description": "Cancelar una llamada telefónica en curso"
      },
      "phone_get_metrics": {
        "name": "phone_get_metrics",
        "description": "Obtener métricas y estadísticas del sistema telefónico"
      },
      "phone_get_conversation_history": {
        "name": "phone_get_conversation_history",
        "description": "Obtener el historial de conversaciones telefónicas recientes"
      },
      "phone_get_active_calls": {
        "name": "phone_get_active_calls",
        "description": "Obtener lista de llamadas telefónicas activas en este momento"
      },
      "phone_health_check": {
        "name": "phone_health_check",
        "description": "Verificar el estado de salud del sistema telefónico"
      },
      "phone_get_logs": {
        "name": "phone_get_logs",
        "description": "Obtener logs del sistema telefónico para debugging"
      },
      "phone_get_last_result": {
        "name": "phone_get_last_result",
        "description": "Obtener el último resultado procesado de una llamada específica"
      }
    }
  },
  "gmail-mcp": {
    "category": "communication",
    "path": "communication/gmail-mcp.json"
  },
  "mcp-email-server": {
    "category": "communication",
    "path": "communication/mcp-email-server.json"
  },
  "didlogic_mcp": {
    "category": "communication",
    "path": "communication/didlogic_mcp.json"
  },
  "mcp-wechat-moments": {
    "category": "communication",
    "path": "communication/mcp-wechat-moments.json"
  },
  "@prathamesh0901/zoom-mcp-server": {
    "category": "communication",
    "path": "communication/prathamesh0901-zoom-mcp-server.json",
    "validated": true,
    "tools": {
      "get_meetings": {
        "name": "get_meetings",
        "description": "Retrieve all active Zoom meetings"
      },
      "create_meeting": {
        "name": "create_meeting",
        "description": "Create a new Zoom meeting"
      },
      "update_meeting": {
        "name": "update_meeting",
        "description": "Update an existing Zoom meeting"
      },
      "delete_meeting": {
        "name": "delete_meeting",
        "description": "Delete an existing Zoom meeting"
      }
    }
  },
  "votars": {
    "category": "communication",
    "path": "communication/votars.json"
  },
  "google-chat": {
    "category": "communication",
    "path": "communication/google-chat.json"
  },
  "imessage": {
    "category": "communication",
    "path": "communication/imessage.json"
  },
  "@cablate/mcp-google-calendar": {
    "category": "communication",
    "path": "communication/cablate-mcp-google-calendar.json",
    "validated": false,
    "tools": {}
  },
  "gensokyo": {
    "category": "communication",
    "path": "communication/gensokyo.json"
  },
  "warpcast": {
    "category": "communication",
    "path": "communication/warpcast.json"
  },
  "notmuch-sendmail": {
    "category": "communication",
    "path": "communication/notmuch-sendmail.json"
  },
  "outlook-email-processor": {
    "category": "communication",
    "path": "communication/outlook-email-processor.json"
  },
  "quickchat-ai-mcp": {
    "category": "communication",
    "path": "communication/quickchat-ai-mcp.json"
  },
  "keep-mcp": {
    "category": "communication",
    "path": "communication/keep-mcp.json"
  },
  "discord": {
    "category": "communication",
    "path": "communication/discord.json"
  },
  "google-workspace": {
    "category": "communication",
    "path": "communication/google-workspace.json"
  },
  "mcp-mailtrap": {
    "category": "communication",
    "path": "communication/mcp-mailtrap.json",
    "validated": true,
    "tools": {
      "send-email": {
        "name": "send-email",
        "description": "Send transactional email using Mailtrap"
      }
    }
  },
  "server-notify": {
    "category": "communication",
    "path": "communication/server-notify.json"
  },
  "whatsapp-(greenapi)": {
    "category": "communication",
    "path": "communication/whatsapp--greenapi.json"
  },
  "zoom-(no-auth)": {
    "category": "communication",
    "path": "communication/zoom--no-auth.json"
  },
  "signal": {
    "category": "communication",
    "path": "communication/signal.json"
  },
  "imessage-query": {
    "category": "communication",
    "path": "communication/imessage-query.json"
  },
  "google-calendar": {
    "category": "communication",
    "path": "communication/google-calendar.json"
  },
  "weibo": {
    "category": "communication",
    "path": "communication/weibo.json"
  },
  "@kydycode/todoist-mcp-server-ext": {
    "category": "communication",
    "path": "communication/kydycode-todoist-mcp-server-ext.json",
    "validated": true,
    "tools": {
      "todoist_create_task": {
        "name": "todoist_create_task",
        "description": "Create a new task in Todoist with comprehensive options including subtasks"
      },
      "todoist_quick_add_task": {
        "name": "todoist_quick_add_task",
        "description": "Create a task using Todoist's Quick Add feature with natural language parsing"
      },
      "todoist_get_tasks": {
        "name": "todoist_get_tasks",
        "description": "Get tasks with comprehensive filtering and pagination support"
      },
      "todoist_get_task": {
        "name": "todoist_get_task",
        "description": "Get a specific task by its ID"
      },
      "todoist_update_task": {
        "name": "todoist_update_task",
        "description": "Update an existing task by its ID"
      },
      "todoist_delete_task": {
        "name": "todoist_delete_task",
        "description": "Delete a task by its ID"
      },
      "todoist_complete_task": {
        "name": "todoist_complete_task",
        "description": "Mark a task as complete by its ID"
      },
      "todoist_reopen_task": {
        "name": "todoist_reopen_task",
        "description": "Reopen a completed task by its ID"
      },
      "todoist_search_tasks": {
        "name": "todoist_search_tasks",
        "description": "Search for tasks by content/name (fallback for when ID is not known)"
      },
      "todoist_move_task": {
        "name": "todoist_move_task",
        "description": "Move a single task (and its subtasks, if any) to a different project, section, or make it a subtask of another task. Provide the taskId and exactly one of: projectId, sectionId, or parentId."
      },
      "todoist_bulk_move_tasks": {
        "name": "todoist_bulk_move_tasks",
        "description": "Move multiple tasks (and their respective subtasks, if any; e.g., up to 10-20 parent tasks for best performance) to a different project, section, or make them subtasks of another task. Provide an array of taskIds and exactly one destination (projectId, sectionId, or parentId)."
      },
      "todoist_get_projects": {
        "name": "todoist_get_projects",
        "description": "Get all active projects with pagination support"
      },
      "todoist_get_project": {
        "name": "todoist_get_project",
        "description": "Get a specific project by its ID"
      },
      "todoist_create_project": {
        "name": "todoist_create_project",
        "description": "Create a new project"
      },
      "todoist_update_project": {
        "name": "todoist_update_project",
        "description": "Update an existing project"
      },
      "todoist_delete_project": {
        "name": "todoist_delete_project",
        "description": "Delete a project by its ID"
      },
      "todoist_get_sections": {
        "name": "todoist_get_sections",
        "description": "Get all sections, or sections for a specific project. Supports pagination."
      },
      "todoist_create_section": {
        "name": "todoist_create_section",
        "description": "Create a new section in a project"
      },
      "todoist_update_section": {
        "name": "todoist_update_section",
        "description": "Update an existing section"
      },
      "todoist_delete_section": {
        "name": "todoist_delete_section",
        "description": "Delete a section by its ID"
      },
      "todoist_create_label": {
        "name": "todoist_create_label",
        "description": "Create a new label."
      },
      "todoist_get_label": {
        "name": "todoist_get_label",
        "description": "Get a specific label by its ID."
      },
      "todoist_get_labels": {
        "name": "todoist_get_labels",
        "description": "Get all labels. Supports pagination."
      },
      "todoist_update_label": {
        "name": "todoist_update_label",
        "description": "Update an existing label by its ID."
      },
      "todoist_delete_label": {
        "name": "todoist_delete_label",
        "description": "Delete a label by its ID."
      },
      "todoist_create_comment": {
        "name": "todoist_create_comment",
        "description": "Create a new comment on a task or project"
      },
      "todoist_get_comment": {
        "name": "todoist_get_comment",
        "description": "Get a specific comment by its ID"
      },
      "todoist_get_comments": {
        "name": "todoist_get_comments",
        "description": "Get comments for a task or project with pagination support"
      },
      "todoist_update_comment": {
        "name": "todoist_update_comment",
        "description": "Update an existing comment by its ID"
      },
      "todoist_delete_comment": {
        "name": "todoist_delete_comment",
        "description": "Delete a comment by its ID"
      }
    }
  },
  "linkedin-mcp": {
    "category": "communication",
    "path": "communication/linkedin-mcp.json"
  },
  "agent-twitter-client-mcp": {
    "category": "communication",
    "path": "communication/agent-twitter-client-mcp.json",
    "validated": false,
    "tools": {}
  },
  "telegram": {
    "category": "communication",
    "path": "communication/telegram.json"
  },
  "vonage-assist": {
    "category": "communication",
    "path": "communication/vonage-assist.json"
  },
  "onesignal": {
    "category": "communication",
    "path": "communication/onesignal.json"
  },
  "headless-gmail": {
    "category": "communication",
    "path": "communication/headless-gmail.json"
  },
  "@yiyang.1i/sms-mcp-server": {
    "category": "communication",
    "path": "communication/yiyang-1i-sms-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@chaindead/telegram-mcp": {
    "category": "communication",
    "path": "communication/chaindead-telegram-mcp.json",
    "validated": false,
    "tools": {}
  },
  "whatsapp-bridge": {
    "category": "communication",
    "path": "communication/whatsapp-bridge.json"
  },
  "mcp-server-monday": {
    "category": "communication",
    "path": "communication/mcp-server-monday.json"
  },
  "@horizondatawave/mcp": {
    "category": "communication",
    "path": "communication/horizondatawave-mcp.json",
    "validated": true,
    "tools": {
      "search_linkedin_users": {
        "name": "search_linkedin_users",
        "description": "Search for LinkedIn users with various filters like keywords, name, title, company, location etc."
      },
      "get_linkedin_profile": {
        "name": "get_linkedin_profile",
        "description": "Get detailed information about a LinkedIn user profile"
      },
      "get_linkedin_email_user": {
        "name": "get_linkedin_email_user",
        "description": "Get LinkedIn user details by email"
      },
      "get_linkedin_user_posts": {
        "name": "get_linkedin_user_posts",
        "description": "Get LinkedIn posts for a user by URN (must include prefix, example: fsd_profile:ACoAAEWn01QBWENVMWqyM3BHfa1A-xsvxjdaXsY)"
      },
      "get_linkedin_user_reactions": {
        "name": "get_linkedin_user_reactions",
        "description": "Get LinkedIn reactions for a user by URN (must include prefix, example: fsd_profile:ACoAA...)"
      },
      "get_linkedin_chat_messages": {
        "name": "get_linkedin_chat_messages",
        "description": "Get top chat messages from LinkedIn management API. Account ID is taken from environment."
      },
      "send_linkedin_chat_message": {
        "name": "send_linkedin_chat_message",
        "description": "Send a chat message via LinkedIn management API. Account ID is taken from environment."
      },
      "send_linkedin_connection": {
        "name": "send_linkedin_connection",
        "description": "Send a connection invitation to LinkedIn user. Account ID is taken from environment."
      },
      "send_linkedin_post_comment": {
        "name": "send_linkedin_post_comment",
        "description": "Create a comment on a LinkedIn post or on another comment. Account ID is taken from environment."
      },
      "get_linkedin_user_connections": {
        "name": "get_linkedin_user_connections",
        "description": "Get list of LinkedIn user connections. Account ID is taken from environment."
      },
      "get_linkedin_post_reposts": {
        "name": "get_linkedin_post_reposts",
        "description": "Get LinkedIn reposts for a post by URN"
      },
      "get_linkedin_post_comments": {
        "name": "get_linkedin_post_comments",
        "description": "Get LinkedIn comments for a post by URN"
      },
      "get_linkedin_google_company": {
        "name": "get_linkedin_google_company",
        "description": "Search for LinkedIn companies using Google search. First result is usually the best match."
      },
      "get_linkedin_company": {
        "name": "get_linkedin_company",
        "description": "Get detailed information about a LinkedIn company"
      },
      "get_linkedin_company_employees": {
        "name": "get_linkedin_company_employees",
        "description": "Get employees of a LinkedIn company"
      },
      "send_linkedin_post": {
        "name": "send_linkedin_post",
        "description": "Create a post on LinkedIn. Account ID is taken from environment."
      },
      "linkedin_sn_search_users": {
        "name": "linkedin_sn_search_users",
        "description": "Advanced search for LinkedIn users using Sales Navigator filters"
      },
      "get_linkedin_conversations": {
        "name": "get_linkedin_conversations",
        "description": "Get list of LinkedIn conversations from the messaging interface. Account ID is taken from environment."
      },
      "google_search": {
        "name": "google_search",
        "description": "Search for information using Google search API"
      }
    }
  },
  "dingding-(dingtalk)": {
    "category": "communication",
    "path": "communication/dingding--dingtalk.json"
  },
  "geekbot": {
    "category": "communication",
    "path": "communication/geekbot.json"
  },
  "kakao-talk": {
    "category": "communication",
    "path": "communication/kakao-talk.json"
  },
  "microsoft-teams-notifications": {
    "category": "communication",
    "path": "communication/microsoft-teams-notifications.json"
  },
  "facebook-pages-manager": {
    "category": "communication",
    "path": "communication/facebook-pages-manager.json"
  },
  "mcp-telegram": {
    "category": "communication",
    "path": "communication/mcp-telegram.json"
  },
  "wecom": {
    "category": "communication",
    "path": "communication/wecom.json"
  },
  "@pubnub/mcp": {
    "category": "communication",
    "path": "communication/pubnub-mcp.json",
    "validated": true,
    "tools": {
      "read_pubnub_sdk_docs": {
        "name": "read_pubnub_sdk_docs",
        "description": "Retrieves official PubNub SDK documentation for a given programming language and API reference section. Call this tool for low-level API details, code examples, and usage patterns. Returns documentation in markdown format. For conceptual guides, best practices, and how-tos, also call the read_pubnub_resources tool."
      },
      "read_pubnub_chat_sdk_docs": {
        "name": "read_pubnub_chat_sdk_docs",
        "description": "Retrieves official PubNub Chat SDK documentation for a given Chat SDK language and topic section. Call this tool whenever you need detailed Chat SDK docs, code examples, or usage patterns. Returns documentation in markdown format."
      },
      "read_pubnub_resources": {
        "name": "read_pubnub_resources",
        "description": "Retrieves PubNub conceptual guides and how-to documentation from markdown files in the resources directory. Call this tool for overviews, integration instructions, best practices, and troubleshooting tips. Returns documentation in markdown format. For detailed API reference and SDK code samples, also call the read_pubnub_sdk_docs tool."
      },
      "publish_pubnub_message": {
        "name": "publish_pubnub_message",
        "description": "Publishes a message to a specified PubNub channel. Call this tool whenever you need to send data through PubNub. Provide the channel name and message payload. Returns a timetoken confirming successful publication."
      },
      "get_pubnub_messages": {
        "name": "get_pubnub_messages",
        "description": "Fetches historical messages from one or more PubNub channels. Call this tool whenever you need to access past message history. Provide a list of channel names. Returns message content and metadata in JSON format. Supports pagination with start/end timetokens and count limit."
      },
      "get_pubnub_presence": {
        "name": "get_pubnub_presence",
        "description": "Retrieves real-time presence information for specified PubNub channels and channel groups. Call this tool when you need to monitor active users, occupancy counts, and subscriber UUIDs. Provide channel names and/or channel group names. Returns presence data in JSON format."
      },
      "write_pubnub_app": {
        "name": "write_pubnub_app",
        "description": "Generates step-by-step instructions for creating a PubNub application. Call this tool when you need a checklist of tasks such as setting up your PubNub account, creating a new app, and configuring settings. Call this tool whe the user asks for PubNub MCP. For conceptual guides, best practices, and how-tos, also call the read_pubnub_resources tool. For detailed API reference and SDK code samples, also call the read_pubnub_sdk_docs tool."
      },
      "manage_pubnub_account": {
        "name": "manage_pubnub_account",
        "description": "Manages the users PubNub account apps and API key settings. Uses PUBNUB_EMAIL and PUBNUB_PASSWORD environment variables for authentication. Supports creating, listing, and deleting apps and API keys. Delete action only works on test apps/keys (with \"Test App\" or \"Test Key\" in the name) for safety."
      },
      "pubnub_subscribe_and_receive_messages": {
        "name": "pubnub_subscribe_and_receive_messages",
        "description": "Subscribes to a PubNub channel and waits to receive a specified number of messages, then automatically unsubscribes. Call this tool when you need to listen for messages on a channel. Optionally specify a timeout in milliseconds to avoid waiting indefinitely."
      }
    }
  },
  "resend-mcp": {
    "category": "communication",
    "path": "communication/resend-mcp.json",
    "validated": true,
    "tools": {
      "send_email": {
        "name": "send_email",
        "description": "Sends an email using the Resend API. Supports plain text content, attachments and optional scheduling. Can specify custom sender and reply-to addresses."
      }
    }
  },
  "voyp-mcp": {
    "category": "communication",
    "path": "communication/voyp-mcp.json",
    "validated": true,
    "tools": {
      "start_call": {
        "name": "start_call",
        "description": "Start a new phone call via Voyp API. The API returns the call id and a URL where users can track the progress of the call"
      },
      "hangup_call": {
        "name": "hangup_call",
        "description": "Hangup an existing call"
      },
      "search_places": {
        "name": "search_places",
        "description": "Search places in a given location"
      },
      "search_place": {
        "name": "search_place",
        "description": "Search place details in a given location"
      },
      "search_place_by_number": {
        "name": "search_place_by_number",
        "description": "Find place name and address by phone number"
      },
      "get_call": {
        "name": "get_call",
        "description": "Retrieve call details"
      },
      "get_user": {
        "name": "get_user",
        "description": "Retrieve user profile"
      }
    }
  },
  "twilio-sms": {
    "category": "communication",
    "path": "communication/twilio-sms.json"
  },
  "mcp-simple-openai-assistant": {
    "category": "communication",
    "path": "communication/mcp-simple-openai-assistant.json"
  },
  "mcp-gotify": {
    "category": "communication",
    "path": "communication/mcp-gotify.json"
  },
  "gmail-and-google-calendar": {
    "category": "communication",
    "path": "communication/gmail-and-google-calendar.json"
  },
  "whatsapp-messenger": {
    "category": "communication",
    "path": "communication/whatsapp-messenger.json"
  },
  "discord-(full-api)": {
    "category": "communication",
    "path": "communication/discord--full-api.json"
  },
  "apple-reminders": {
    "category": "communication",
    "path": "communication/apple-reminders.json"
  },
  "x-com-mcp-server": {
    "category": "communication",
    "path": "communication/x-com-mcp-server.json",
    "validated": true,
    "tools": {
      "getSinglePost": {
        "name": "getSinglePost",
        "description": "Retrieve a single post by ID with optional field expansions"
      },
      "getBulkPosts": {
        "name": "getBulkPosts",
        "description": "Retrieve up to 100 posts by their IDs"
      },
      "createPost": {
        "name": "createPost",
        "description": "Create a new post on behalf of the authenticated user"
      },
      "deletePost": {
        "name": "deletePost",
        "description": "Delete a post by ID"
      },
      "hideReply": {
        "name": "hideReply",
        "description": "Hide or unhide a reply to a post"
      },
      "getUserTimeline": {
        "name": "getUserTimeline",
        "description": "Get a user's timeline of posts"
      },
      "getUserMentions": {
        "name": "getUserMentions",
        "description": "Get posts that mention a specific user"
      },
      "searchRecent": {
        "name": "searchRecent",
        "description": "Search recent posts (last 7 days)"
      },
      "searchAll": {
        "name": "searchAll",
        "description": "Search all posts (full archive - requires Academic Research or Enterprise access)"
      },
      "getPostCountsRecent": {
        "name": "getPostCountsRecent",
        "description": "Get time-bucketed post counts for recent posts (last 7 days)"
      },
      "getPostCountsAll": {
        "name": "getPostCountsAll",
        "description": "Get time-bucketed post counts for all posts (full archive - requires Academic Research or Enterprise access)"
      },
      "getRetweets": {
        "name": "getRetweets",
        "description": "Get posts that retweet a specific post"
      },
      "createRetweet": {
        "name": "createRetweet",
        "description": "Retweet a post on behalf of the authenticated user"
      },
      "deleteRetweet": {
        "name": "deleteRetweet",
        "description": "Remove a retweet on behalf of the authenticated user"
      },
      "getLikingUsers": {
        "name": "getLikingUsers",
        "description": "Get users who liked a specific post"
      },
      "getLikedTweets": {
        "name": "getLikedTweets",
        "description": "Get posts that a user has liked"
      },
      "likePost": {
        "name": "likePost",
        "description": "Like a post on behalf of the authenticated user"
      },
      "unlikePost": {
        "name": "unlikePost",
        "description": "Unlike a post on behalf of the authenticated user"
      },
      "getUserBookmarks": {
        "name": "getUserBookmarks",
        "description": "Get a user's bookmarked posts"
      },
      "bookmarkPost": {
        "name": "bookmarkPost",
        "description": "Bookmark a post on behalf of the authenticated user"
      },
      "removeBookmark": {
        "name": "removeBookmark",
        "description": "Remove a bookmark on behalf of the authenticated user"
      }
    }
  },
  "interaction-mcp": {
    "category": "communication",
    "path": "communication/interaction-mcp.json"
  },
  "voice-mcp": {
    "category": "communication",
    "path": "communication/voice-mcp.json"
  },
  "email-manager": {
    "category": "communication",
    "path": "communication/email-manager.json"
  },
  "microsoft-teams": {
    "category": "communication",
    "path": "communication/microsoft-teams.json"
  },
  "mac-messages-mcp": {
    "category": "communication",
    "path": "communication/mac-messages-mcp.json"
  },
  "slack-conversations": {
    "category": "communication",
    "path": "communication/slack-conversations.json"
  },
  "@kazuph/mcp-gmail-gas": {
    "category": "communication",
    "path": "communication/kazuph-mcp-gmail-gas.json",
    "validated": true,
    "tools": {
      "gmail_search_messages": {
        "name": "gmail_search_messages",
        "description": "\nGmail内で指定したクエリに一致するメールを検索します。\nqueryパラメータはGmailの検索クエリ形式で指定します。\n  例: \"subject:Meeting newer_than:1d\"\n\n結果はJSONで返り、メール一覧(件名、messageIdなど)を含みます。\n"
      },
      "gmail_get_message": {
        "name": "gmail_get_message",
        "description": "\n指定したmessageIdのメール本文と詳細を取得します。\n  引数: messageId (GmailのメッセージID)\n"
      },
      "gmail_download_attachment": {
        "name": "gmail_download_attachment",
        "description": "\n指定したmessageIdとattachmentIdで添付ファイルを取得します。\nファイルはDownloadsフォルダに保存されます。\nattachmentIdはattachmentsの各attachmentのnameでありファイル名となることが多いです(invoice.pdfなど)。\n  引数:\n    - messageId: メッセージID（必須）\n    - attachmentId: 添付ファイルID（必須）\n    - outputFilename: 保存時のファイル名（オプション）\n"
      }
    }
  },
  "trello": {
    "category": "communication",
    "path": "communication/trello.json"
  },
  "instagram-dm-mcp": {
    "category": "communication",
    "path": "communication/instagram-dm-mcp.json",
    "validated": false,
    "tools": {}
  },
  "dingtalk-v2": {
    "category": "communication",
    "path": "communication/dingtalk-v2.json"
  },
  "mcp-feishu-proj": {
    "category": "communication",
    "path": "communication/mcp-feishu-proj.json"
  },
  "dingtalk": {
    "category": "communication",
    "path": "communication/dingtalk.json"
  },
  "gmail-&-google-calendar": {
    "category": "communication",
    "path": "communication/gmail---google-calendar.json"
  },
  "@takumi0706/google-calendar-mcp": {
    "category": "communication",
    "path": "communication/takumi0706-google-calendar-mcp.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-bluesky": {
    "category": "communication",
    "path": "communication/mcp-server-bluesky.json",
    "validated": false,
    "tools": {}
  },
  "chatgpt-responses": {
    "category": "communication",
    "path": "communication/chatgpt-responses.json"
  },
  "ticktick": {
    "category": "communication",
    "path": "communication/ticktick.json"
  },
  "imap-workflows": {
    "category": "communication",
    "path": "communication/imap-workflows.json"
  },
  "google-toolbox": {
    "category": "communication",
    "path": "communication/google-toolbox.json"
  },
  "mcp-clickup": {
    "category": "communication",
    "path": "communication/mcp-clickup.json",
    "validated": true,
    "tools": {
      "clickup_authenticate": {
        "name": "clickup_authenticate",
        "description": "Authenticate with ClickUp API using an API token and workspace ID"
      },
      "clickup_get_task_by_custom_id": {
        "name": "clickup_get_task_by_custom_id",
        "description": "Get a task by its custom ID"
      },
      "clickup_get_tasks": {
        "name": "clickup_get_tasks",
        "description": "Get multiple tasks by their IDs"
      },
      "clickup_get_task": {
        "name": "clickup_get_task",
        "description": "Get a task by its ID"
      }
    }
  },
  "@abhaybabbar/retellai-mcp-server": {
    "category": "communication",
    "path": "communication/abhaybabbar-retellai-mcp-server.json",
    "validated": true,
    "tools": {
      "create_phone_call": {
        "name": "create_phone_call",
        "description": "Creates a new phone call"
      },
      "create_web_call": {
        "name": "create_web_call",
        "description": "Creates a new web call"
      },
      "get_call": {
        "name": "get_call",
        "description": "Gets a call by ID"
      },
      "list_calls": {
        "name": "list_calls",
        "description": "Lists all calls"
      },
      "update_call": {
        "name": "update_call",
        "description": "Updates an existing call"
      },
      "delete_call": {
        "name": "delete_call",
        "description": "Deletes a call"
      },
      "list_agents": {
        "name": "list_agents",
        "description": "Lists all Retell agents"
      },
      "create_agent": {
        "name": "create_agent",
        "description": "Creates a new Retell agent"
      },
      "get_agent": {
        "name": "get_agent",
        "description": "Gets a Retell agent by ID"
      },
      "update_agent": {
        "name": "update_agent",
        "description": "Updates an existing Retell agent"
      },
      "delete_agent": {
        "name": "delete_agent",
        "description": "Deletes a Retell agent"
      },
      "get_agent_versions": {
        "name": "get_agent_versions",
        "description": "Gets all versions of a Retell agent"
      },
      "list_phone_numbers": {
        "name": "list_phone_numbers",
        "description": "Lists all Retell phone numbers"
      },
      "create_phone_number": {
        "name": "create_phone_number",
        "description": "Creates a new phone number"
      },
      "get_phone_number": {
        "name": "get_phone_number",
        "description": "Gets details of a specific phone number"
      },
      "update_phone_number": {
        "name": "update_phone_number",
        "description": "Updates a phone number"
      },
      "delete_phone_number": {
        "name": "delete_phone_number",
        "description": "Deletes a phone number"
      },
      "list_voices": {
        "name": "list_voices",
        "description": "Lists all available Retell voices"
      },
      "get_voice": {
        "name": "get_voice",
        "description": "Gets details of a specific voice"
      },
      "list_retell_llms": {
        "name": "list_retell_llms",
        "description": "Lists all Retell LLMs"
      },
      "create_retell_llm": {
        "name": "create_retell_llm",
        "description": "Creates a new Retell LLM"
      },
      "get_retell_llm": {
        "name": "get_retell_llm",
        "description": "Gets a Retell LLM by ID"
      },
      "update_retell_llm": {
        "name": "update_retell_llm",
        "description": "Updates an existing Retell LLM"
      },
      "delete_retell_llm": {
        "name": "delete_retell_llm",
        "description": "Deletes a Retell LLM"
      }
    }
  },
  "ntfy-me-mcp": {
    "category": "communication",
    "path": "communication/ntfy-me-mcp.json",
    "validated": true,
    "tools": {
      "ntfy_me": {
        "name": "ntfy_me",
        "description": "Send a notification to the user via ntfy. Use this tool when the user asks to 'send a notification', 'notify me', 'send me an alert', 'message me', 'ping me', or any similar request. This tool is perfect for sending status updates, alerts, reminders, or notifications about completed tasks."
      },
      "ntfy_me_fetch": {
        "name": "ntfy_me_fetch",
        "description": "Fetch cached messages from an ntfy server topic. Use this tool when the user asks to 'show notifications', 'get my messages', 'show my alerts', 'find notifications', 'search notifications', or any similar request. Great for finding recent notifications, checking message history, or searching for specific notifications by content, title, tags, or priority."
      }
    }
  },
  "@kevinwatt/mcp-webhook": {
    "category": "communication",
    "path": "communication/kevinwatt-mcp-webhook.json",
    "validated": true,
    "tools": {
      "send_message": {
        "name": "send_message",
        "description": "Send message to webhook endpoint"
      }
    }
  },
  "mcp-google-contacts-server": {
    "category": "communication",
    "path": "communication/mcp-google-contacts-server.json"
  },
  "mcp-communicator-telegram": {
    "category": "communication",
    "path": "communication/mcp-communicator-telegram.json",
    "validated": false,
    "tools": {}
  },
  "feishu-mcp": {
    "category": "communication",
    "path": "communication/feishu-mcp.json",
    "validated": false,
    "tools": {}
  },
  "x-twitter-mcp": {
    "category": "communication",
    "path": "communication/x-twitter-mcp.json"
  },
  "twilio-manager": {
    "category": "communication",
    "path": "communication/twilio-manager.json"
  },
  "mcp-fleur": {
    "category": "communication",
    "path": "communication/mcp-fleur.json"
  },
  "@merill/lokka": {
    "category": "communication",
    "path": "communication/merill-lokka.json",
    "validated": false,
    "tools": {}
  },
  "wecom-bot-mcp-server": {
    "category": "communication",
    "path": "communication/wecom-bot-mcp-server.json"
  },
  "outlook-email": {
    "category": "communication",
    "path": "communication/outlook-email.json"
  },
  "x-mcp": {
    "category": "communication",
    "path": "communication/x-mcp.json"
  },
  "migadu-mcp": {
    "category": "communication",
    "path": "communication/migadu-mcp.json"
  },
  "gmail": {
    "category": "communication",
    "path": "communication/gmail.json"
  },
  "teamspeak-mcp": {
    "category": "communication",
    "path": "communication/teamspeak-mcp.json"
  },
  "outlook-meetings-scheduler": {
    "category": "communication",
    "path": "communication/outlook-meetings-scheduler.json",
    "validated": true,
    "tools": {
      "find-person": {
        "name": "find-person",
        "description": "Find a person's email address by their name"
      },
      "create-event": {
        "name": "create-event",
        "description": "Create a calendar event using Microsoft Graph API"
      },
      "create-event-with-attendees": {
        "name": "create-event-with-attendees",
        "description": "Create a calendar event with attendees using Microsoft Graph API"
      },
      "get-event": {
        "name": "get-event",
        "description": "Get details of a calendar event by its ID"
      },
      "list-events": {
        "name": "list-events",
        "description": "List calendar events with optional filtering"
      },
      "update-event": {
        "name": "update-event",
        "description": "Update an existing calendar event"
      },
      "update-event-attendees": {
        "name": "update-event-attendees",
        "description": "Add or remove attendees from a calendar event"
      },
      "delete-event": {
        "name": "delete-event",
        "description": "Delete a calendar event"
      }
    }
  },
  "microsoft-365": {
    "category": "communication",
    "path": "communication/microsoft-365.json"
  },
  "unipile": {
    "category": "communication",
    "path": "communication/unipile.json"
  },
  "instagram-direct-messages": {
    "category": "communication",
    "path": "communication/instagram-direct-messages.json"
  },
  "mcp-server-email": {
    "category": "communication",
    "path": "communication/mcp-server-email.json"
  },
  "@hubspot/mcp-server": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/hubspot-mcp-server.json",
    "validated": true,
    "tools": {
      "hubspot-get-user-details": {
        "name": "hubspot-get-user-details",
        "description": "\n    🎯 Purpose\n      1. Authenticates and analyzes the current HubSpot access token, providing context about the user's permissions and account details.\n\n    🧭 Usage Guidance:\n      1. This tool must be used before performing any operations with Hubspot tools to determine the identity of the user, and permissions they have on their Hubspot account.\n\n    📦 Returns:\n      1. User ID, Hub ID, App ID, token type, a comprehensive list of authorized API scopes, and detailed owner information, and account information.\n      2. The uiDomain and hubId can be used to construct URLs to the HubSpot UI for the user.\n      3. If the user is an owner, the ownerId will help identify objects that are owned by the user.\n  "
      },
      "hubspot-list-objects": {
        "name": "hubspot-list-objects",
        "description": "\n    🎯 Purpose:\n      1. Retrieves a paginated list of objects of a specified type from HubSpot.\n\n    📦 Returns:\n      1. Collection of objects with their properties and metadata, plus pagination information.\n\n    🧭 Usage Guidance:\n      1. Use for initial data exploration to understand the data structure of a HubSpot object type.\n      2. Helps list objects when the search criteria or filter criteria is not clear.\n      3. Use hubspot-search-objects for targeted queries when the data structure is known.\n      4. Use hubspot-batch-read-objects to retrieve specific objects by their IDs.\n      5. Use hubspot-list-associations to list associations between objects.\n  "
      },
      "hubspot-search-objects": {
        "name": "hubspot-search-objects",
        "description": "\n    🎯 Purpose:\n      1. Performs advanced filtered searches across HubSpot object types using complex criteria.\n\n    📋 Prerequisites:\n      1. Use the hubspot-list-objects tool to sample existing objects for the object type.\n      2. If hubspot-list-objects tool's response isn't helpful, use hubspot-list-properties tool.\n\n    📦 Returns:\n      1. Filtered collection matching specific criteria with pagination information.\n\n    🧭 Usage Guidance:\n      1. Preferred for targeted data retrieval when exact filtering criteria are known. Supports complex boolean logic through filter groups.\n      2. Use hubspot-list-objects when filter criteria is not specified or clear or when a search fails.\n      3. Use hubspot-batch-read-objects to retrieve specific objects by their IDs.\n      4. Use hubspot-list-associations to get the associations between objects.\n\n    🔍 Filtering Capabilities:\n      1. Think of \"filterGroups\" as separate search conditions that you want to combine with OR logic (meaning ANY of them can match).\n      2. If you want to find things that match ALL of several conditions (AND logic), put those conditions together in the same filters list.\n      3. If you want to find things that match AT LEAST ONE of several conditions (OR logic), put each condition in a separate filterGroup.\n      4. You can include a maximum of five filterGroups with up to 6 filters in each group, with a maximum of 18 filters in total.\n  "
      },
      "hubspot-batch-create-associations": {
        "name": "hubspot-batch-create-associations",
        "description": "\n    🛡️ Guardrails:\n      1.  Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Establishes relationships between HubSpot objects, linking records across different object types, by creating associations between objects in batch.\n      2. Uses a single set of association types for all associations in the batch.\n\n    📋 Prerequisites:\n      1. Use the hubspot-get-user-details tool to get the OwnerId and UserId if you don't have that already.\n      2. Use the hubspot-get-association-definitions tool to identify valid association types before creating associations.\n  "
      },
      "hubspot-get-association-definitions": {
        "name": "hubspot-get-association-definitions",
        "description": "\n    🎯 Purpose:\n      1. Retrieves valid association types between specific HubSpot object types.\n\n    📦 Returns:\n      1. Array of valid association definitions with type IDs, labels, and categories.\n\n    🧭 Usage Guidance:\n      1. Always use before creating associations to ensure valid relationship types or to help troubleshoot association creation errors.\n  "
      },
      "hubspot-list-associations": {
        "name": "hubspot-list-associations",
        "description": "\n    🎯 Purpose:\n      1. Retrieves existing relationships between a specific object and other objects of a particular type.\n      2. For example, you can find all companies that a contact is associated with, all deals related to a company, or discover which customers have an open ticket.\n\n    📦 Returns:\n      1. Collection of associated object IDs and relationship metadata.\n      2. Use hubspot-batch-read-objects to get more information about the associated objects.\n\n    🧭 Usage Guidance:\n      1. Use this tool when mapping relationships between different HubSpot objects to understand your data's connections.\n      2. This tool is ideal when you already know a specific record's ID and need to discover its relationships with other object types.\n      3. Prefer this over hubspot-search-objects tool when exploring established connections rather than filtering by properties or criteria.\n  "
      },
      "hubspot-batch-create-objects": {
        "name": "hubspot-batch-create-objects",
        "description": "\n    🛡️ Guardrails:\n      1. Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Creates multiple HubSpot objects of the same objectType in a single API call, optimizing for bulk operations.\n\n    📋 Prerequisites:\n      1. Use the hubspot-get-user-details tool to get the OwnerId and UserId if you don't have that already.\n      2. Use the hubspot-list-objects tool to sample existing objects for the object type.\n      3. Use the hubspot-get-association-definitions tool to identify valid association types before creating associations.\n  "
      },
      "hubspot-batch-update-objects": {
        "name": "hubspot-batch-update-objects",
        "description": "\n    🛡️ Guardrails:\n      1. Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Updates multiple existing HubSpot objects of the same objectType in a single API call.\n      2. Use this tool when the user wants to update one or more existing CRM objects.\n      3. If you are unsure about the property type to update, identify existing properties of the object and ask the user.\n\n    📋 Prerequisites:\n      1. Use the hubspot-get-user-details tool to get the OwnerId and UserId if you don't have that already.\n      2. Use the hubspot-list-objects tool to sample existing objects for the object type.\n      3. If hubspot-list-objects tool's response isn't helpful, use hubspot-list-properties tool.\n  "
      },
      "hubspot-batch-read-objects": {
        "name": "hubspot-batch-read-objects",
        "description": "\n    🎯 Purpose:\n      1. Retrieves multiple HubSpot objects of the same object type by their IDs in a single batch operation.\n\n    🧭 Usage Guidance:\n      1. Use this tool to retrieve objects when the object IDs are known.\n  "
      },
      "hubspot-list-properties": {
        "name": "hubspot-list-properties",
        "description": "\n    🎯 Purpose:\n      1. This tool retrieves a complete catalog of properties for any HubSpot object type.\n\n    🧭 Usage Guidance:\n      1. This API has a large response that can consume a lot of tokens. Use the hubspot-list-objects tool to sample existing objects for the object type first.\n      2. Try to use the hubspot-get-property tool to get a specific property.\n      3. Use at the beginning of workflows to understand available data structures.\n  "
      },
      "hubspot-get-property": {
        "name": "hubspot-get-property",
        "description": "\n    🎯 Purpose:\n      1. This tool retrieves detailed information about a specific property for a HubSpot object type.\n      2. You can use this to get all metadata related to a property, including its type, options,\n         and other configuration details.\n  "
      },
      "hubspot-create-property": {
        "name": "hubspot-create-property",
        "description": "\n    🛡️ Guardrails:\n      1. Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Creates new custom properties for HubSpot object types, enabling data structure customization.\n\n    📋 Prerequisites:\n      1. Use the hubspot-get-user-details tool to get the OwnerId and UserId if you don't have that already.\n      2. Use the hubspot-list-objects tool to sample existing objects for the object type.\n      3. If hubspot-list-objects tool's response isn't helpful, use hubspot-list-properties tool.\n\n    🧭 Usage Guidance:\n      1. Use this tool when you need to create a new custom property for a HubSpot object type.\n      2. Makes sure that the user is looking to create a new property, and not create an object of a specific object type.\n      3. Use list-properties to get a list of all properties for a given object type to be sure that the property does not already exist.\n      4. Use list-properties to to understand the data structure of object properties first.\n  "
      },
      "hubspot-update-property": {
        "name": "hubspot-update-property",
        "description": "\n    🛡️ Guardrails:\n      1. Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Updates existing custom properties for HubSpot object types, enabling data structure customization.\n\n    🧭 Usage Guidance:\n      1. Use hubspot-list-objects tool to sample existing objects for the object type.\n      2. If hubspot-list-objects tool's response isn't helpful, use hubspot-list-properties tool.\n  "
      },
      "hubspot-create-engagement": {
        "name": "hubspot-create-engagement",
        "description": "\n    🛡️ Guardrails:\n      1. Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Creates a HubSpot engagement (Note or Task) associated with contacts, companies, deals, or tickets.\n      2. This endpoint is useful for keeping your CRM records up-to-date on any interactions that take place outside of HubSpot.\n      3. Activity reporting in the CRM also feeds off of this data.\n\n    📋 Prerequisites:\n      1. Use the hubspot-get-user-details tool to get the OwnerId and UserId.\n\n    🧭 Usage Guidance:\n      1. Use NOTE type for adding notes to records\n      2. Use TASK type for creating tasks with subject, status, and assignment\n      3. Both require relevant associations to connect them to CRM records\n      4. Other types of engagements (EMAIL, CALL, MEETING) are NOT supported yet.\n      5. HubSpot notes and task descriptions support HTML formatting. However headings (<h1>, <h2>, etc.) look ugly in the CRM. So use them sparingly.\n  "
      },
      "hubspot-get-engagement": {
        "name": "hubspot-get-engagement",
        "description": "\n    🎯 Purpose:\n      1. Retrieves a HubSpot engagement by ID.\n  "
      },
      "hubspot-update-engagement": {
        "name": "hubspot-update-engagement",
        "description": "\n    🛡️ Guardrails:\n      1. Data Modification Warning: This tool modifies HubSpot data. Only use when the user has explicitly requested to update their CRM.\n\n    🎯 Purpose:\n      1. Updates an existing HubSpot engagement (Note or Task).\n      2. Allows modification of engagement attributes, content, and metadata.\n\n    📋 Prerequisites:\n      1. You need the engagement ID to update an existing engagement.\n      2. Use the hubspot-get-engagement tool to get the current engagement details if needed.\n      3. Use the hubspot-get-user-details tool to get the owner ID.\n\n    🧭 Usage Guidance:\n      1. Use for updating NOTE content or TASK details (subject, description, status).\n      2. Only include the fields you want to update - other fields will remain unchanged.\n      3. HubSpot notes and task descriptions support HTML formatting. However headings (<h1>, <h2>, etc.) look ugly in the CRM. So use them sparingly.\n  "
      },
      "hubspot-generate-feedback-link": {
        "name": "hubspot-generate-feedback-link",
        "description": "\n    🎯 Purpose:\n      1. Use this tool when the user wants to submit feedback about HubSpot MCP tool.\n      2. Use this tool proactively when the other HubSpot MCP tools are unable to solve the user's tasks effectively.\n      3. Use this tool when you sense dissatisfaction from the user using HubSpot MCP tools.\n      4. Feedback will help us improve the HubSpot MCP tools in future iterations.\n  "
      },
      "hubspot-get-schemas": {
        "name": "hubspot-get-schemas",
        "description": "\n    🎯 Purpose:\n      1. Retrieves all custom object schemas defined in the HubSpot account.\n\n    🧭 Usage Guidance:\n      1. Before working with custom objects to understand available object types,\n         their properties, and associations.\n\n    📦 Returns:\n      1. Provides the objectTypeId and objectType for each schema.\n      2. These attributes should be used for this object type instead of \"custom\" in subsequent requests.\n  "
      },
      "hubspot-get-link": {
        "name": "hubspot-get-link",
        "description": "\n    🎯 Purpose:\n      1. Generates HubSpot UI links for different pages based on object types and IDs.\n      2. Supports both index pages (lists of objects) and record pages (specific object details).\n\n    📋 Prerequisites:\n      1. Use the hubspot-get-user-details tool to get the PortalId and UiDomain.\n\n    🧭 Usage Guidance:\n      1. Use to generate links to HubSpot UI pages when users need to reference specific HubSpot records.\n      2. Validates that object type IDs exist in the HubSpot system.\n  "
      },
      "hubspot-list-workflows": {
        "name": "hubspot-list-workflows",
        "description": "\n    🎯 Purpose:\n      1. This tool retrieves a paginated list of workflows from the HubSpot account.\n\n    🧭 Usage Guidance:\n      1. Use the \"limit\" parameter to control the number of results returned per page.\n      2. For pagination, use the \"after\" parameter with the value from the previous response's paging.next.after.\n      3. This endpoint returns essential workflow information including ID, name, type, and status.\n  "
      },
      "hubspot-get-workflow": {
        "name": "hubspot-get-workflow",
        "description": "\n    🎯 Purpose:\n      1. This tool retrieves detailed information about a specific workflow from the HubSpot account.\n\n    🧭 Usage Guidance:\n      1. Use the \"flowId\" parameter to specify which workflow to retrieve.\n      2. This endpoint returns complete workflow information including actions, enrollment criteria, and scheduling.\n      3. Use the hubspot-list-workflows tool first to identify the workflow ID you need.\n  "
      }
    }
  },
  "integrator.io": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/integrator-io.json"
  },
  "@clayhq/clay-mcp": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/clayhq-clay-mcp.json",
    "validated": true,
    "tools": {
      "searchContacts": {
        "name": "searchContacts",
        "description": "Search for contacts and return matching people. Use for questions about specific contacts or \"who\" questions (e.g. \"Who did I meet most?\" or \"who works as an engineer?\"). Returns actual contact records for queries needing specific people."
      },
      "searchInteractions": {
        "name": "searchInteractions",
        "description": "Search for interactions and return matching interactions. Use for questions about specific interactions, \"who\" questions (e.g. \"Who did I meet most?\"), finding best friends based on relevance score, or finding recently added/created contacts. Returns actual contact records for queries needing specific interactions."
      },
      "aggregateContacts": {
        "name": "aggregateContacts",
        "description": "Get numerical statistics and counts ONLY. Returns numbers and percentages, never specific contacts. For counting questions like \"how many work at Google?\" or \"what % are engineers?\". Use search endpoint instead for any \"who\" questions or to get actual contact details."
      },
      "getContact": {
        "name": "getContact",
        "description": "Get details for a contact by id, including emails, social links, phone numbers, and notes."
      },
      "createContact": {
        "name": "createContact",
        "description": "Create a new contact record in Clay. This endpoint should only be used when you need to create a completely new contact, not for adding contacts to groups."
      },
      "createNote": {
        "name": "createNote",
        "description": "Create a note for a contact. Only use this when the user explicitly asks to create, add, or save a note."
      },
      "getGroups": {
        "name": "getGroups",
        "description": "Get all groups or lists for the user."
      },
      "createGroup": {
        "name": "createGroup",
        "description": "Create a group or list for the user. If a group with the same name already exists, it will not create a duplicate unless explicitly requested to ignore the check."
      },
      "updateGroup": {
        "name": "updateGroup",
        "description": "Update a group or list. Use this to update the group title and/or modify its members. When adding or removing contacts, provide ALL contact IDs to add/remove in a single call - do not make multiple calls for individual contacts."
      },
      "getNotes": {
        "name": "getNotes",
        "description": "Use ONLY when the user explicitly mentions \"note\" or \"notes\" to retrieve notes between two dates (e.g. \"what notes from last week?\"). Returns notes by creation date only - does NOT search note content or filter by other criteria. NEVER use this tool for finding contacts or any other purpose besides retrieving notes. This tool is strictly prohibited from being used unless \"note\" or \"notes\" are explicitly mentioned in the query."
      },
      "getEvents": {
        "name": "getEvents",
        "description": "Use this tool ONLY to fetch meetings/events in a date range (e.g. \"what meetings next week?\", \"show calendar for tomorrow\"). DO NOT use for counting meetings, analyzing patterns, or finding frequent participants."
      }
    }
  },
  "paylocity": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/paylocity.json"
  },
  "hubspot": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/hubspot.json"
  },
  "agentforce-(salesforce)": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/agentforce--salesforce.json"
  },
  "@shinzolabs/hubspot-mcp": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/shinzolabs-hubspot-mcp.json",
    "validated": false,
    "tools": {}
  },
  "attio-mcp-server": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/attio-mcp-server.json",
    "validated": true,
    "tools": {
      "search-companies": {
        "name": "search-companies",
        "description": "Search for companies by name"
      },
      "read-company-details": {
        "name": "read-company-details",
        "description": "Read details of a company"
      },
      "read-company-notes": {
        "name": "read-company-notes",
        "description": "Read notes for a company"
      },
      "create-company-note": {
        "name": "create-company-note",
        "description": "Add a new note to a company"
      }
    }
  },
  "mcp-salesforce-connector": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/mcp-salesforce-connector.json"
  },
  "mcp-server-port": {
    "category": "customer-data-platforms",
    "path": "customer-data-platforms/mcp-server-port.json"
  },
  "mysql-query-mcp-server": {
    "category": "databases",
    "path": "databases/mysql-query-mcp-server.json",
    "validated": true,
    "tools": {
      "query": {
        "name": "query",
        "description": "Execute read-only SQL queries against MySQL databases"
      },
      "info": {
        "name": "info",
        "description": "Get information about MySQL databases"
      },
      "environments": {
        "name": "environments",
        "description": "List available MySQL database environments"
      }
    }
  },
  "odbc-database-connector": {
    "category": "databases",
    "path": "databases/odbc-database-connector.json"
  },
  "elasticsearch-7.x": {
    "category": "databases",
    "path": "databases/elasticsearch-7-x.json"
  },
  "postgres": {
    "category": "databases",
    "path": "databases/postgres.json"
  },
  "mcp-server-starrocks": {
    "category": "databases",
    "path": "databases/mcp-server-starrocks.json"
  },
  "pyodbc": {
    "category": "databases",
    "path": "databases/pyodbc.json"
  },
  "airtable": {
    "category": "databases",
    "path": "databases/airtable.json"
  },
  "lancedb": {
    "category": "databases",
    "path": "databases/lancedb.json"
  },
  "dynamo-readonly-mcp": {
    "category": "databases",
    "path": "databases/dynamo-readonly-mcp.json",
    "validated": true,
    "tools": {
      "list-tables": {
        "name": "list-tables",
        "description": "Get a list of all DynamoDB tables"
      },
      "describe-table": {
        "name": "describe-table",
        "description": "Get detailed information about a DynamoDB table"
      },
      "scan-table": {
        "name": "scan-table",
        "description": "Scan items from a DynamoDB table"
      },
      "query-table": {
        "name": "query-table",
        "description": "Query items from a DynamoDB table based on conditions"
      },
      "paginate-query-table": {
        "name": "paginate-query-table",
        "description": "Paginate query results"
      },
      "get-item": {
        "name": "get-item",
        "description": "Get an item from a DynamoDB table based on a specific key"
      },
      "count-items": {
        "name": "count-items",
        "description": "Count items in a DynamoDB table"
      }
    }
  },
  "mysql-schema-explorer": {
    "category": "databases",
    "path": "databases/mysql-schema-explorer.json"
  },
  "sqlite": {
    "category": "databases",
    "path": "databases/sqlite.json"
  },
  "neo4j-graph": {
    "category": "databases",
    "path": "databases/neo4j-graph.json"
  },
  "mcp-server-motherduck": {
    "category": "databases",
    "path": "databases/mcp-server-motherduck.json"
  },
  "epsilla": {
    "category": "databases",
    "path": "databases/epsilla.json"
  },
  "mcp-turso": {
    "category": "databases",
    "path": "databases/mcp-turso.json",
    "validated": false,
    "tools": {}
  },
  "@xexr/mcp-libsql": {
    "category": "databases",
    "path": "databases/xexr-mcp-libsql.json",
    "validated": false,
    "tools": {}
  },
  "dicedb": {
    "category": "databases",
    "path": "databases/dicedb.json"
  },
  "adb-mysql-mcp-server": {
    "category": "databases",
    "path": "databases/adb-mysql-mcp-server.json"
  },
  "mcp-timeplus": {
    "category": "databases",
    "path": "databases/mcp-timeplus.json"
  },
  "mssql-mcp-server": {
    "category": "databases",
    "path": "databases/mssql-mcp-server.json"
  },
  "mcp_snowflake_server": {
    "category": "databases",
    "path": "databases/mcp_snowflake_server.json"
  },
  "mcp-server-iris": {
    "category": "databases",
    "path": "databases/mcp-server-iris.json"
  },
  "jdbc-database-connector": {
    "category": "databases",
    "path": "databases/jdbc-database-connector.json"
  },
  "oracle-sql-explorer": {
    "category": "databases",
    "path": "databases/oracle-sql-explorer.json"
  },
  "mcp-dbs": {
    "category": "databases",
    "path": "databases/mcp-dbs.json",
    "validated": false,
    "tools": {}
  },
  "sqlalchemy-odbc-bridge": {
    "category": "databases",
    "path": "databases/sqlalchemy-odbc-bridge.json"
  },
  "greptimedb-mcp-server": {
    "category": "databases",
    "path": "databases/greptimedb-mcp-server.json"
  },
  "database-mcp": {
    "category": "databases",
    "path": "databases/database-mcp.json"
  },
  "clickhouse-database": {
    "category": "databases",
    "path": "databases/clickhouse-database.json"
  },
  "xiyansql-(mysql)": {
    "category": "databases",
    "path": "databases/xiyansql--mysql.json"
  },
  "clickhouse-mcp-server": {
    "category": "databases",
    "path": "databases/clickhouse-mcp-server.json"
  },
  "tidb-ai": {
    "category": "databases",
    "path": "databases/tidb-ai.json"
  },
  "postgresql": {
    "category": "databases",
    "path": "databases/postgresql.json"
  },
  "xano": {
    "category": "databases",
    "path": "databases/xano.json"
  },
  "@kevinwatt/mysql-mcp": {
    "category": "databases",
    "path": "databases/kevinwatt-mysql-mcp.json",
    "validated": true,
    "tools": {
      "mysql_query": {
        "name": "mysql_query",
        "description": "Execute read-only SELECT queries against the MySQL database.\n- Maximum query length: 4096 characters\n- Maximum result rows: 1000\n- Query timeout: 30 seconds"
      },
      "mysql_execute": {
        "name": "mysql_execute",
        "description": "Execute data modification queries (INSERT/UPDATE/DELETE).\n- Returns affected rows count and insert ID\n- Supports parameterized queries\n- Automatic transaction handling"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List all tables in current database"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Show table structure"
      }
    }
  },
  "materialize": {
    "category": "databases",
    "path": "databases/materialize.json"
  },
  "mysql-database-query": {
    "category": "databases",
    "path": "databases/mysql-database-query.json"
  },
  "oracledb-mcp-server": {
    "category": "databases",
    "path": "databases/oracledb-mcp-server.json"
  },
  "dolphindb": {
    "category": "databases",
    "path": "databases/dolphindb.json"
  },
  "@datastax/astra-db-mcp": {
    "category": "databases",
    "path": "databases/datastax-astra-db-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@awesome-ai/elasticsearch-mcp": {
    "category": "databases",
    "path": "databases/awesome-ai-elasticsearch-mcp.json",
    "validated": false,
    "tools": {}
  },
  "sql-server-express": {
    "category": "databases",
    "path": "databases/sql-server-express.json"
  },
  "raphtory-graphql-schema-explorer": {
    "category": "databases",
    "path": "databases/raphtory-graphql-schema-explorer.json"
  },
  "django-migrations": {
    "category": "databases",
    "path": "databases/django-migrations.json"
  },
  "better-qdrant-mcp-server": {
    "category": "databases",
    "path": "databases/better-qdrant-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "sql-server": {
    "category": "databases",
    "path": "databases/sql-server.json"
  },
  "yugabytedb": {
    "category": "databases",
    "path": "databases/yugabytedb.json"
  },
  "appwrite": {
    "category": "databases",
    "path": "databases/appwrite.json"
  },
  "mcp-server-mariadb": {
    "category": "databases",
    "path": "databases/mcp-server-mariadb.json"
  },
  "opensearch": {
    "category": "databases",
    "path": "databases/opensearch.json"
  },
  "mcp-mongodb-atlas": {
    "category": "databases",
    "path": "databases/mcp-mongodb-atlas.json",
    "validated": true,
    "tools": {
      "create_atlas_cluster": {
        "name": "create_atlas_cluster",
        "description": "Creates a new Atlas cluster in an existing Atlas project."
      },
      "setup_atlas_network_access": {
        "name": "setup_atlas_network_access",
        "description": "Sets up network access for an existing Atlas project. Accepts list of IP addresses or CIDR blocks."
      },
      "create_atlas_user": {
        "name": "create_atlas_user",
        "description": "Creates a new database user for an existing Atlas project. User will have atlasAdmin role."
      },
      "get_atlas_connection_strings": {
        "name": "get_atlas_connection_strings",
        "description": "Retrieves connection strings for a cluster in an existing Atlas project."
      },
      "list_atlas_projects": {
        "name": "list_atlas_projects",
        "description": "Lists all Atlas projects that the API key has access to."
      },
      "list_atlas_clusters": {
        "name": "list_atlas_clusters",
        "description": "Lists all clusters in an Atlas project."
      }
    }
  },
  "@joshuarileydev/supabase-mcp-server": {
    "category": "databases",
    "path": "databases/joshuarileydev-supabase-mcp-server.json",
    "validated": true,
    "tools": {
      "list_projects": {
        "name": "list_projects",
        "description": "List all Supabase projects"
      },
      "get_project": {
        "name": "get_project",
        "description": "Get details of a specific Supabase project"
      },
      "create_project": {
        "name": "create_project",
        "description": "Create a new Supabase project"
      },
      "delete_project": {
        "name": "delete_project",
        "description": "Delete a Supabase project"
      },
      "list_organizations": {
        "name": "list_organizations",
        "description": "List all organizations"
      },
      "get_organization": {
        "name": "get_organization",
        "description": "Get details of a specific organization"
      },
      "create_organization": {
        "name": "create_organization",
        "description": "Create a new organization"
      },
      "get_project_api_keys": {
        "name": "get_project_api_keys",
        "description": "Get API keys for a specific Supabase project"
      }
    }
  },
  "postgresql-explorer": {
    "category": "databases",
    "path": "databases/postgresql-explorer.json"
  },
  "@alanse/mcp-neo4j-server": {
    "category": "databases",
    "path": "databases/alanse-mcp-neo4j-server.json",
    "validated": false,
    "tools": {}
  },
  "snowflake": {
    "category": "databases",
    "path": "databases/snowflake.json"
  },
  "chroma-mcp": {
    "category": "databases",
    "path": "databases/chroma-mcp.json"
  },
  "microsoft-sql-server-(mssql)": {
    "category": "databases",
    "path": "databases/microsoft-sql-server--mssql.json"
  },
  "db-connector-(mysql/postgresql)": {
    "category": "databases",
    "path": "databases/db-connector--mysql-postgresql.json"
  },
  "redis": {
    "category": "databases",
    "path": "databases/redis.json"
  },
  "mongodb": {
    "category": "databases",
    "path": "databases/mongodb.json"
  },
  "milvus-vector-database": {
    "category": "databases",
    "path": "databases/milvus-vector-database.json"
  },
  "oceanbase": {
    "category": "databases",
    "path": "databases/oceanbase.json"
  },
  "apache-iotdb": {
    "category": "databases",
    "path": "databases/apache-iotdb.json"
  },
  "jdbc-database-explorer": {
    "category": "databases",
    "path": "databases/jdbc-database-explorer.json"
  },
  "database-connector": {
    "category": "databases",
    "path": "databases/database-connector.json"
  },
  "db-query": {
    "category": "databases",
    "path": "databases/db-query.json"
  },
  "memgraph": {
    "category": "databases",
    "path": "databases/memgraph.json"
  },
  "neo4j-graph-database": {
    "category": "databases",
    "path": "databases/neo4j-graph-database.json"
  },
  "postgres-mcp": {
    "category": "databases",
    "path": "databases/postgres-mcp.json"
  },
  "dblp": {
    "category": "databases",
    "path": "databases/dblp.json"
  },
  "@f4ww4z/mcp-mysql-server": {
    "category": "databases",
    "path": "databases/f4ww4z-mcp-mysql-server.json",
    "validated": true,
    "tools": {
      "connect_db": {
        "name": "connect_db",
        "description": "Connect to MySQL database"
      },
      "query": {
        "name": "query",
        "description": "Execute a SELECT query"
      },
      "execute": {
        "name": "execute",
        "description": "Execute an INSERT, UPDATE, or DELETE query"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List all tables in the database"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Get table structure"
      }
    }
  },
  "mochow-mcp-server": {
    "category": "databases",
    "path": "databases/mochow-mcp-server.json"
  },
  "chromadb": {
    "category": "databases",
    "path": "databases/chromadb.json"
  },
  "oracle-database": {
    "category": "databases",
    "path": "databases/oracle-database.json"
  },
  "mcp-dbutils": {
    "category": "databases",
    "path": "databases/mcp-dbutils.json"
  },
  "clickhouse": {
    "category": "databases",
    "path": "databases/clickhouse.json"
  },
  "cursor-db-explorer": {
    "category": "databases",
    "path": "databases/cursor-db-explorer.json"
  },
  "mysqldb-mcp-server": {
    "category": "databases",
    "path": "databases/mysqldb-mcp-server.json"
  },
  "postgresql-database-explorer": {
    "category": "databases",
    "path": "databases/postgresql-database-explorer.json"
  },
  "polardbx-mcp": {
    "category": "databases",
    "path": "databases/polardbx-mcp.json",
    "validated": false,
    "tools": {}
  },
  "weaviate": {
    "category": "databases",
    "path": "databases/weaviate.json"
  },
  "kevodb": {
    "category": "databases",
    "path": "databases/kevodb.json"
  },
  "alibaba-cloud-rds": {
    "category": "databases",
    "path": "databases/alibaba-cloud-rds.json"
  },
  "zaturn": {
    "category": "databases",
    "path": "databases/zaturn.json"
  },
  "postgresql-alchemy": {
    "category": "databases",
    "path": "databases/postgresql-alchemy.json"
  },
  "mcp-doris": {
    "category": "databases",
    "path": "databases/mcp-doris.json"
  },
  "sql-server-natural-language": {
    "category": "databases",
    "path": "databases/sql-server-natural-language.json"
  },
  "teradata-database": {
    "category": "databases",
    "path": "databases/teradata-database.json"
  },
  "spring-ai-accounts": {
    "category": "databases",
    "path": "databases/spring-ai-accounts.json"
  },
  "sql-alchemy": {
    "category": "databases",
    "path": "databases/sql-alchemy.json"
  },
  "@pinecone-database/mcp": {
    "category": "databases",
    "path": "databases/pinecone-database-mcp.json",
    "validated": true,
    "tools": {
      "search-docs": {
        "name": "search-docs",
        "description": "Search Pinecone documentation for relevant information"
      },
      "list-indexes": {
        "name": "list-indexes",
        "description": "List all Pinecone indexes"
      },
      "describe-index": {
        "name": "describe-index",
        "description": "Describe the configuration of a Pinecone index"
      },
      "describe-index-stats": {
        "name": "describe-index-stats",
        "description": "Describe the statistics of a Pinecone index and its namespaces"
      },
      "create-index-for-model": {
        "name": "create-index-for-model",
        "description": "Create a Pinecone index with integrated inference"
      },
      "upsert-records": {
        "name": "upsert-records",
        "description": "Insert or update records in a Pinecone index"
      },
      "search-records": {
        "name": "search-records",
        "description": "Search an index for records that are similar to the query text"
      },
      "rerank-documents": {
        "name": "rerank-documents",
        "description": "Rerank a set of documents based on a query"
      },
      "cascading-search": {
        "name": "cascading-search",
        "description": "Search across multiple indexes for records that are\nsimilar to the query text, deduplicate and rerank the results."
      }
    }
  },
  "dgraph": {
    "category": "databases",
    "path": "databases/dgraph.json"
  },
  "ydb-mcp": {
    "category": "databases",
    "path": "databases/ydb-mcp.json"
  },
  "starrocks": {
    "category": "databases",
    "path": "databases/starrocks.json"
  },
  "influxdb": {
    "category": "databases",
    "path": "databases/influxdb.json"
  },
  "mssql-database-query": {
    "category": "databases",
    "path": "databases/mssql-database-query.json"
  },
  "toolfront": {
    "category": "databases",
    "path": "databases/toolfront.json"
  },
  "sqlite-explorer": {
    "category": "databases",
    "path": "databases/sqlite-explorer.json"
  },
  "apache-doris": {
    "category": "databases",
    "path": "databases/apache-doris.json"
  },
  "toolbox-for-databases": {
    "category": "databases",
    "path": "databases/toolbox-for-databases.json"
  },
  "centralmind-(database-gateway)": {
    "category": "databases",
    "path": "databases/centralmind--database-gateway.json"
  },
  "@malove86/mcp-mysql-server": {
    "category": "databases",
    "path": "databases/malove86-mcp-mysql-server.json",
    "validated": true,
    "tools": {
      "connect_db": {
        "name": "connect_db",
        "description": "Connect to MySQL database (optional if environment variables are set)"
      },
      "query": {
        "name": "query",
        "description": "Execute a SELECT query"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List all tables in the database"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Get table structure"
      }
    }
  },
  "@elastic/mcp-server-elasticsearch": {
    "category": "databases",
    "path": "databases/elastic-mcp-server-elasticsearch.json",
    "validated": false,
    "tools": {}
  },
  "mssql_mcp_server": {
    "category": "databases",
    "path": "databases/mssql_mcp_server.json"
  },
  "mcp-turso-cloud": {
    "category": "databases",
    "path": "databases/mcp-turso-cloud.json",
    "validated": true,
    "tools": {
      "list_databases": {
        "name": "list_databases",
        "description": "List all databases in your Turso organization"
      },
      "create_database": {
        "name": "create_database",
        "description": "Create a new database in your Turso organization"
      },
      "delete_database": {
        "name": "delete_database",
        "description": "Delete a database from your Turso organization"
      },
      "generate_database_token": {
        "name": "generate_database_token",
        "description": "Generate a new token for a specific database"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "Lists all tables in a database"
      },
      "execute_read_only_query": {
        "name": "execute_read_only_query",
        "description": "Executes a read-only SQL query against a database (e.g., SELECT, PRAGMA)"
      },
      "execute_query": {
        "name": "execute_query",
        "description": "Executes a potentially destructive SQL query against a database (e.g., INSERT, UPDATE, DELETE, CREATE, DROP, ALTER)"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Gets schema information for a table"
      },
      "vector_search": {
        "name": "vector_search",
        "description": "Performs vector similarity search"
      }
    }
  },
  "elasticsearch": {
    "category": "databases",
    "path": "databases/elasticsearch.json"
  },
  "mcp-db-navigator": {
    "category": "databases",
    "path": "databases/mcp-db-navigator.json"
  },
  "supabase": {
    "category": "databases",
    "path": "databases/supabase.json"
  },
  "mcp-server-sqlite-npx": {
    "category": "databases",
    "path": "databases/mcp-server-sqlite-npx.json",
    "validated": false,
    "tools": {}
  },
  "polardb": {
    "category": "databases",
    "path": "databases/polardb.json"
  },
  "mysql-mcp-server": {
    "category": "databases",
    "path": "databases/mysql-mcp-server.json",
    "validated": true,
    "tools": {
      "list_databases": {
        "name": "list_databases",
        "description": "List all accessible databases on the MySQL server"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List all tables in a specified database"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Show the schema for a specific table"
      },
      "execute_query": {
        "name": "execute_query",
        "description": "Execute a read-only SQL query"
      }
    }
  },
  "mysql": {
    "category": "databases",
    "path": "databases/mysql.json"
  },
  "mcp-server-bigquery": {
    "category": "databases",
    "path": "databases/mcp-server-bigquery.json"
  },
  "mongodb-mcp-server": {
    "category": "databases",
    "path": "databases/mongodb-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "tigergraph": {
    "category": "databases",
    "path": "databases/tigergraph.json"
  },
  "hologres-mcp-server": {
    "category": "databases",
    "path": "databases/hologres-mcp-server.json"
  },
  "dummyjson-user-management": {
    "category": "databases",
    "path": "databases/dummyjson-user-management.json"
  },
  "singlestore-mcp-server": {
    "category": "databases",
    "path": "databases/singlestore-mcp-server.json"
  },
  "mcp-server-aact": {
    "category": "databases",
    "path": "databases/mcp-server-aact.json"
  },
  "age-mcp-server": {
    "category": "databases",
    "path": "databases/age-mcp-server.json"
  },
  "alibaba-cloud-lindorm": {
    "category": "databases",
    "path": "databases/alibaba-cloud-lindorm.json"
  },
  "azure-cosmos-db": {
    "category": "databases",
    "path": "databases/azure-cosmos-db.json"
  },
  "dbsnp": {
    "category": "databases",
    "path": "databases/dbsnp.json"
  },
  "nebulagraph-mcp-server": {
    "category": "databases",
    "path": "databases/nebulagraph-mcp-server.json"
  },
  "mysql-sse": {
    "category": "databases",
    "path": "databases/mysql-sse.json"
  },
  "mcp-trino-python": {
    "category": "databases",
    "path": "databases/mcp-trino-python.json"
  },
  "mcp-postgres-server": {
    "category": "databases",
    "path": "databases/mcp-postgres-server.json",
    "validated": true,
    "tools": {
      "connect_db": {
        "name": "connect_db",
        "description": "Connect to PostgreSQL database. NOTE: Default connection exists - only use when requested or if other commands fail"
      },
      "query": {
        "name": "query",
        "description": "Execute a SELECT query"
      },
      "execute": {
        "name": "execute",
        "description": "Execute an INSERT, UPDATE, or DELETE query"
      },
      "list_schemas": {
        "name": "list_schemas",
        "description": "List all schemas in the database"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List tables in the database"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Get table structure"
      }
    }
  },
  "mysql-database-manager": {
    "category": "databases",
    "path": "databases/mysql-database-manager.json"
  },
  "mcp-neo4j-cypher": {
    "category": "databases",
    "path": "databases/mcp-neo4j-cypher.json"
  },
  "trino": {
    "category": "databases",
    "path": "databases/trino.json"
  },
  "supabase-mcp": {
    "category": "databases",
    "path": "databases/supabase-mcp.json",
    "validated": false,
    "tools": {}
  },
  "oracle-mcp-server": {
    "category": "databases",
    "path": "databases/oracle-mcp-server.json"
  },
  "google-analytics-mcp": {
    "category": "data-platforms",
    "path": "data-platforms/google-analytics-mcp.json"
  },
  "mcp-server-axiom": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-server-axiom.json",
    "validated": true,
    "tools": {
      "queryApl": {
        "name": "queryApl",
        "description": "# Instructions\n1. Query Axiom datasets using Axiom Processing Language (APL). The query must be a valid APL query string.\n2. ALWAYS get the schema of the dataset before running queries rather than guessing.\n    You can do this by getting a single event and projecting all fields.\n3. Keep in mind that there's a maximum row limit of 65000 rows per query.\n4. Prefer aggregations over non aggregating queries when possible to reduce the amount of data returned.\n5. Be selective in what you project in each query (unless otherwise needed, like for discovering the schema).\n    It's expensive to project all fields.\n6. ALWAYS restrict the time range of the query to the smallest possible range that\n    meets your needs. This will reduce the amount of data scanned and improve query performance.\n7. NEVER guess the schema of the dataset. If you don't where something is, use search first to find in which fields\n    it appears.\n\n# Examples\nBasic:\n- Filter: ['logs'] | where ['severity'] == \"error\" or ['duration'] > 500ms\n- Time range: ['logs'] | where ['_time'] > ago(2h) and ['_time'] < now()\n- Project rename: ['logs'] | project-rename responseTime=['duration'], path=['url']\n\nAggregations:\n- Count by: ['logs'] | summarize count() by bin(['_time'], 5m), ['status']\n- Multiple aggs: ['logs'] | summarize count(), avg(['duration']), max(['duration']), p95=percentile(['duration'], 95) by ['endpoint']\n- Dimensional: ['logs'] | summarize dimensional_analysis(['isError'], pack_array(['endpoint'], ['status']))\n- Histograms: ['logs'] | summarize histogram(['responseTime'], 100) by ['endpoint']\n- Distinct: ['logs'] | summarize dcount(['userId']) by bin_auto(['_time'])\n\nSearch & Parse:\n- Search all: search \"error\" or \"exception\"\n- Parse logs: ['logs'] | parse-kv ['message'] as (duration:long, error:string) with (pair_delimiter=\",\")\n- Regex extract: ['logs'] | extend errorCode = extract(\"error code ([0-9]+)\", 1, ['message'])\n- Contains ops: ['logs'] | where ['message'] contains_cs \"ERROR\" or ['message'] startswith \"FATAL\"\n\nData Shaping:\n- Extend & Calculate: ['logs'] | extend duration_s = ['duration']/1000, success = ['status'] < 400\n- Dynamic: ['logs'] | extend props = parse_json(['properties']) | where ['props.level'] == \"error\"\n- Pack/Unpack: ['logs'] | extend fields = pack(\"status\", ['status'], \"duration\", ['duration'])\n- Arrays: ['logs'] | where ['url'] in (\"login\", \"logout\", \"home\") | where array_length(['tags']) > 0\n\nAdvanced:\n- Make series: ['metrics'] | make-series avg(['cpu']) default=0 on ['_time'] step 1m by ['host']\n- Join: ['errors'] | join kind=inner (['users'] | project ['userId'], ['email']) on ['userId']\n- Union: union ['logs-app*'] | where ['severity'] == \"error\"\n- Fork: ['logs'] | fork (where ['status'] >= 500 | as errors) (where ['status'] < 300 | as success)\n- Case: ['logs'] | extend level = case(['status'] >= 500, \"error\", ['status'] >= 400, \"warn\", \"info\")\n\nTime Operations:\n- Bin & Range: ['logs'] | where ['_time'] between(datetime(2024-01-01)..now())\n- Multiple time bins: ['logs'] | summarize count() by bin(['_time'], 1h), bin(['_time'], 1d)\n- Time shifts: ['logs'] | extend prev_hour = ['_time'] - 1h\n\nString Operations:\n- String funcs: ['logs'] | extend domain = tolower(extract(\"://([^/]+)\", 1, ['url']))\n- Concat: ['logs'] | extend full_msg = strcat(['level'], \": \", ['message'])\n- Replace: ['logs'] | extend clean_msg = replace_regex(\"(password=)[^&]*\", \"\\1***\", ['message'])\n\nCommon Patterns:\n- Error analysis: ['logs'] | where ['severity'] == \"error\" | summarize error_count=count() by ['error_code'], ['service']\n- Status codes: ['logs'] | summarize requests=count() by ['status'], bin_auto(['_time']) | where ['status'] >= 500\n- Latency tracking: ['logs'] | summarize p50=percentile(['duration'], 50), p90=percentile(['duration'], 90) by ['endpoint']\n- User activity: ['logs'] | summarize user_actions=count() by ['userId'], ['action'], bin(['_time'], 1h)"
      },
      "listDatasets": {
        "name": "listDatasets",
        "description": "List all available Axiom datasets"
      },
      "getDatasetInfoAndSchema": {
        "name": "getDatasetInfoAndSchema",
        "description": "Get dataset info and schema"
      }
    }
  },
  "qdrant-with-openai-embeddings": {
    "category": "data-platforms",
    "path": "data-platforms/qdrant-with-openai-embeddings.json"
  },
  "airbyte-status-checker": {
    "category": "data-platforms",
    "path": "data-platforms/airbyte-status-checker.json"
  },
  "explorium-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/explorium-mcp-server.json"
  },
  "mcp-server-openmetadata": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-server-openmetadata.json"
  },
  "google-sheets": {
    "category": "data-platforms",
    "path": "data-platforms/google-sheets.json"
  },
  "apache-gravitino": {
    "category": "data-platforms",
    "path": "data-platforms/apache-gravitino.json"
  },
  "cloudera-ai-agent-studio": {
    "category": "data-platforms",
    "path": "data-platforms/cloudera-ai-agent-studio.json"
  },
  "mcp-server-opendal": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-server-opendal.json"
  },
  "microsoft-fabric": {
    "category": "data-platforms",
    "path": "data-platforms/microsoft-fabric.json"
  },
  "palantir-foundry": {
    "category": "data-platforms",
    "path": "data-platforms/palantir-foundry.json"
  },
  "keboola-explorer": {
    "category": "data-platforms",
    "path": "data-platforms/keboola-explorer.json"
  },
  "@powerdrillai/powerdrill-mcp": {
    "category": "data-platforms",
    "path": "data-platforms/powerdrillai-powerdrill-mcp.json",
    "validated": true,
    "tools": {
      "mcp_powerdrill_list_datasets": {
        "name": "mcp_powerdrill_list_datasets",
        "description": ""
      },
      "mcp_powerdrill_get_dataset_overview": {
        "name": "mcp_powerdrill_get_dataset_overview",
        "description": ""
      },
      "mcp_powerdrill_create_job": {
        "name": "mcp_powerdrill_create_job",
        "description": ""
      },
      "mcp_powerdrill_create_session": {
        "name": "mcp_powerdrill_create_session",
        "description": ""
      },
      "mcp_powerdrill_list_data_sources": {
        "name": "mcp_powerdrill_list_data_sources",
        "description": ""
      },
      "mcp_powerdrill_list_sessions": {
        "name": "mcp_powerdrill_list_sessions",
        "description": ""
      },
      "mcp_powerdrill_create_dataset": {
        "name": "mcp_powerdrill_create_dataset",
        "description": ""
      },
      "mcp_powerdrill_create_data_source_from_local_file": {
        "name": "mcp_powerdrill_create_data_source_from_local_file",
        "description": ""
      },
      "mcp_powerdrill_delete_dataset": {
        "name": "mcp_powerdrill_delete_dataset",
        "description": ""
      }
    }
  },
  "azure-data-explorer": {
    "category": "data-platforms",
    "path": "data-platforms/azure-data-explorer.json"
  },
  "bigquery": {
    "category": "data-platforms",
    "path": "data-platforms/bigquery.json"
  },
  "kusto-(azure-data-explorer)": {
    "category": "data-platforms",
    "path": "data-platforms/kusto--azure-data-explorer.json"
  },
  "bitable-mcp": {
    "category": "data-platforms",
    "path": "data-platforms/bitable-mcp.json"
  },
  "unity-catalog": {
    "category": "data-platforms",
    "path": "data-platforms/unity-catalog.json"
  },
  "alibabacloud-dataworks-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/alibabacloud-dataworks-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "airflow-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/airflow-mcp-server.json"
  },
  "mcp-server-apache-airflow": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-server-apache-airflow.json"
  },
  "datahub": {
    "category": "data-platforms",
    "path": "data-platforms/datahub.json"
  },
  "dune-analytics": {
    "category": "data-platforms",
    "path": "data-platforms/dune-analytics.json"
  },
  "kestra": {
    "category": "data-platforms",
    "path": "data-platforms/kestra.json"
  },
  "smartsheet-for-healthcare": {
    "category": "data-platforms",
    "path": "data-platforms/smartsheet-for-healthcare.json"
  },
  "prefect-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/prefect-mcp-server.json"
  },
  "databutton-app-mcp": {
    "category": "data-platforms",
    "path": "data-platforms/databutton-app-mcp.json"
  },
  "apache-seatunnel": {
    "category": "data-platforms",
    "path": "data-platforms/apache-seatunnel.json"
  },
  "mcp-google-sheets": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-google-sheets.json"
  },
  "apache-iceberg": {
    "category": "data-platforms",
    "path": "data-platforms/apache-iceberg.json"
  },
  "dbt-mcp": {
    "category": "data-platforms",
    "path": "data-platforms/dbt-mcp.json"
  },
  "@tigrisdata/tigris-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/tigrisdata-tigris-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "data.gov.my": {
    "category": "data-platforms",
    "path": "data-platforms/data-gov-my.json"
  },
  "mcp_cube_server": {
    "category": "data-platforms",
    "path": "data-platforms/mcp_cube_server.json"
  },
  "the-graph": {
    "category": "data-platforms",
    "path": "data-platforms/the-graph.json"
  },
  "agentmode": {
    "category": "data-platforms",
    "path": "data-platforms/agentmode.json"
  },
  "eunomia": {
    "category": "data-platforms",
    "path": "data-platforms/eunomia.json"
  },
  "google-spreadsheet": {
    "category": "data-platforms",
    "path": "data-platforms/google-spreadsheet.json"
  },
  "databricks": {
    "category": "data-platforms",
    "path": "data-platforms/databricks.json"
  },
  "choose-(google-bigquery)": {
    "category": "data-platforms",
    "path": "data-platforms/choose--google-bigquery.json"
  },
  "metabase": {
    "category": "data-platforms",
    "path": "data-platforms/metabase.json"
  },
  "mcp-server-alteryx": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-server-alteryx.json"
  },
  "streamnative-(apache-pulsar/kafka)": {
    "category": "data-platforms",
    "path": "data-platforms/streamnative--apache-pulsar-kafka.json"
  },
  "mcp-pinot-server": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-pinot-server.json"
  },
  "odmcp": {
    "category": "data-platforms",
    "path": "data-platforms/odmcp.json"
  },
  "source-relation": {
    "category": "data-platforms",
    "path": "data-platforms/source-relation.json"
  },
  "opengov-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/opengov-mcp-server.json",
    "validated": true,
    "tools": {
      "get_data": {
        "name": "get_data",
        "description": "[Data Portal] Access data and metadata to learn more about the city and its underlying information."
      }
    }
  },
  "world-bank-data": {
    "category": "data-platforms",
    "path": "data-platforms/world-bank-data.json"
  },
  "azure-data-explorer-(kusto)": {
    "category": "data-platforms",
    "path": "data-platforms/azure-data-explorer--kusto.json"
  },
  "splunk": {
    "category": "data-platforms",
    "path": "data-platforms/splunk.json"
  },
  "datafocus": {
    "category": "data-platforms",
    "path": "data-platforms/datafocus.json"
  },
  "iceberg-mcp": {
    "category": "data-platforms",
    "path": "data-platforms/iceberg-mcp.json"
  },
  "csv-and-excel-processor": {
    "category": "data-platforms",
    "path": "data-platforms/csv-and-excel-processor.json"
  },
  "bloom-growth": {
    "category": "data-platforms",
    "path": "data-platforms/bloom-growth.json"
  },
  "graphql-explorer": {
    "category": "data-platforms",
    "path": "data-platforms/graphql-explorer.json"
  },
  "kafka-streaming": {
    "category": "data-platforms",
    "path": "data-platforms/kafka-streaming.json"
  },
  "atlan-data-catalog": {
    "category": "data-platforms",
    "path": "data-platforms/atlan-data-catalog.json"
  },
  "earthdata_mcp_server": {
    "category": "data-platforms",
    "path": "data-platforms/earthdata_mcp_server.json"
  },
  "@currents/mcp": {
    "category": "developer-tools",
    "path": "developer-tools/currents-mcp.json",
    "validated": true,
    "tools": {
      "get-run": {
        "name": "get-run",
        "description": "Get run details for a defined run ID"
      },
      "get-spec-file-attempts-and-errors": {
        "name": "get-spec-file-attempts-and-errors",
        "description": "Get spec file attempts and errors"
      },
      "get-api-config": {
        "name": "get-api-config",
        "description": "Get Currents API config currently used for Currents API requests"
      }
    }
  },
  "backstage": {
    "category": "developer-tools",
    "path": "developer-tools/backstage.json"
  },
  "go-debugger-(delve)": {
    "category": "developer-tools",
    "path": "developer-tools/go-debugger--delve.json"
  },
  "jadx-(java-decompiler)": {
    "category": "developer-tools",
    "path": "developer-tools/jadx--java-decompiler.json"
  },
  "uml-diagramming": {
    "category": "developer-tools",
    "path": "developer-tools/uml-diagramming.json"
  },
  "abaqus/cae-gui-automation": {
    "category": "developer-tools",
    "path": "developer-tools/abaqus-cae-gui-automation.json"
  },
  "go-documentation": {
    "category": "developer-tools",
    "path": "developer-tools/go-documentation.json"
  },
  "gin-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/gin-mcp.json"
  },
  "aapanel": {
    "category": "developer-tools",
    "path": "developer-tools/aapanel.json"
  },
  "phalcon": {
    "category": "developer-tools",
    "path": "developer-tools/phalcon.json"
  },
  "argocd": {
    "category": "developer-tools",
    "path": "developer-tools/argocd.json"
  },
  "local-dev": {
    "category": "developer-tools",
    "path": "developer-tools/local-dev.json"
  },
  "qasphere-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/qasphere-mcp.json",
    "validated": true,
    "tools": {
      "get_test_case": {
        "name": "get_test_case",
        "description": "Get a test case from QA Sphere using a marker in the format PROJECT_CODE-SEQUENCE (e.g., BDI-123). You can use URLs like: https://example.eu1.qasphere.com/project/%PROJECT_CODE%/tcase/%SEQUENCE%?any Extract %PROJECT_CODE% and %SEQUENCE% from the URL and use them as the marker."
      },
      "get_project": {
        "name": "get_project",
        "description": "Get a project information from QA Sphere using a project code (e.g., BDI). You can extract PROJECT_CODE from URLs https://example.eu1.qasphere.com/project/%PROJECT_CODE%/..."
      },
      "list_projects": {
        "name": "list_projects",
        "description": "Get a list of all projects from current QA Sphere TMS account (qasphere.com)"
      },
      "list_test_cases": {
        "name": "list_test_cases",
        "description": "List test cases from a project in QA Sphere. Supports pagination and various filtering options."
      },
      "list_test_cases_folders": {
        "name": "list_test_cases_folders",
        "description": "List folders for test cases within a specific QA Sphere project. Allows pagination and sorting."
      },
      "list_test_cases_tags": {
        "name": "list_test_cases_tags",
        "description": "List all tags defined within a specific QA Sphere project."
      }
    }
  },
  "mcp-toolbox": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-toolbox.json"
  },
  "mcp-developer-name": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-developer-name.json",
    "validated": true,
    "tools": {
      "get_current_developer_name": {
        "name": "get_current_developer_name",
        "description": "get current developer name"
      }
    }
  },
  "python-toolbox": {
    "category": "developer-tools",
    "path": "developer-tools/python-toolbox.json"
  },
  "dap-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/dap-mcp.json"
  },
  "sinstaller": {
    "category": "developer-tools",
    "path": "developer-tools/sinstaller.json"
  },
  "development-tooling": {
    "category": "developer-tools",
    "path": "developer-tools/development-tooling.json"
  },
  "prompt-template-server-(go)": {
    "category": "developer-tools",
    "path": "developer-tools/prompt-template-server--go.json"
  },
  "llm-context": {
    "category": "developer-tools",
    "path": "developer-tools/llm-context.json"
  },
  "freecad-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/freecad-mcp.json"
  },
  "@nextdrive/github-action-trigger-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/nextdrive-github-action-trigger-mcp.json",
    "validated": true,
    "tools": {
      "get_github_actions": {
        "name": "get_github_actions",
        "description": "Get available GitHub Actions for a repository"
      },
      "get_github_action": {
        "name": "get_github_action",
        "description": "Get detailed information about a specific GitHub Action, including inputs and their requirements"
      },
      "trigger_github_action": {
        "name": "trigger_github_action",
        "description": "Trigger a GitHub workflow dispatch event with custom inputs"
      },
      "get_github_release": {
        "name": "get_github_release",
        "description": "Get the latest 2 releases from a GitHub repository"
      }
    }
  },
  "spring-ai": {
    "category": "developer-tools",
    "path": "developer-tools/spring-ai.json"
  },
  "mathcad-prime": {
    "category": "developer-tools",
    "path": "developer-tools/mathcad-prime.json"
  },
  "@ahdev/dokploy-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/ahdev-dokploy-mcp.json",
    "validated": true,
    "tools": {
      "project-all": {
        "name": "project-all",
        "description": "Lists all projects in Dokploy with optimized response size suitable for LLM consumption. Returns summary data including project info, service counts, and basic service details."
      },
      "project-create": {
        "name": "project-create",
        "description": "Creates a new project in Dokploy."
      },
      "project-duplicate": {
        "name": "project-duplicate",
        "description": "Duplicates an existing project in Dokploy with optional service selection."
      },
      "project-one": {
        "name": "project-one",
        "description": "Gets a specific project by its ID in Dokploy."
      },
      "project-remove": {
        "name": "project-remove",
        "description": "Removes/deletes an existing project in Dokploy."
      },
      "project-update": {
        "name": "project-update",
        "description": "Updates an existing project in Dokploy."
      },
      "application-cleanQueues": {
        "name": "application-cleanQueues",
        "description": "Cleans the queues for an application in Dokploy."
      },
      "application-create": {
        "name": "application-create",
        "description": "Creates a new application in Dokploy."
      },
      "application-delete": {
        "name": "application-delete",
        "description": "Deletes an application in Dokploy."
      },
      "application-deploy": {
        "name": "application-deploy",
        "description": "Deploys an application in Dokploy."
      },
      "application-markRunning": {
        "name": "application-markRunning",
        "description": "Marks an application as running in Dokploy."
      },
      "application-move": {
        "name": "application-move",
        "description": "Moves an application to a different project in Dokploy."
      },
      "application-one": {
        "name": "application-one",
        "description": "Gets a specific application by its ID in Dokploy."
      },
      "application-readAppMonitoring": {
        "name": "application-readAppMonitoring",
        "description": "Reads monitoring data for an application in Dokploy."
      },
      "application-readTraefikConfig": {
        "name": "application-readTraefikConfig",
        "description": "Reads Traefik configuration for an application in Dokploy."
      },
      "application-redeploy": {
        "name": "application-redeploy",
        "description": "Redeploys an application in Dokploy."
      },
      "application-refreshToken": {
        "name": "application-refreshToken",
        "description": "Refreshes the token for an application in Dokploy."
      },
      "application-reload": {
        "name": "application-reload",
        "description": "Reloads an application in Dokploy."
      },
      "application-saveBitbucketProvider": {
        "name": "application-saveBitbucketProvider",
        "description": "Saves Bitbucket provider configuration for an application in Dokploy."
      },
      "application-saveBuildType": {
        "name": "application-saveBuildType",
        "description": "Saves build type configuration for an application in Dokploy."
      },
      "application-saveDockerProvider": {
        "name": "application-saveDockerProvider",
        "description": "Saves Docker provider configuration for an application in Dokploy."
      },
      "application-saveEnvironment": {
        "name": "application-saveEnvironment",
        "description": "Saves environment variables for an application in Dokploy."
      },
      "application-saveGitProvider": {
        "name": "application-saveGitProvider",
        "description": "Saves Git provider configuration for an application in Dokploy."
      },
      "application-saveGiteaProvider": {
        "name": "application-saveGiteaProvider",
        "description": "Saves Gitea provider configuration for an application in Dokploy."
      },
      "application-saveGithubProvider": {
        "name": "application-saveGithubProvider",
        "description": "Saves GitHub provider configuration for an application in Dokploy."
      },
      "application-saveGitlabProvider": {
        "name": "application-saveGitlabProvider",
        "description": "Saves GitLab provider configuration for an application in Dokploy."
      },
      "application-start": {
        "name": "application-start",
        "description": "Starts an application in Dokploy."
      },
      "application-stop": {
        "name": "application-stop",
        "description": "Stops an application in Dokploy."
      },
      "application-update": {
        "name": "application-update",
        "description": "Updates an existing application in Dokploy."
      },
      "application-updateTraefikConfig": {
        "name": "application-updateTraefikConfig",
        "description": "Updates Traefik configuration for an application in Dokploy."
      },
      "postgres-changeStatus": {
        "name": "postgres-changeStatus",
        "description": "Changes the status of a PostgreSQL database in Dokploy."
      },
      "postgres-create": {
        "name": "postgres-create",
        "description": "Creates a new PostgreSQL database in Dokploy."
      },
      "postgres-deploy": {
        "name": "postgres-deploy",
        "description": "Deploys a PostgreSQL database in Dokploy."
      },
      "postgres-move": {
        "name": "postgres-move",
        "description": "Moves a PostgreSQL database to a different project in Dokploy."
      },
      "postgres-one": {
        "name": "postgres-one",
        "description": "Gets a specific PostgreSQL database by its ID in Dokploy."
      },
      "postgres-rebuild": {
        "name": "postgres-rebuild",
        "description": "Rebuilds a PostgreSQL database in Dokploy."
      },
      "postgres-reload": {
        "name": "postgres-reload",
        "description": "Reloads a PostgreSQL database in Dokploy."
      },
      "postgres-remove": {
        "name": "postgres-remove",
        "description": "Removes/deletes a PostgreSQL database from Dokploy."
      },
      "postgres-saveEnvironment": {
        "name": "postgres-saveEnvironment",
        "description": "Saves environment variables for a PostgreSQL database in Dokploy."
      },
      "postgres-saveExternalPort": {
        "name": "postgres-saveExternalPort",
        "description": "Saves external port configuration for a PostgreSQL database in Dokploy."
      },
      "postgres-start": {
        "name": "postgres-start",
        "description": "Starts a PostgreSQL database in Dokploy."
      },
      "postgres-stop": {
        "name": "postgres-stop",
        "description": "Stops a PostgreSQL database in Dokploy."
      },
      "postgres-update": {
        "name": "postgres-update",
        "description": "Updates an existing PostgreSQL database in Dokploy."
      }
    }
  },
  "espresso-testing-framework": {
    "category": "developer-tools",
    "path": "developer-tools/espresso-testing-framework.json"
  },
  "kubectl-mcp-tool": {
    "category": "developer-tools",
    "path": "developer-tools/kubectl-mcp-tool.json"
  },
  "buildkite": {
    "category": "developer-tools",
    "path": "developer-tools/buildkite.json"
  },
  "azure-devops": {
    "category": "developer-tools",
    "path": "developer-tools/azure-devops.json"
  },
  "arthas-jvm-diagnostics": {
    "category": "developer-tools",
    "path": "developer-tools/arthas-jvm-diagnostics.json"
  },
  "xcode-diagnostics": {
    "category": "developer-tools",
    "path": "developer-tools/xcode-diagnostics.json"
  },
  "n8n-workflow-summarizer": {
    "category": "developer-tools",
    "path": "developer-tools/n8n-workflow-summarizer.json"
  },
  "jotai-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/jotai-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@jsonresume/mcp": {
    "category": "developer-tools",
    "path": "developer-tools/jsonresume-mcp.json",
    "validated": true,
    "tools": {
      "github_analyze_codebase": {
        "name": "github_analyze_codebase",
        "description": "This is a tool from the github MCP server.\nAnalyzes the current codebase and returns information about technologies, languages, and recent commits"
      },
      "github_check_resume": {
        "name": "github_check_resume",
        "description": "This is a tool from the github MCP server.\nChecks if a GitHub user has a JSON Resume and returns its information"
      },
      "github_enhance_resume_with_project": {
        "name": "github_enhance_resume_with_project",
        "description": "This is a tool from the github MCP server.\nEnhances a GitHub user's JSON Resume with information about their current project"
      }
    }
  },
  "paelladoc": {
    "category": "developer-tools",
    "path": "developer-tools/paelladoc.json"
  },
  "spring-boot-bridge": {
    "category": "developer-tools",
    "path": "developer-tools/spring-boot-bridge.json"
  },
  "@growthbook/mcp": {
    "category": "developer-tools",
    "path": "developer-tools/growthbook-mcp.json",
    "validated": true,
    "tools": {
      "get_environments": {
        "name": "get_environments",
        "description": "Fetches all environments from the GrowthBook API. GrowthBook comes with one environment by default (production), but you can add as many as you need. Feature flags can be enabled and disabled on a per-environment basis. You can also set the default feature state for any new environment. Additionally, you can scope environments to only be available in specific projects, allowing for further control and segmentation over feature delivery."
      },
      "get_projects": {
        "name": "get_projects",
        "description": "Fetches all projects from the GrowthBook API"
      },
      "get_sdk_connections": {
        "name": "get_sdk_connections",
        "description": "Get all SDK connections, \n    which are how GrowthBook connects to an app. \n    Importantly, users need the key, which is a public client key that allows the app to fetch features and experiments the API "
      },
      "create_sdk_connection": {
        "name": "create_sdk_connection",
        "description": "Create an SDK connection for a user. Returns an SDK clientKey that can be used to fetch features and experiments."
      },
      "create_feature_flag": {
        "name": "create_feature_flag",
        "description": "Create, add, or wrap an element with a feature flag."
      },
      "get_feature_flags": {
        "name": "get_feature_flags",
        "description": "Fetches all feature flags from the GrowthBook API. Flags are returned in the order they were created, from oldest to newest."
      },
      "get_single_feature_flag": {
        "name": "get_single_feature_flag",
        "description": "Fetches a specific feature flag from the GrowthBook API"
      },
      "get_stale_safe_rollouts": {
        "name": "get_stale_safe_rollouts",
        "description": "Fetches all complete safe rollouts (rolled-back or released) from the GrowthBook API"
      },
      "generate_flag_types": {
        "name": "generate_flag_types",
        "description": "Generate types for feature flags"
      },
      "get_experiments": {
        "name": "get_experiments",
        "description": "Fetches all experiments from the GrowthBook API"
      },
      "create_force_rule": {
        "name": "create_force_rule",
        "description": "Create a new force rule on an existing feature. If the existing feature isn't apparent, create a new feature using create_feature_flag first. A force rule sets a feature to a specific value for a specific environment based on a condition. For A/B tests and experiments, use create_experiment instead."
      },
      "get_experiment": {
        "name": "get_experiment",
        "description": "Gets a single experiment from GrowthBook"
      },
      "get_attributes": {
        "name": "get_attributes",
        "description": "Get all attributes"
      },
      "search_growthbook_docs": {
        "name": "search_growthbook_docs",
        "description": "Search the GrowthBook docs on how to use a feature"
      }
    }
  },
  "container-use": {
    "category": "developer-tools",
    "path": "developer-tools/container-use.json"
  },
  "maya": {
    "category": "developer-tools",
    "path": "developer-tools/maya.json"
  },
  "higress-api-gateway": {
    "category": "developer-tools",
    "path": "developer-tools/higress-api-gateway.json"
  },
  "repository-to-llm-context": {
    "category": "developer-tools",
    "path": "developer-tools/repository-to-llm-context.json"
  },
  "terraform-registry": {
    "category": "developer-tools",
    "path": "developer-tools/terraform-registry.json"
  },
  "gopls-(go-language-server)": {
    "category": "developer-tools",
    "path": "developer-tools/gopls--go-language-server.json"
  },
  "deepsource-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/deepsource-mcp-server.json",
    "validated": true,
    "tools": {
      "projects": {
        "name": "projects",
        "description": "List all available DeepSource projects. Returns a list of project objects with \"key\" and \"name\" properties."
      },
      "quality_metrics": {
        "name": "quality_metrics",
        "description": "Get quality metrics from a DeepSource project with optional filtering"
      },
      "update_metric_threshold": {
        "name": "update_metric_threshold",
        "description": "Update the threshold for a specific quality metric"
      },
      "update_metric_setting": {
        "name": "update_metric_setting",
        "description": "Update the settings for a quality metric"
      },
      "compliance_report": {
        "name": "compliance_report",
        "description": "Get security compliance reports from a DeepSource project"
      },
      "project_issues": {
        "name": "project_issues",
        "description": "Get issues from a DeepSource project with filtering capabilities"
      },
      "runs": {
        "name": "runs",
        "description": "List analysis runs for a DeepSource project with filtering"
      },
      "run": {
        "name": "run",
        "description": "Get a specific analysis run by its runUid or commitOid"
      },
      "recent_run_issues": {
        "name": "recent_run_issues",
        "description": "Get issues from the most recent analysis run on a specific branch"
      },
      "dependency_vulnerabilities": {
        "name": "dependency_vulnerabilities",
        "description": "Get dependency vulnerabilities from a DeepSource project"
      }
    }
  },
  "agile-flow": {
    "category": "developer-tools",
    "path": "developer-tools/agile-flow.json"
  },
  "pydantic-ai-docs": {
    "category": "developer-tools",
    "path": "developer-tools/pydantic-ai-docs.json"
  },
  "lldb": {
    "category": "developer-tools",
    "path": "developer-tools/lldb.json"
  },
  "powerpoint-automation": {
    "category": "developer-tools",
    "path": "developer-tools/powerpoint-automation.json"
  },
  "kubernetes-listpods": {
    "category": "developer-tools",
    "path": "developer-tools/kubernetes-listpods.json"
  },
  "ansible-automation-platform": {
    "category": "developer-tools",
    "path": "developer-tools/ansible-automation-platform.json"
  },
  "mcp-server-llmling": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-llmling.json"
  },
  "neurolorap-code-collector": {
    "category": "developer-tools",
    "path": "developer-tools/neurolorap-code-collector.json"
  },
  "mcpandroidbuild": {
    "category": "developer-tools",
    "path": "developer-tools/mcpandroidbuild.json"
  },
  "spring-io": {
    "category": "developer-tools",
    "path": "developer-tools/spring-io.json"
  },
  "agentcraft_mcp": {
    "category": "developer-tools",
    "path": "developer-tools/agentcraft_mcp.json"
  },
  "mcp-azure-devops": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-azure-devops.json"
  },
  "xcodemcp": {
    "category": "developer-tools",
    "path": "developer-tools/xcodemcp.json",
    "validated": true,
    "tools": {
      "xcode_open_project": {
        "name": "xcode_open_project",
        "description": "Open an Xcode project or workspace"
      },
      "xcode_build": {
        "name": "xcode_build",
        "description": "Build a specific Xcode project or workspace with the specified scheme. If destination is not provided, uses the currently active destination."
      },
      "xcode_get_schemes": {
        "name": "xcode_get_schemes",
        "description": "Get list of available schemes for a specific project"
      },
      "xcode_set_active_scheme": {
        "name": "xcode_set_active_scheme",
        "description": "Set the active scheme for a specific project"
      },
      "xcode_clean": {
        "name": "xcode_clean",
        "description": "Clean the build directory for a specific project"
      },
      "xcode_test": {
        "name": "xcode_test",
        "description": "Run tests for a specific project"
      },
      "xcode_run": {
        "name": "xcode_run",
        "description": "Run a specific project with the specified scheme"
      },
      "xcode_debug": {
        "name": "xcode_debug",
        "description": "Start debugging session for a specific project"
      },
      "xcode_stop": {
        "name": "xcode_stop",
        "description": "Stop the current scheme action"
      },
      "find_xcresults": {
        "name": "find_xcresults",
        "description": "Find all XCResult files for a specific project with timestamps and file information"
      },
      "xcode_get_run_destinations": {
        "name": "xcode_get_run_destinations",
        "description": "Get list of available run destinations for a specific project"
      },
      "xcode_get_workspace_info": {
        "name": "xcode_get_workspace_info",
        "description": "Get information about a specific workspace"
      },
      "xcode_get_projects": {
        "name": "xcode_get_projects",
        "description": "Get list of projects in a specific workspace"
      },
      "xcode_open_file": {
        "name": "xcode_open_file",
        "description": "Open a file in Xcode"
      },
      "xcode_health_check": {
        "name": "xcode_health_check",
        "description": "Perform a comprehensive health check of the XcodeMCP environment and configuration"
      },
      "xcresult_browse": {
        "name": "xcresult_browse",
        "description": "Browse XCResult files - list all tests or show details for a specific test. Returns comprehensive test results including pass/fail status, failure details, and browsing instructions."
      },
      "xcresult_browser_get_console": {
        "name": "xcresult_browser_get_console",
        "description": "Get console output and test activities for a specific test in an XCResult file"
      },
      "xcresult_summary": {
        "name": "xcresult_summary",
        "description": "Get a quick summary of test results from an XCResult file"
      }
    }
  },
  "weekly-reports": {
    "category": "developer-tools",
    "path": "developer-tools/weekly-reports.json"
  },
  "dev.to": {
    "category": "developer-tools",
    "path": "developer-tools/dev-to.json"
  },
  "gdb-debugger": {
    "category": "developer-tools",
    "path": "developer-tools/gdb-debugger.json"
  },
  "mcpdoc": {
    "category": "developer-tools",
    "path": "developer-tools/mcpdoc.json"
  },
  "gistpad-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/gistpad-mcp.json",
    "validated": true,
    "tools": {
      "list_archived_gists": {
        "name": "list_archived_gists",
        "description": "List all of your archived gists"
      },
      "archive_gist": {
        "name": "archive_gist",
        "description": "Archive a gist by"
      },
      "unarchive_gist": {
        "name": "unarchive_gist",
        "description": "Unarchive a gist"
      },
      "list_gist_comments": {
        "name": "list_gist_comments",
        "description": "List all comments on a gist"
      },
      "add_gist_comment": {
        "name": "add_gist_comment",
        "description": "Add a comment to a gist"
      },
      "delete_gist_comment": {
        "name": "delete_gist_comment",
        "description": "Delete a comment from a gist"
      },
      "edit_gist_comment": {
        "name": "edit_gist_comment",
        "description": "Update the content of an existing gist comment"
      },
      "get_todays_note": {
        "name": "get_todays_note",
        "description": "Get or create the daily note for today's date (for tracking todos, tasks, scratch notes, etc.)"
      },
      "list_daily_notes": {
        "name": "list_daily_notes",
        "description": "List all of your existing/historical daily notes"
      },
      "get_daily_note": {
        "name": "get_daily_note",
        "description": "Get the contents for a specific/existing daily note"
      },
      "delete_daily_note": {
        "name": "delete_daily_note",
        "description": "Delete a specific daily note by date"
      },
      "update_todays_note": {
        "name": "update_todays_note",
        "description": "Update the existing content of today's daily note, which is useful for tracking todos, tasks, scratch notes, etc."
      },
      "update_gist_file": {
        "name": "update_gist_file",
        "description": "Update the content of a file in a gist"
      },
      "add_gist_file": {
        "name": "add_gist_file",
        "description": "Add a new file to a gist"
      },
      "delete_gist_file": {
        "name": "delete_gist_file",
        "description": "Delete a file from a gist"
      },
      "rename_gist_file": {
        "name": "rename_gist_file",
        "description": "Rename a file in a gist"
      },
      "list_gists": {
        "name": "list_gists",
        "description": "List all of your GitHub Gists (excluding daily notes, prompts, and archived gists)"
      },
      "get_gist": {
        "name": "get_gist",
        "description": "Get the full contents of a GitHub Gist by ID (including file contents)."
      },
      "create_gist": {
        "name": "create_gist",
        "description": "Create a new GitHub Gist"
      },
      "delete_gist": {
        "name": "delete_gist",
        "description": "Delete a GitHub Gist by ID"
      },
      "update_gist_description": {
        "name": "update_gist_description",
        "description": "Update a GitHub Gist's description"
      },
      "duplicate_gist": {
        "name": "duplicate_gist",
        "description": "Create a copy of an existing gist"
      },
      "delete_gist_prompt": {
        "name": "delete_gist_prompt",
        "description": "Delete a prompt from your gist-based prompts collection"
      },
      "add_gist_prompt": {
        "name": "add_gist_prompt",
        "description": "Add a new prompt to your gist-based prompts collection"
      },
      "refresh_gists": {
        "name": "refresh_gists",
        "description": "Refresh the server's cache of gists, to ensure it picks up any changes made by external clients."
      },
      "list_starred_gists": {
        "name": "list_starred_gists",
        "description": "List all your starred gists"
      },
      "star_gist": {
        "name": "star_gist",
        "description": "Star a gist"
      },
      "unstar_gist": {
        "name": "unstar_gist",
        "description": "Unstar a gist"
      }
    }
  },
  "hostbridge": {
    "category": "developer-tools",
    "path": "developer-tools/hostbridge.json"
  },
  "hanzo-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/hanzo-mcp.json"
  },
  "devdocs": {
    "category": "developer-tools",
    "path": "developer-tools/devdocs.json"
  },
  "code2prompt": {
    "category": "developer-tools",
    "path": "developer-tools/code2prompt.json"
  },
  "key-server": {
    "category": "developer-tools",
    "path": "developer-tools/key-server.json"
  },
  "prompt-tester": {
    "category": "developer-tools",
    "path": "developer-tools/prompt-tester.json"
  },
  "cube-(blender)": {
    "category": "developer-tools",
    "path": "developer-tools/cube--blender.json"
  },
  "kubernetes-claude": {
    "category": "developer-tools",
    "path": "developer-tools/kubernetes-claude.json"
  },
  "mockloop": {
    "category": "developer-tools",
    "path": "developer-tools/mockloop.json"
  },
  "coding-standards": {
    "category": "developer-tools",
    "path": "developer-tools/coding-standards.json"
  },
  "evolvemcp": {
    "category": "developer-tools",
    "path": "developer-tools/evolvemcp.json"
  },
  "devenvinfoserver": {
    "category": "developer-tools",
    "path": "developer-tools/devenvinfoserver.json"
  },
  "@coderide/mcp": {
    "category": "developer-tools",
    "path": "developer-tools/coderide-mcp.json",
    "validated": true,
    "tools": {
      "start_project": {
        "name": "start_project",
        "description": "Retrieves the project details and the prompt for the very first task of a specified project using the project's unique slug (e.g., 'CRD'). This is useful for initiating work on a new project or understanding its starting point."
      },
      "get_prompt": {
        "name": "get_prompt",
        "description": "Retrieves the specific instructions or prompt for a given task, identified by its unique task number (e.g., 'CRD-1'). This is typically used to understand the detailed requirements or context for an AI agent to work on the task."
      },
      "get_task": {
        "name": "get_task",
        "description": "Retrieves detailed information for a specific task using its unique task number (e.g., 'CRD-1')."
      },
      "get_project": {
        "name": "get_project",
        "description": "Retrieves detailed information about a specific project using its unique 'slug' (three uppercase letters, e.g., 'CRD')."
      },
      "update_task": {
        "name": "update_task",
        "description": "Updates an existing task's 'description' and/or 'status'. The task is identified by its unique 'number' (e.g., 'CRD-1'). At least one of 'description' or 'status' must be provided for an update."
      },
      "update_project": {
        "name": "update_project",
        "description": "Updates a project's knowledge graph data and/or its structure diagram (in Mermaid.js format). The project is identified by its unique 'slug'. At least one of 'project_knowledge' or 'project_diagram' must be provided for an update to occur."
      }
    }
  },
  "aerith-admin-(rbac-dashboard)": {
    "category": "developer-tools",
    "path": "developer-tools/aerith-admin--rbac-dashboard.json"
  },
  "d2-diagramming": {
    "category": "developer-tools",
    "path": "developer-tools/d2-diagramming.json"
  },
  "flutter-documentation": {
    "category": "developer-tools",
    "path": "developer-tools/flutter-documentation.json"
  },
  "kubernetes-natural-language-commander": {
    "category": "developer-tools",
    "path": "developer-tools/kubernetes-natural-language-commander.json"
  },
  "crewai-workflow": {
    "category": "developer-tools",
    "path": "developer-tools/crewai-workflow.json"
  },
  "nuke": {
    "category": "developer-tools",
    "path": "developer-tools/nuke.json"
  },
  "emacs-lisp-generator": {
    "category": "developer-tools",
    "path": "developer-tools/emacs-lisp-generator.json"
  },
  "kdebug-(kubernetes)": {
    "category": "developer-tools",
    "path": "developer-tools/kdebug--kubernetes.json"
  },
  "terry-form-(terraform)": {
    "category": "developer-tools",
    "path": "developer-tools/terry-form--terraform.json"
  },
  "docker": {
    "category": "developer-tools",
    "path": "developer-tools/docker.json"
  },
  "tokenscope": {
    "category": "developer-tools",
    "path": "developer-tools/tokenscope.json"
  },
  "multilspylsp": {
    "category": "developer-tools",
    "path": "developer-tools/multilspylsp.json"
  },
  "source-tree-generator": {
    "category": "developer-tools",
    "path": "developer-tools/source-tree-generator.json"
  },
  "mcp-nixos": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-nixos.json"
  },
  "@wangmhaha/apifox-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/wangmhaha-apifox-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "log-analyzer-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/log-analyzer-mcp.json"
  },
  "helm": {
    "category": "developer-tools",
    "path": "developer-tools/helm.json"
  },
  "documentation-markdown-converter": {
    "category": "developer-tools",
    "path": "developer-tools/documentation-markdown-converter.json"
  },
  "daemonize": {
    "category": "developer-tools",
    "path": "developer-tools/daemonize.json"
  },
  "tekton-ci/cd": {
    "category": "developer-tools",
    "path": "developer-tools/tekton-ci-cd.json"
  },
  "office-word-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/office-word-mcp-server.json"
  },
  "cutter-(reverse-engineering)": {
    "category": "developer-tools",
    "path": "developer-tools/cutter--reverse-engineering.json"
  },
  "project-orchestrator": {
    "category": "developer-tools",
    "path": "developer-tools/project-orchestrator.json"
  },
  "officemcp": {
    "category": "developer-tools",
    "path": "developer-tools/officemcp.json"
  },
  "ast-grep": {
    "category": "developer-tools",
    "path": "developer-tools/ast-grep.json"
  },
  "azure-devops-project-creator": {
    "category": "developer-tools",
    "path": "developer-tools/azure-devops-project-creator.json"
  },
  "code2flow": {
    "category": "developer-tools",
    "path": "developer-tools/code2flow.json"
  },
  "jnews-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/jnews-mcp-server.json"
  },
  "kai-(kubernetes)": {
    "category": "developer-tools",
    "path": "developer-tools/kai--kubernetes.json"
  },
  "rhino3d": {
    "category": "developer-tools",
    "path": "developer-tools/rhino3d.json"
  },
  "1panel": {
    "category": "developer-tools",
    "path": "developer-tools/1panel.json"
  },
  "binary-ninja": {
    "category": "developer-tools",
    "path": "developer-tools/binary-ninja.json"
  },
  "zen": {
    "category": "developer-tools",
    "path": "developer-tools/zen.json"
  },
  "flux-schnell": {
    "category": "developer-tools",
    "path": "developer-tools/flux-schnell.json"
  },
  "bazel": {
    "category": "developer-tools",
    "path": "developer-tools/bazel.json"
  },
  "xcodebuild": {
    "category": "developer-tools",
    "path": "developer-tools/xcodebuild.json"
  },
  "openai-agents-sdk": {
    "category": "developer-tools",
    "path": "developer-tools/openai-agents-sdk.json"
  },
  "grasshopper-3d": {
    "category": "developer-tools",
    "path": "developer-tools/grasshopper-3d.json"
  },
  "devhub-cms-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/devhub-cms-mcp.json"
  },
  "bitrise": {
    "category": "developer-tools",
    "path": "developer-tools/bitrise.json"
  },
  "development-automation-server": {
    "category": "developer-tools",
    "path": "developer-tools/development-automation-server.json"
  },
  "sonarqube-metrics": {
    "category": "developer-tools",
    "path": "developer-tools/sonarqube-metrics.json"
  },
  "office-powerpoint-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/office-powerpoint-mcp-server.json"
  },
  "mcp-server-restart": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-restart.json"
  },
  "xcodebuildmcp": {
    "category": "developer-tools",
    "path": "developer-tools/xcodebuildmcp.json",
    "validated": true,
    "tools": {
      "discover_projs": {
        "name": "discover_projs",
        "description": "Scans a directory (defaults to workspace root) to find Xcode project (.xcodeproj) and workspace (.xcworkspace) files."
      },
      "list_schems_ws": {
        "name": "list_schems_ws",
        "description": "Lists available schemes in the workspace. IMPORTANT: Requires workspacePath. Example: list_schems_ws({ workspacePath: '/path/to/MyProject.xcworkspace' })"
      },
      "list_schems_proj": {
        "name": "list_schems_proj",
        "description": "Lists available schemes in the project file. IMPORTANT: Requires projectPath. Example: list_schems_proj({ projectPath: '/path/to/MyProject.xcodeproj' })"
      },
      "list_sims": {
        "name": "list_sims",
        "description": "Lists available iOS simulators with their UUIDs. "
      },
      "list_devices": {
        "name": "list_devices",
        "description": "Lists connected physical Apple devices (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro) with their UUIDs, names, and connection status. Use this to discover physical devices for testing."
      },
      "show_build_set_ws": {
        "name": "show_build_set_ws",
        "description": "Shows build settings from a workspace using xcodebuild. IMPORTANT: Requires workspacePath and scheme. Example: show_build_set_ws({ workspacePath: '/path/to/MyProject.xcworkspace', scheme: 'MyScheme' })"
      },
      "show_build_set_proj": {
        "name": "show_build_set_proj",
        "description": "Shows build settings from a project file using xcodebuild. IMPORTANT: Requires projectPath and scheme. Example: show_build_set_proj({ projectPath: '/path/to/MyProject.xcodeproj', scheme: 'MyScheme' })"
      },
      "clean_ws": {
        "name": "clean_ws",
        "description": "Cleans build products for a specific workspace using xcodebuild. IMPORTANT: Requires workspacePath. Scheme/Configuration are optional. Example: clean_ws({ workspacePath: '/path/to/MyProject.xcworkspace', scheme: 'MyScheme' })"
      },
      "clean_proj": {
        "name": "clean_proj",
        "description": "Cleans build products for a specific project file using xcodebuild. IMPORTANT: Requires projectPath. Scheme/Configuration are optional. Example: clean_proj({ projectPath: '/path/to/MyProject.xcodeproj', scheme: 'MyScheme' })"
      },
      "swift_package_build": {
        "name": "swift_package_build",
        "description": "Builds a Swift Package with swift build"
      },
      "swift_package_test": {
        "name": "swift_package_test",
        "description": "Runs tests for a Swift Package with swift test"
      },
      "swift_package_run": {
        "name": "swift_package_run",
        "description": "Runs an executable target from a Swift Package with swift run"
      },
      "swift_package_stop": {
        "name": "swift_package_stop",
        "description": "Stops a running Swift Package executable started with swift_package_run"
      },
      "swift_package_list": {
        "name": "swift_package_list",
        "description": "Lists currently running Swift Package processes"
      },
      "swift_package_clean": {
        "name": "swift_package_clean",
        "description": "Cleans Swift Package build artifacts and derived data"
      },
      "build_mac_ws": {
        "name": "build_mac_ws",
        "description": "Builds a macOS app using xcodebuild from a workspace."
      },
      "build_mac_proj": {
        "name": "build_mac_proj",
        "description": "Builds a macOS app using xcodebuild from a project file."
      },
      "build_run_mac_ws": {
        "name": "build_run_mac_ws",
        "description": "Builds and runs a macOS app from a workspace in one step."
      },
      "build_run_mac_proj": {
        "name": "build_run_mac_proj",
        "description": "Builds and runs a macOS app from a project file in one step."
      },
      "build_sim_name_ws": {
        "name": "build_sim_name_ws",
        "description": "Builds an app from a workspace for a specific simulator by name. IMPORTANT: Requires workspacePath, scheme, and simulatorName. Example: build_sim_name_ws({ workspacePath: '/path/to/MyProject.xcworkspace', scheme: 'MyScheme', simulatorName: 'iPhone 16' })"
      },
      "build_sim_name_proj": {
        "name": "build_sim_name_proj",
        "description": "Builds an app from a project file for a specific simulator by name. IMPORTANT: Requires projectPath, scheme, and simulatorName. Example: build_sim_name_proj({ projectPath: '/path/to/MyProject.xcodeproj', scheme: 'MyScheme', simulatorName: 'iPhone 16' })"
      },
      "build_sim_id_ws": {
        "name": "build_sim_id_ws",
        "description": "Builds an app from a workspace for a specific simulator by UUID. IMPORTANT: Requires workspacePath, scheme, and simulatorId. Example: build_sim_id_ws({ workspacePath: '/path/to/MyProject.xcworkspace', scheme: 'MyScheme', simulatorId: 'SIMULATOR_UUID' })"
      },
      "build_sim_id_proj": {
        "name": "build_sim_id_proj",
        "description": "Builds an app from a project file for a specific simulator by UUID. IMPORTANT: Requires projectPath, scheme, and simulatorId. Example: build_sim_id_proj({ projectPath: '/path/to/MyProject.xcodeproj', scheme: 'MyScheme', simulatorId: 'SIMULATOR_UUID' })"
      },
      "build_run_sim_name_ws": {
        "name": "build_run_sim_name_ws",
        "description": "Builds and runs an app from a workspace on a simulator specified by name. IMPORTANT: Requires workspacePath, scheme, and simulatorName. Example: build_run_sim_name_ws({ workspacePath: '/path/to/workspace', scheme: 'MyScheme', simulatorName: 'iPhone 16' })"
      },
      "build_run_sim_name_proj": {
        "name": "build_run_sim_name_proj",
        "description": "Builds and runs an app from a project file on a simulator specified by name. IMPORTANT: Requires projectPath, scheme, and simulatorName. Example: build_run_sim_name_proj({ projectPath: '/path/to/project.xcodeproj', scheme: 'MyScheme', simulatorName: 'iPhone 16' })"
      },
      "build_run_sim_id_ws": {
        "name": "build_run_sim_id_ws",
        "description": "Builds and runs an app from a workspace on a simulator specified by UUID. IMPORTANT: Requires workspacePath, scheme, and simulatorId. Example: build_run_sim_id_ws({ workspacePath: '/path/to/workspace', scheme: 'MyScheme', simulatorId: 'SIMULATOR_UUID' })"
      },
      "build_run_sim_id_proj": {
        "name": "build_run_sim_id_proj",
        "description": "Builds and runs an app from a project file on a simulator specified by UUID. IMPORTANT: Requires projectPath, scheme, and simulatorId. Example: build_run_sim_id_proj({ projectPath: '/path/to/project.xcodeproj', scheme: 'MyScheme', simulatorId: 'SIMULATOR_UUID' })"
      },
      "build_dev_ws": {
        "name": "build_dev_ws",
        "description": "Builds an app from a workspace for a physical Apple device. IMPORTANT: Requires workspacePath and scheme. Example: build_dev_ws({ workspacePath: '/path/to/MyProject.xcworkspace', scheme: 'MyScheme' })"
      },
      "build_dev_proj": {
        "name": "build_dev_proj",
        "description": "Builds an app from a project file for a physical Apple device. IMPORTANT: Requires projectPath and scheme. Example: build_dev_proj({ projectPath: '/path/to/MyProject.xcodeproj', scheme: 'MyScheme' })"
      },
      "test_sim_name_ws": {
        "name": "test_sim_name_ws",
        "description": "Runs tests for a workspace on a simulator by name using xcodebuild test and parses xcresult output."
      },
      "test_sim_name_proj": {
        "name": "test_sim_name_proj",
        "description": "Runs tests for a project on a simulator by name using xcodebuild test and parses xcresult output."
      },
      "test_sim_id_ws": {
        "name": "test_sim_id_ws",
        "description": "Runs tests for a workspace on a simulator by UUID using xcodebuild test and parses xcresult output."
      },
      "test_sim_id_proj": {
        "name": "test_sim_id_proj",
        "description": "Runs tests for a project on a simulator by UUID using xcodebuild test and parses xcresult output."
      },
      "test_device_ws": {
        "name": "test_device_ws",
        "description": "Runs tests for an Apple workspace on a physical device (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro) using xcodebuild test and parses xcresult output. IMPORTANT: Requires workspacePath, scheme, and deviceId."
      },
      "test_device_proj": {
        "name": "test_device_proj",
        "description": "Runs tests for an Apple project on a physical device (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro) using xcodebuild test and parses xcresult output. IMPORTANT: Requires projectPath, scheme, and deviceId."
      },
      "test_macos_ws": {
        "name": "test_macos_ws",
        "description": "Runs tests for a macOS workspace using xcodebuild test and parses xcresult output."
      },
      "test_macos_proj": {
        "name": "test_macos_proj",
        "description": "Runs tests for a macOS project using xcodebuild test and parses xcresult output."
      },
      "get_mac_app_path_ws": {
        "name": "get_mac_app_path_ws",
        "description": "Gets the app bundle path for a macOS application using a workspace. IMPORTANT: Requires workspacePath and scheme. Example: get_mac_app_path_ws({ workspacePath: '/path/to/workspace', scheme: 'MyScheme' })"
      },
      "get_mac_app_path_proj": {
        "name": "get_mac_app_path_proj",
        "description": "Gets the app bundle path for a macOS application using a project file. IMPORTANT: Requires projectPath and scheme. Example: get_mac_app_path_proj({ projectPath: '/path/to/project.xcodeproj', scheme: 'MyScheme' })"
      },
      "get_device_app_path_ws": {
        "name": "get_device_app_path_ws",
        "description": "Gets the app bundle path for a physical device application (iOS, watchOS, tvOS, visionOS) using a workspace. IMPORTANT: Requires workspacePath and scheme. Example: get_device_app_path_ws({ workspacePath: '/path/to/workspace', scheme: 'MyScheme' })"
      },
      "get_device_app_path_proj": {
        "name": "get_device_app_path_proj",
        "description": "Gets the app bundle path for a physical device application (iOS, watchOS, tvOS, visionOS) using a project file. IMPORTANT: Requires projectPath and scheme. Example: get_device_app_path_proj({ projectPath: '/path/to/project.xcodeproj', scheme: 'MyScheme' })"
      },
      "get_sim_app_path_name_ws": {
        "name": "get_sim_app_path_name_ws",
        "description": "Gets the app bundle path for a simulator by name using a workspace. IMPORTANT: Requires workspacePath, scheme, platform, and simulatorName. Example: get_sim_app_path_name_ws({ workspacePath: '/path/to/workspace', scheme: 'MyScheme', platform: 'iOS Simulator', simulatorName: 'iPhone 16' })"
      },
      "get_sim_app_path_name_proj": {
        "name": "get_sim_app_path_name_proj",
        "description": "Gets the app bundle path for a simulator by name using a project file. IMPORTANT: Requires projectPath, scheme, platform, and simulatorName. Example: get_sim_app_path_name_proj({ projectPath: '/path/to/project.xcodeproj', scheme: 'MyScheme', platform: 'iOS Simulator', simulatorName: 'iPhone 16' })"
      },
      "get_sim_app_path_id_ws": {
        "name": "get_sim_app_path_id_ws",
        "description": "Gets the app bundle path for a simulator by UUID using a workspace. IMPORTANT: Requires workspacePath, scheme, platform, and simulatorId. Example: get_sim_app_path_id_ws({ workspacePath: '/path/to/workspace', scheme: 'MyScheme', platform: 'iOS Simulator', simulatorId: 'SIMULATOR_UUID' })"
      },
      "get_sim_app_path_id_proj": {
        "name": "get_sim_app_path_id_proj",
        "description": "Gets the app bundle path for a simulator by UUID using a project file. IMPORTANT: Requires projectPath, scheme, platform, and simulatorId. Example: get_sim_app_path_id_proj({ projectPath: '/path/to/project.xcodeproj', scheme: 'MyScheme', platform: 'iOS Simulator', simulatorId: 'SIMULATOR_UUID' })"
      },
      "boot_sim": {
        "name": "boot_sim",
        "description": "Boots an iOS simulator. IMPORTANT: You MUST provide the simulatorUuid parameter. Example: boot_sim({ simulatorUuid: 'YOUR_UUID_HERE' })"
      },
      "open_sim": {
        "name": "open_sim",
        "description": "Opens the iOS Simulator app."
      },
      "set_sim_appearance": {
        "name": "set_sim_appearance",
        "description": "Sets the appearance mode (dark/light) of an iOS simulator."
      },
      "set_simulator_location": {
        "name": "set_simulator_location",
        "description": "Sets a custom GPS location for the simulator."
      },
      "reset_simulator_location": {
        "name": "reset_simulator_location",
        "description": "Resets the simulator's location to default."
      },
      "set_network_condition": {
        "name": "set_network_condition",
        "description": "Simulates different network conditions (e.g., wifi, 3g, edge, high-latency, dsl, 100%loss, 3g-lossy, very-lossy) in the simulator."
      },
      "reset_network_condition": {
        "name": "reset_network_condition",
        "description": "Resets network conditions to default in the simulator."
      },
      "install_app_sim": {
        "name": "install_app_sim",
        "description": "Installs an app in an iOS simulator. IMPORTANT: You MUST provide both the simulatorUuid and appPath parameters. Example: install_app_sim({ simulatorUuid: 'YOUR_UUID_HERE', appPath: '/path/to/your/app.app' })"
      },
      "launch_app_sim": {
        "name": "launch_app_sim",
        "description": "Launches an app in an iOS simulator. IMPORTANT: You MUST provide both the simulatorUuid and bundleId parameters.\n\nNote: You must install the app in the simulator before launching. The typical workflow is: build → install → launch. Example: launch_app_sim({ simulatorUuid: 'YOUR_UUID_HERE', bundleId: 'com.example.MyApp' })"
      },
      "launch_app_logs_sim": {
        "name": "launch_app_logs_sim",
        "description": "Launches an app in an iOS simulator and captures its logs."
      },
      "stop_app_sim": {
        "name": "stop_app_sim",
        "description": "Stops an app running in an iOS simulator. Requires simulatorUuid and bundleId."
      },
      "install_app_device": {
        "name": "install_app_device",
        "description": "Installs an app on a physical Apple device (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro). Requires deviceId and appPath."
      },
      "launch_app_device": {
        "name": "launch_app_device",
        "description": "Launches an app on a physical Apple device (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro). Requires deviceId and bundleId."
      },
      "stop_app_device": {
        "name": "stop_app_device",
        "description": "Stops an app running on a physical Apple device (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro). Requires deviceId and processId."
      },
      "get_mac_bundle_id": {
        "name": "get_mac_bundle_id",
        "description": "Extracts the bundle identifier from a macOS app bundle (.app). IMPORTANT: You MUST provide the appPath parameter. Example: get_mac_bundle_id({ appPath: '/path/to/your/app.app' }) Note: In some environments, this tool may be prefixed as mcp0_get_macos_bundle_id."
      },
      "get_app_bundle_id": {
        "name": "get_app_bundle_id",
        "description": "Extracts the bundle identifier from an app bundle (.app) for any Apple platform (iOS, iPadOS, watchOS, tvOS, visionOS). IMPORTANT: You MUST provide the appPath parameter. Example: get_app_bundle_id({ appPath: '/path/to/your/app.app' })"
      },
      "launch_mac_app": {
        "name": "launch_mac_app",
        "description": "Launches a macOS application. IMPORTANT: You MUST provide the appPath parameter. Example: launch_mac_app({ appPath: '/path/to/your/app.app' }) Note: In some environments, this tool may be prefixed as mcp0_launch_macos_app."
      },
      "stop_mac_app": {
        "name": "stop_mac_app",
        "description": "Stops a running macOS application. Can stop by app name or process ID."
      },
      "start_sim_log_cap": {
        "name": "start_sim_log_cap",
        "description": "Starts capturing logs from a specified simulator. Returns a session ID. By default, captures only structured logs."
      },
      "stop_sim_log_cap": {
        "name": "stop_sim_log_cap",
        "description": "Stops an active simulator log capture session and returns the captured logs."
      },
      "start_device_log_cap": {
        "name": "start_device_log_cap",
        "description": "Starts capturing logs from a specified Apple device (iPhone, iPad, Apple Watch, Apple TV, Apple Vision Pro) by launching the app with console output. Returns a session ID."
      },
      "stop_device_log_cap": {
        "name": "stop_device_log_cap",
        "description": "Stops an active Apple device log capture session and returns the captured logs."
      },
      "describe_ui": {
        "name": "describe_ui",
        "description": "Gets entire view hierarchy with precise frame coordinates (x, y, width, height) for all visible elements. Use this before UI interactions or after layout changes - do NOT guess coordinates from screenshots. Returns JSON tree with frame data for accurate automation."
      },
      "tap": {
        "name": "tap",
        "description": "Tap at specific coordinates. Use describe_ui to get precise element coordinates (don't guess from screenshots). Supports optional timing delays."
      },
      "long_press": {
        "name": "long_press",
        "description": "Long press at specific coordinates for given duration (ms). Use describe_ui for precise coordinates (don't guess from screenshots)."
      },
      "swipe": {
        "name": "swipe",
        "description": "Swipe from one point to another. Use describe_ui for precise coordinates (don't guess from screenshots). Supports configurable timing."
      },
      "type_text": {
        "name": "type_text",
        "description": "Type text (supports US keyboard characters). Use describe_ui to find text field, tap to focus, then type."
      },
      "key_press": {
        "name": "key_press",
        "description": "Press a single key by keycode on the simulator. Common keycodes: 40=Return, 42=Backspace, 43=Tab, 44=Space, 58-67=F1-F10."
      },
      "button": {
        "name": "button",
        "description": "Press a hardware button on the simulator. Available buttons: apple-pay, home, lock, side-button, siri."
      },
      "key_sequence": {
        "name": "key_sequence",
        "description": "Press a sequence of keys by their keycodes on the simulator. Each key will be pressed and released before the next key."
      },
      "touch": {
        "name": "touch",
        "description": "Perform touch down/up events at specific coordinates. Use describe_ui for precise coordinates (don't guess from screenshots)."
      },
      "gesture": {
        "name": "gesture",
        "description": "Perform preset gesture patterns on the simulator. Available presets: scroll-up, scroll-down, scroll-left, scroll-right, swipe-from-left-edge, swipe-from-right-edge, swipe-from-top-edge, swipe-from-bottom-edge."
      },
      "screenshot": {
        "name": "screenshot",
        "description": "Captures screenshot for visual verification. For UI coordinates, use describe_ui instead (don't determine coordinates from screenshots)."
      },
      "scaffold_ios_project": {
        "name": "scaffold_ios_project",
        "description": "Scaffold a new iOS project from templates. Creates a modern Xcode project with workspace structure, SPM package for features, and proper iOS configuration."
      },
      "scaffold_macos_project": {
        "name": "scaffold_macos_project",
        "description": "Scaffold a new macOS project from templates. Creates a modern Xcode project with workspace structure, SPM package for features, and proper macOS configuration."
      }
    }
  },
  "@stakpak/mcp": {
    "category": "developer-tools",
    "path": "developer-tools/stakpak-mcp.json",
    "validated": true,
    "tools": {
      "generate_infrastructure_code": {
        "name": "generate_infrastructure_code",
        "description": "Generates infrastructure code based on a natural language prompt and selected context"
      }
    }
  },
  "jetbrains-ide": {
    "category": "developer-tools",
    "path": "developer-tools/jetbrains-ide.json"
  },
  "tasks-organizer": {
    "category": "developer-tools",
    "path": "developer-tools/tasks-organizer.json"
  },
  "notion-todo": {
    "category": "developer-tools",
    "path": "developer-tools/notion-todo.json"
  },
  "task-master-ai": {
    "category": "developer-tools",
    "path": "developer-tools/task-master-ai.json",
    "validated": false,
    "tools": {}
  },
  "hoverfly": {
    "category": "developer-tools",
    "path": "developer-tools/hoverfly.json"
  },
  "language-server": {
    "category": "developer-tools",
    "path": "developer-tools/language-server.json"
  },
  "mcp-sys-bridge": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-sys-bridge.json"
  },
  "tku-academic-systems-(tronclass-&-tku-ilife)": {
    "category": "developer-tools",
    "path": "developer-tools/tku-academic-systems--tronclass---tku-ilife.json"
  },
  "laravel-helper-tools": {
    "category": "developer-tools",
    "path": "developer-tools/laravel-helper-tools.json"
  },
  "play-sound": {
    "category": "developer-tools",
    "path": "developer-tools/play-sound.json"
  },
  "nextflow-developer-tools": {
    "category": "developer-tools",
    "path": "developer-tools/nextflow-developer-tools.json"
  },
  "easy-autocad": {
    "category": "developer-tools",
    "path": "developer-tools/easy-autocad.json"
  },
  "video-editor-(ffmpeg)": {
    "category": "developer-tools",
    "path": "developer-tools/video-editor--ffmpeg.json"
  },
  "protobuf-formatter": {
    "category": "developer-tools",
    "path": "developer-tools/protobuf-formatter.json"
  },
  "docker-compose": {
    "category": "developer-tools",
    "path": "developer-tools/docker-compose.json"
  },
  "vscode": {
    "category": "developer-tools",
    "path": "developer-tools/vscode.json"
  },
  "opslevel": {
    "category": "developer-tools",
    "path": "developer-tools/opslevel.json"
  },
  "ansible-tower": {
    "category": "developer-tools",
    "path": "developer-tools/ansible-tower.json"
  },
  "openpyxl-excel": {
    "category": "data-science-tools",
    "path": "data-science-tools/openpyxl-excel.json"
  },
  "duckdb-mcp-server": {
    "category": "data-science-tools",
    "path": "data-science-tools/duckdb-mcp-server.json"
  },
  "r-econometrics": {
    "category": "data-science-tools",
    "path": "data-science-tools/r-econometrics.json"
  },
  "mcp-server-duckdb": {
    "category": "data-science-tools",
    "path": "data-science-tools/mcp-server-duckdb.json"
  },
  "dataset-viewer": {
    "category": "data-science-tools",
    "path": "data-science-tools/dataset-viewer.json"
  },
  "mlflow": {
    "category": "data-science-tools",
    "path": "data-science-tools/mlflow.json"
  },
  "mcp-wolfram-alpha": {
    "category": "data-science-tools",
    "path": "data-science-tools/mcp-wolfram-alpha.json"
  },
  "bayesian-monte-carlo-tree-search": {
    "category": "data-science-tools",
    "path": "data-science-tools/bayesian-monte-carlo-tree-search.json"
  },
  "biomart": {
    "category": "data-science-tools",
    "path": "data-science-tools/biomart.json"
  },
  "multi-document-rag": {
    "category": "data-science-tools",
    "path": "data-science-tools/multi-document-rag.json"
  },
  "reexpress-sdm-verification": {
    "category": "data-science-tools",
    "path": "data-science-tools/reexpress-sdm-verification.json"
  },
  "code-indexer": {
    "category": "data-science-tools",
    "path": "data-science-tools/code-indexer.json"
  },
  "pytorch-hud": {
    "category": "data-science-tools",
    "path": "data-science-tools/pytorch-hud.json"
  },
  "linear-regression": {
    "category": "data-science-tools",
    "path": "data-science-tools/linear-regression.json"
  },
  "universal-solver-(z3,-cvxpy,-or-tools)": {
    "category": "data-science-tools",
    "path": "data-science-tools/universal-solver--z3--cvxpy--or-tools.json"
  },
  "mcp-vcd": {
    "category": "data-science-tools",
    "path": "data-science-tools/mcp-vcd.json"
  },
  "graphistry": {
    "category": "data-science-tools",
    "path": "data-science-tools/graphistry.json"
  },
  "opengenes-mcp": {
    "category": "data-science-tools",
    "path": "data-science-tools/opengenes-mcp.json"
  },
  "focus-sql": {
    "category": "data-science-tools",
    "path": "data-science-tools/focus-sql.json"
  },
  "stata": {
    "category": "data-science-tools",
    "path": "data-science-tools/stata.json"
  },
  "excel-reader": {
    "category": "data-science-tools",
    "path": "data-science-tools/excel-reader.json"
  },
  "excel-master": {
    "category": "data-science-tools",
    "path": "data-science-tools/excel-master.json"
  },
  "log-analysis-sqlite": {
    "category": "data-science-tools",
    "path": "data-science-tools/log-analysis-sqlite.json"
  },
  "kaggle-mcp": {
    "category": "data-science-tools",
    "path": "data-science-tools/kaggle-mcp.json"
  },
  "chronulus-mcp": {
    "category": "data-science-tools",
    "path": "data-science-tools/chronulus-mcp.json"
  },
  "axiom-query": {
    "category": "data-science-tools",
    "path": "data-science-tools/axiom-query.json"
  },
  "hana-cloud-ml-bridge": {
    "category": "data-science-tools",
    "path": "data-science-tools/hana-cloud-ml-bridge.json"
  },
  "sympy": {
    "category": "data-science-tools",
    "path": "data-science-tools/sympy.json"
  },
  "statsource-analytics": {
    "category": "data-science-tools",
    "path": "data-science-tools/statsource-analytics.json"
  },
  "files-db": {
    "category": "data-science-tools",
    "path": "data-science-tools/files-db.json"
  },
  "excel-bridge": {
    "category": "data-science-tools",
    "path": "data-science-tools/excel-bridge.json"
  },
  "kodit": {
    "category": "data-science-tools",
    "path": "data-science-tools/kodit.json"
  },
  "optuna-mcp": {
    "category": "data-science-tools",
    "path": "data-science-tools/optuna-mcp.json"
  },
  "power-bi": {
    "category": "data-science-tools",
    "path": "data-science-tools/power-bi.json"
  },
  "paperswithcode": {
    "category": "data-science-tools",
    "path": "data-science-tools/paperswithcode.json"
  },
  "storm": {
    "category": "data-science-tools",
    "path": "data-science-tools/storm.json"
  },
  "numpy": {
    "category": "data-science-tools",
    "path": "data-science-tools/numpy.json"
  },
  "data-exploration": {
    "category": "data-science-tools",
    "path": "data-science-tools/data-exploration.json"
  },
  "vega-lite-data-visualization": {
    "category": "data-science-tools",
    "path": "data-science-tools/vega-lite-data-visualization.json"
  },
  "adaptive-graph-of-thoughts": {
    "category": "data-science-tools",
    "path": "data-science-tools/adaptive-graph-of-thoughts.json"
  },
  "mcp-excel-server": {
    "category": "data-science-tools",
    "path": "data-science-tools/mcp-excel-server.json"
  },
  "tecton": {
    "category": "data-science-tools",
    "path": "data-science-tools/tecton.json"
  },
  "@antv/mcp-server-chart": {
    "category": "data-science-tools",
    "path": "data-science-tools/antv-mcp-server-chart.json",
    "validated": true,
    "tools": {
      "generate_area_chart": {
        "name": "generate_area_chart",
        "description": "Generate a area chart to show data trends under continuous independent variables and observe the overall data trend, such as, displacement = velocity (average or instantaneous) × time: s = v × t. If the x-axis is time (t) and the y-axis is velocity (v) at each moment, an area chart allows you to observe the trend of velocity over time and infer the distance traveled by the area's size."
      },
      "generate_bar_chart": {
        "name": "generate_bar_chart",
        "description": "Generate a bar chart to show data for numerical comparisons among different categories, such as, comparing categorical data and for horizontal comparisons."
      },
      "generate_boxplot_chart": {
        "name": "generate_boxplot_chart",
        "description": "Generate a boxplot chart to show data for statistical summaries among different categories, such as, comparing the distribution of data points across categories."
      },
      "generate_column_chart": {
        "name": "generate_column_chart",
        "description": "Generate a column chart, which are best for comparing categorical data, such as, when values are close, column charts are preferable because our eyes are better at judging height than other visual elements like area or angles."
      },
      "generate_district_map": {
        "name": "generate_district_map",
        "description": "Generates regional distribution maps, which are usually used to show the administrative divisions and coverage of a dataset. It is not suitable for showing the distribution of specific locations, such as urban administrative divisions, GDP distribution maps of provinces and cities across the country, etc. This tool is limited to generating data maps within China."
      },
      "generate_dual_axes_chart": {
        "name": "generate_dual_axes_chart",
        "description": "Generate a dual axes chart which is a combination chart that integrates two different chart types, typically combining a bar chart with a line chart to display both the trend and comparison of data, such as, the trend of sales and profit over time."
      },
      "generate_fishbone_diagram": {
        "name": "generate_fishbone_diagram",
        "description": "Generate a fishbone diagram chart to uses a fish skeleton, like structure to display the causes or effects of a core problem, with the problem as the fish head and the causes/effects as the fish bones. It suits problems that can be split into multiple related factors."
      },
      "generate_flow_diagram": {
        "name": "generate_flow_diagram",
        "description": "Generate a flow diagram chart to show the steps and decision points of a process or system, such as, scenarios requiring linear process presentation."
      },
      "generate_funnel_chart": {
        "name": "generate_funnel_chart",
        "description": "Generate a funnel chart to visualize the progressive reduction of data as it passes through stages, such as, the conversion rates of users from visiting a website to completing a purchase."
      },
      "generate_histogram_chart": {
        "name": "generate_histogram_chart",
        "description": "Generate a histogram chart to show the frequency of data points within a certain range. It can observe data distribution, such as, normal and skewed distributions, and identify data concentration areas and extreme points."
      },
      "generate_line_chart": {
        "name": "generate_line_chart",
        "description": "Generate a line chart to show trends over time, such as, the ratio of Apple computer sales to Apple's profits changed from 2000 to 2016."
      },
      "generate_liquid_chart": {
        "name": "generate_liquid_chart",
        "description": "Generate a liquid chart to visualize a single value as a percentage, such as, the current occupancy rate of a reservoir or the completion percentage of a project."
      },
      "generate_mind_map": {
        "name": "generate_mind_map",
        "description": "Generate a mind map chart to organizes and presents information in a hierarchical structure with branches radiating from a central topic, such as, a diagram showing the relationship between a main topic and its subtopics."
      },
      "generate_network_graph": {
        "name": "generate_network_graph",
        "description": "Generate a network graph chart to show relationships (edges) between entities (nodes), such as, relationships between people in social networks."
      },
      "generate_organization_chart": {
        "name": "generate_organization_chart",
        "description": "Generate an organization chart to visualize the hierarchical structure of an organization, such as, a diagram showing the relationship between a CEO and their direct reports."
      },
      "generate_path_map": {
        "name": "generate_path_map",
        "description": "Generate a route map to display the user's planned route, such as travel guide routes."
      },
      "generate_pie_chart": {
        "name": "generate_pie_chart",
        "description": "Generate a pie chart to show the proportion of parts, such as, market share and budget allocation."
      },
      "generate_pin_map": {
        "name": "generate_pin_map",
        "description": "Generate a point map to display the location and distribution of point data on the map, such as the location distribution of attractions, hospitals, supermarkets, etc."
      },
      "generate_radar_chart": {
        "name": "generate_radar_chart",
        "description": "Generate a radar chart to display multidimensional data (four dimensions or more), such as, evaluate Huawei and Apple phones in terms of five dimensions: ease of use, functionality, camera, benchmark scores, and battery life."
      },
      "generate_sankey_chart": {
        "name": "generate_sankey_chart",
        "description": "Generate a sankey chart to visualize the flow of data between different stages or categories, such as, the user journey from landing on a page to completing a purchase."
      },
      "generate_scatter_chart": {
        "name": "generate_scatter_chart",
        "description": "Generate a scatter chart to show the relationship between two variables, helps discover their relationship or trends, such as, the strength of correlation, data distribution patterns."
      },
      "generate_treemap_chart": {
        "name": "generate_treemap_chart",
        "description": "Generate a treemap chart to display hierarchical data and can intuitively show comparisons between items at the same level, such as, show disk space usage with treemap."
      },
      "generate_venn_chart": {
        "name": "generate_venn_chart",
        "description": "Generate a Venn diagram to visualize the relationships between different sets, showing how they intersect and overlap, such as the commonalities and differences between various groups."
      },
      "generate_violin_chart": {
        "name": "generate_violin_chart",
        "description": "Generate a violin chart to show data for statistical summaries among different categories, such as, comparing the distribution of data points across categories."
      },
      "generate_word_cloud_chart": {
        "name": "generate_word_cloud_chart",
        "description": "Generate a word cloud chart to show word frequency or weight through text size variation, such as, analyzing common words in social media, reviews, or feedback."
      }
    }
  },
  "spark-optimizer": {
    "category": "data-science-tools",
    "path": "data-science-tools/spark-optimizer.json"
  },
  "vizro-mcp": {
    "category": "data-science-tools",
    "path": "data-science-tools/vizro-mcp.json"
  },
  "or-tools": {
    "category": "data-science-tools",
    "path": "data-science-tools/or-tools.json"
  },
  "jupyter_earth_mcp_server": {
    "category": "data-science-tools",
    "path": "data-science-tools/jupyter_earth_mcp_server.json"
  },
  "data-wrangler-(polars)": {
    "category": "data-science-tools",
    "path": "data-science-tools/data-wrangler--polars.json"
  },
  "scmcp": {
    "category": "data-science-tools",
    "path": "data-science-tools/scmcp.json"
  },
  "pbixray": {
    "category": "data-science-tools",
    "path": "data-science-tools/pbixray.json"
  },
  "data-explorer": {
    "category": "data-science-tools",
    "path": "data-science-tools/data-explorer.json"
  },
  "mlcbakery": {
    "category": "data-science-tools",
    "path": "data-science-tools/mlcbakery.json"
  },
  "docling": {
    "category": "data-science-tools",
    "path": "data-science-tools/docling.json"
  },
  "mindsdb": {
    "category": "data-science-tools",
    "path": "data-science-tools/mindsdb.json"
  },
  "dbt-cli": {
    "category": "data-science-tools",
    "path": "data-science-tools/dbt-cli.json"
  },
  "hex": {
    "category": "data-science-tools",
    "path": "data-science-tools/hex.json"
  },
  "wolfram-alpha": {
    "category": "data-science-tools",
    "path": "data-science-tools/wolfram-alpha.json"
  },
  "zenml": {
    "category": "data-science-tools",
    "path": "data-science-tools/zenml.json"
  },
  "superset": {
    "category": "data-science-tools",
    "path": "data-science-tools/superset.json"
  },
  "materials-project": {
    "category": "data-science-tools",
    "path": "data-science-tools/materials-project.json"
  },
  "expr-lang": {
    "category": "data-science-tools",
    "path": "data-science-tools/expr-lang.json"
  },
  "graphrag": {
    "category": "data-science-tools",
    "path": "data-science-tools/graphrag.json"
  },
  "mcp2serial": {
    "category": "embedded-system",
    "path": "embedded-system/mcp2serial.json"
  },
  "nina-advanced-api": {
    "category": "embedded-system",
    "path": "embedded-system/nina-advanced-api.json"
  },
  "universal-robots-control-interface": {
    "category": "embedded-system",
    "path": "embedded-system/universal-robots-control-interface.json"
  },
  "mcp-server-home-assistant": {
    "category": "embedded-system",
    "path": "embedded-system/mcp-server-home-assistant.json"
  },
  "epics-process-variable-bridge": {
    "category": "embedded-system",
    "path": "embedded-system/epics-process-variable-bridge.json"
  },
  "bracketbot-multi-robot-control": {
    "category": "embedded-system",
    "path": "embedded-system/bracketbot-multi-robot-control.json"
  },
  "mcp-server-ida": {
    "category": "embedded-system",
    "path": "embedded-system/mcp-server-ida.json"
  },
  "opc-ua": {
    "category": "embedded-system",
    "path": "embedded-system/opc-ua.json"
  },
  "unitree-go2": {
    "category": "embedded-system",
    "path": "embedded-system/unitree-go2.json"
  },
  "unreal-engine-editor": {
    "category": "embedded-system",
    "path": "embedded-system/unreal-engine-editor.json"
  },
  "mcp-3d-printer-server": {
    "category": "embedded-system",
    "path": "embedded-system/mcp-3d-printer-server.json",
    "validated": true,
    "tools": {
      "get_printer_status": {
        "name": "get_printer_status",
        "description": "Get the current status of the 3D printer"
      },
      "extend_stl_base": {
        "name": "extend_stl_base",
        "description": "Extend the base of an STL file by a specified amount"
      },
      "slice_stl": {
        "name": "slice_stl",
        "description": "Slice an STL file to generate G-code"
      },
      "confirm_temperatures": {
        "name": "confirm_temperatures",
        "description": "Confirm temperature settings in a G-code file"
      },
      "process_and_print_stl": {
        "name": "process_and_print_stl",
        "description": "Process an STL file (extend base), slice it, confirm temperatures, and start printing"
      },
      "get_stl_info": {
        "name": "get_stl_info",
        "description": "Get detailed information about an STL file"
      },
      "scale_stl": {
        "name": "scale_stl",
        "description": "Scale an STL model uniformly or along specific axes"
      },
      "rotate_stl": {
        "name": "rotate_stl",
        "description": "Rotate an STL model around specific axes"
      },
      "translate_stl": {
        "name": "translate_stl",
        "description": "Move an STL model along specific axes"
      },
      "modify_stl_section": {
        "name": "modify_stl_section",
        "description": "Apply a specific transformation to a selected section of an STL file"
      },
      "generate_stl_visualization": {
        "name": "generate_stl_visualization",
        "description": "Generate an SVG visualization of an STL file from multiple angles"
      },
      "print_3mf": {
        "name": "print_3mf",
        "description": "Print a 3MF file on a Bambu Lab printer, potentially overriding settings."
      },
      "merge_vertices": {
        "name": "merge_vertices",
        "description": "Merge vertices in an STL file that are closer than the specified tolerance."
      },
      "center_model": {
        "name": "center_model",
        "description": "Translate the model so its geometric center is at the origin (0,0,0)."
      },
      "lay_flat": {
        "name": "lay_flat",
        "description": "Attempt to rotate the model so its largest flat face lies on the XY plane (Z=0)."
      }
    }
  },
  "mcp2tcp": {
    "category": "embedded-system",
    "path": "embedded-system/mcp2tcp.json"
  },
  "kicad-pcb-designer": {
    "category": "embedded-system",
    "path": "embedded-system/kicad-pcb-designer.json"
  },
  "gospy": {
    "category": "embedded-system",
    "path": "embedded-system/gospy.json"
  },
  "thingsboard": {
    "category": "embedded-system",
    "path": "embedded-system/thingsboard.json"
  },
  "device-peripherals": {
    "category": "embedded-system",
    "path": "embedded-system/device-peripherals.json"
  },
  "ros-robot-control": {
    "category": "embedded-system",
    "path": "embedded-system/ros-robot-control.json"
  },
  "ghidra": {
    "category": "embedded-system",
    "path": "embedded-system/ghidra.json"
  },
  "vnc-remote-control-for-macos": {
    "category": "embedded-system",
    "path": "embedded-system/vnc-remote-control-for-macos.json"
  },
  "hue-lights": {
    "category": "embedded-system",
    "path": "embedded-system/hue-lights.json"
  },
  "ida-pro": {
    "category": "embedded-system",
    "path": "embedded-system/ida-pro.json"
  },
  "iot-home-automation": {
    "category": "embedded-system",
    "path": "embedded-system/iot-home-automation.json"
  },
  "gnu-radio": {
    "category": "embedded-system",
    "path": "embedded-system/gnu-radio.json"
  },
  "raspberry-pi-notes": {
    "category": "embedded-system",
    "path": "embedded-system/raspberry-pi-notes.json"
  },
  "litmus-edge": {
    "category": "embedded-system",
    "path": "embedded-system/litmus-edge.json"
  },
  "fledge-iot": {
    "category": "embedded-system",
    "path": "embedded-system/fledge-iot.json"
  },
  "frida-mcp": {
    "category": "embedded-system",
    "path": "embedded-system/frida-mcp.json"
  },
  "ros-2-robot-control": {
    "category": "embedded-system",
    "path": "embedded-system/ros-2-robot-control.json"
  },
  "droidmind": {
    "category": "embedded-system",
    "path": "embedded-system/droidmind.json"
  },
  "android-debug-bridge": {
    "category": "embedded-system",
    "path": "embedded-system/android-debug-bridge.json"
  },
  "coreflux-mqtt": {
    "category": "embedded-system",
    "path": "embedded-system/coreflux-mqtt.json"
  },
  "memmcp-(cheat-engine)": {
    "category": "embedded-system",
    "path": "embedded-system/memmcp--cheat-engine.json"
  },
  "goose-fm-radio": {
    "category": "embedded-system",
    "path": "embedded-system/goose-fm-radio.json"
  },
  "esp-idf": {
    "category": "embedded-system",
    "path": "embedded-system/esp-idf.json"
  },
  "pinata-mcp": {
    "category": "file-systems",
    "path": "file-systems/pinata-mcp.json",
    "validated": false,
    "tools": {}
  },
  "file-system-observer": {
    "category": "file-systems",
    "path": "file-systems/file-system-observer.json"
  },
  "google-drive-classifier": {
    "category": "file-systems",
    "path": "file-systems/google-drive-classifier.json"
  },
  "file-converter": {
    "category": "file-systems",
    "path": "file-systems/file-converter.json"
  },
  "pdf-manipulation": {
    "category": "file-systems",
    "path": "file-systems/pdf-manipulation.json"
  },
  "todo-manager": {
    "category": "file-systems",
    "path": "file-systems/todo-manager.json"
  },
  "file-system-utilities": {
    "category": "file-systems",
    "path": "file-systems/file-system-utilities.json"
  },
  "pdf-reader": {
    "category": "file-systems",
    "path": "file-systems/pdf-reader.json"
  },
  "excel": {
    "category": "file-systems",
    "path": "file-systems/excel.json"
  },
  "mcp-ipfs": {
    "category": "file-systems",
    "path": "file-systems/mcp-ipfs.json",
    "validated": true,
    "tools": {
      "w3_account_ls": {
        "name": "w3_account_ls",
        "description": "Lists all accounts the current agent is **authorized** for. Use this command after `w3_login` and email validation to confirm the agent is successfully linked to your storacha.network account(s). **Note:** Agent state may be ephemeral (e.g., in Docker). Check authorization status with this command after (re)connecting, and use `w3_login` if needed."
      },
      "w3_bridge_generate_tokens": {
        "name": "w3_bridge_generate_tokens",
        "description": "Generates authentication tokens for using the UCAN-HTTP bridge."
      },
      "w3_can_access_claim": {
        "name": "w3_can_access_claim",
        "description": "Claims delegated capabilities for the authorized account using a provided proof."
      },
      "w3_can_blob_add": {
        "name": "w3_can_blob_add",
        "description": "Stores a single file as a blob directly with the service. Requires ABSOLUTE paths for file arguments."
      },
      "w3_can_blob_ls": {
        "name": "w3_can_blob_ls",
        "description": "Lists blobs stored in the current space."
      },
      "w3_can_blob_rm": {
        "name": "w3_can_blob_rm",
        "description": "Removes a blob from the store by its base58btc encoded multihash."
      },
      "w3_can_filecoin_info": {
        "name": "w3_can_filecoin_info",
        "description": "Gets Filecoin deal information for a given Piece CID (advanced use)."
      },
      "w3_can_index_add": {
        "name": "w3_can_index_add",
        "description": "Registers an index CID with the service (advanced use). Please refer to storacha.network documentation for details on indices."
      },
      "w3_can_store_add": {
        "name": "w3_can_store_add",
        "description": "Stores a CAR file with the service (advanced use). This is often a prerequisite for `w3_can_upload_add`. Requires ABSOLUTE paths for file arguments."
      },
      "w3_can_store_ls": {
        "name": "w3_can_store_ls",
        "description": "Lists stored CAR files (shards) in the current space (advanced use)."
      },
      "w3_can_store_rm": {
        "name": "w3_can_store_rm",
        "description": "Removes a stored CAR shard by its CID (advanced use). Use with extreme caution, as this deletes the underlying data shard."
      },
      "w3_can_upload_add": {
        "name": "w3_can_upload_add",
        "description": "Manually registers an upload DAG by its root CID and shard CIDs (advanced use). This is typically used after storing CAR shards manually."
      },
      "w3_can_upload_ls": {
        "name": "w3_can_upload_ls",
        "description": "Lists uploads registered in the current space (advanced view, shows underlying structure)."
      },
      "w3_can_upload_rm": {
        "name": "w3_can_upload_rm",
        "description": "Removes an upload listing by its root CID (advanced use). Does not remove the underlying blobs/shards."
      },
      "w3_coupon_create": {
        "name": "w3_coupon_create",
        "description": "Attempts to create/claim a coupon using a claim code."
      },
      "w3_delegation_create": {
        "name": "w3_delegation_create",
        "description": "Tool for w3_delegation_create operation. Requires ABSOLUTE paths for file arguments."
      },
      "w3_delegation_ls": {
        "name": "w3_delegation_ls",
        "description": "Tool for w3_delegation_ls operation."
      },
      "w3_delegation_revoke": {
        "name": "w3_delegation_revoke",
        "description": "Tool for w3_delegation_revoke operation. Requires ABSOLUTE paths for file arguments."
      },
      "w3_key_create": {
        "name": "w3_key_create",
        "description": "Generates and prints a new ed25519 key pair. Does not automatically use it for the agent."
      },
      "w3_login": {
        "name": "w3_login",
        "description": "Initiates the w3 login process using the pre-configured email (W3_LOGIN_EMAIL env var). IMPORTANT: The command expects email confirmation, so before running the `w3_login` tool, emphasize ATTENTION to the user in large letters + emoji that they MUST check email to complete authentication. If the final output includes 'Agent was authorized by', the user has already clicked the link and is successfully authorized, CONTINUE using mcp-ipfs tools. 'Too Many Requests': wait a moment before requesting it again."
      },
      "w3_ls": {
        "name": "w3_ls",
        "description": "Tool for w3_ls operation."
      },
      "w3_open": {
        "name": "w3_open",
        "description": "Tool for w3_open operation."
      },
      "w3_plan_get": {
        "name": "w3_plan_get",
        "description": "Displays the plan associated with the current or specified account."
      },
      "w3_proof_add": {
        "name": "w3_proof_add",
        "description": "Tool for w3_proof_add operation. Requires ABSOLUTE paths for file arguments."
      },
      "w3_proof_ls": {
        "name": "w3_proof_ls",
        "description": "Tool for w3_proof_ls operation."
      },
      "w3_reset": {
        "name": "w3_reset",
        "description": "DANGEROUS: Resets the agent state, removing all proofs and delegations but retaining the agent DID. Requires explicit confirmation argument."
      },
      "w3_rm": {
        "name": "w3_rm",
        "description": "Tool for w3_rm operation."
      },
      "w3_space_add": {
        "name": "w3_space_add",
        "description": "Tool for w3_space_add operation."
      },
      "w3_space_create": {
        "name": "w3_space_create",
        "description": "Creates a new space with a user-friendly name. NOTE: `w3 space create` cannot be run via MCP due to interactive recovery key prompts. Please run this command manually in your terminal."
      },
      "w3_space_info": {
        "name": "w3_space_info",
        "description": "Tool for w3_space_info operation. NOTE: `no current space and no space given` or `{\"spaces\":[]}` first make sure you are logged in before using other tools."
      },
      "w3_space_ls": {
        "name": "w3_space_ls",
        "description": "Tool for w3_space_ls operation. NOTE: `no current space and no space given` or `{\"spaces\":[]}` first make sure you are logged in before using other tools."
      },
      "w3_space_provision": {
        "name": "w3_space_provision",
        "description": "Associates a space with a customer/billing account."
      },
      "w3_space_use": {
        "name": "w3_space_use",
        "description": "Tool for w3_space_use operation."
      },
      "w3_up": {
        "name": "w3_up",
        "description": "Generates and prints a new ed25519 key pair. Does not automatically use it for the agent. Requires ABSOLUTE paths for file arguments."
      },
      "w3_usage_report": {
        "name": "w3_usage_report",
        "description": "Displays a storage usage report for the current or specified space."
      }
    }
  },
  "notes": {
    "category": "file-systems",
    "path": "file-systems/notes.json"
  },
  "google-drive": {
    "category": "file-systems",
    "path": "file-systems/google-drive.json"
  },
  "supernotes-to-obsidian": {
    "category": "file-systems",
    "path": "file-systems/supernotes-to-obsidian.json"
  },
  "mcp_pdf_forms": {
    "category": "file-systems",
    "path": "file-systems/mcp_pdf_forms.json"
  },
  "file-search-service": {
    "category": "file-systems",
    "path": "file-systems/file-search-service.json"
  },
  "secure-filesystem": {
    "category": "file-systems",
    "path": "file-systems/secure-filesystem.json"
  },
  "filesystem": {
    "category": "file-systems",
    "path": "file-systems/filesystem.json"
  },
  "putio-mcp-server": {
    "category": "file-systems",
    "path": "file-systems/putio-mcp-server.json"
  },
  "apple-notes-mcp": {
    "category": "file-systems",
    "path": "file-systems/apple-notes-mcp.json"
  },
  "ffmpeg-mcp": {
    "category": "file-systems",
    "path": "file-systems/ffmpeg-mcp.json"
  },
  "excel-mcp-server": {
    "category": "file-systems",
    "path": "file-systems/excel-mcp-server.json"
  },
  "text-editor": {
    "category": "file-systems",
    "path": "file-systems/text-editor.json"
  },
  "document-operations-(word,-excel,-pdf)": {
    "category": "file-systems",
    "path": "file-systems/document-operations--word--excel--pdf.json"
  },
  "@zhiweixu/excel-mcp-server": {
    "category": "file-systems",
    "path": "file-systems/zhiweixu-excel-mcp-server.json",
    "validated": true,
    "tools": {
      "analyzeExcelStructure": {
        "name": "analyzeExcelStructure",
        "description": "Get Excel file structure including sheet list and column headers in JSON format"
      },
      "exportExcelStructure": {
        "name": "exportExcelStructure",
        "description": "Export Excel file structure (sheets and headers) to a new Excel template file"
      },
      "readSheetNames": {
        "name": "readSheetNames",
        "description": "Get all sheet names from the Excel file"
      },
      "readDataBySheetName": {
        "name": "readDataBySheetName",
        "description": "Get data from a specific sheet in the Excel file"
      },
      "readSheetData": {
        "name": "readSheetData",
        "description": "Get data from all sheets in the Excel file"
      },
      "writeDataBySheetName": {
        "name": "writeDataBySheetName",
        "description": "Write data to a specific sheet in the Excel file (overwrites if sheet exists)"
      },
      "writeSheetData": {
        "name": "writeSheetData",
        "description": "Create a new Excel file with provided data"
      },
      "clearFileCache": {
        "name": "clearFileCache",
        "description": "Clear cached data for the specified Excel file"
      }
    }
  },
  "filesystem-(quarkus)": {
    "category": "file-systems",
    "path": "file-systems/filesystem--quarkus.json"
  },
  "clipboard-image": {
    "category": "file-systems",
    "path": "file-systems/clipboard-image.json"
  },
  "chat-logger": {
    "category": "file-systems",
    "path": "file-systems/chat-logger.json"
  },
  "local-file-organizer": {
    "category": "file-systems",
    "path": "file-systems/local-file-organizer.json"
  },
  "json-canvas": {
    "category": "file-systems",
    "path": "file-systems/json-canvas.json"
  },
  "filesys": {
    "category": "file-systems",
    "path": "file-systems/filesys.json"
  },
  "file-finder": {
    "category": "file-systems",
    "path": "file-systems/file-finder.json"
  },
  "document-reader": {
    "category": "file-systems",
    "path": "file-systems/document-reader.json"
  },
  "filesystem-access": {
    "category": "file-systems",
    "path": "file-systems/filesystem-access.json"
  },
  "@aindreyway/mcp-neurolora": {
    "category": "file-systems",
    "path": "file-systems/aindreyway-mcp-neurolora.json",
    "validated": true,
    "tools": {
      "collect_code": {
        "name": "collect_code",
        "description": "Collect all code from a directory into a single markdown file"
      },
      "install_base_servers": {
        "name": "install_base_servers",
        "description": "Install base MCP servers to the configuration"
      },
      "analyze_code": {
        "name": "analyze_code",
        "description": "Analyze code using OpenAI API (requires your API key). The analysis may take a few minutes. So, wait please."
      },
      "create_github_issues": {
        "name": "create_github_issues",
        "description": "Create GitHub issues from analysis results. Requires GitHub token."
      }
    }
  },
  "file-system-tools": {
    "category": "file-systems",
    "path": "file-systems/file-system-tools.json"
  },
  "text-saver": {
    "category": "file-systems",
    "path": "file-systems/text-saver.json"
  },
  "spire.xls": {
    "category": "file-systems",
    "path": "file-systems/spire-xls.json"
  },
  "android-source-code-browser": {
    "category": "file-systems",
    "path": "file-systems/android-source-code-browser.json"
  },
  "mcp-tree-explorer": {
    "category": "file-systems",
    "path": "file-systems/mcp-tree-explorer.json"
  },
  "ledger": {
    "category": "file-systems",
    "path": "file-systems/ledger.json"
  },
  "alfresco-content-services": {
    "category": "file-systems",
    "path": "file-systems/alfresco-content-services.json"
  },
  "docxprocessor": {
    "category": "file-systems",
    "path": "file-systems/docxprocessor.json"
  },
  "word-document-formatter": {
    "category": "file-systems",
    "path": "file-systems/word-document-formatter.json"
  },
  "truenas-core": {
    "category": "file-systems",
    "path": "file-systems/truenas-core.json"
  },
  "sticky-notes": {
    "category": "file-systems",
    "path": "file-systems/sticky-notes.json"
  },
  "mcp-obsidian": {
    "category": "file-systems",
    "path": "file-systems/mcp-obsidian.json"
  },
  "mcp-text-editor": {
    "category": "file-systems",
    "path": "file-systems/mcp-text-editor.json"
  },
  "@isaacphi/mcp-gdrive": {
    "category": "file-systems",
    "path": "file-systems/isaacphi-mcp-gdrive.json",
    "validated": true,
    "tools": {
      "gdrive_search": {
        "name": "gdrive_search",
        "description": "Search for files in Google Drive"
      },
      "gdrive_read_file": {
        "name": "gdrive_read_file",
        "description": "Read contents of a file from Google Drive"
      },
      "gsheets_update_cell": {
        "name": "gsheets_update_cell",
        "description": "Update a cell value in a Google Spreadsheet"
      },
      "gsheets_read": {
        "name": "gsheets_read",
        "description": "Read data from a Google Spreadsheet with flexible options for ranges and formatting"
      }
    }
  },
  "claude-conversations-to-markdown": {
    "category": "file-systems",
    "path": "file-systems/claude-conversations-to-markdown.json"
  },
  "stock-analyzer-(tingo)": {
    "category": "finance-fintech",
    "path": "finance-fintech/stock-analyzer--tingo.json"
  },
  "xrp-ledger": {
    "category": "finance-fintech",
    "path": "finance-fintech/xrp-ledger.json"
  },
  "polymarket": {
    "category": "finance-fintech",
    "path": "finance-fintech/polymarket.json"
  },
  "tracxn": {
    "category": "finance-fintech",
    "path": "finance-fintech/tracxn.json"
  },
  "africa's-talking-airtime": {
    "category": "finance-fintech",
    "path": "finance-fintech/africa-s-talking-airtime.json"
  },
  "base-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/base-mcp.json",
    "validated": false,
    "tools": {}
  },
  "a-share-financial-data-(baostock)": {
    "category": "finance-fintech",
    "path": "finance-fintech/a-share-financial-data--baostock.json"
  },
  "stockscreen-(yahoo-finance)": {
    "category": "finance-fintech",
    "path": "finance-fintech/stockscreen--yahoo-finance.json"
  },
  "crypto-fear-&-greed-index": {
    "category": "finance-fintech",
    "path": "finance-fintech/crypto-fear---greed-index.json"
  },
  "imf-data": {
    "category": "finance-fintech",
    "path": "finance-fintech/imf-data.json"
  },
  "ntropy": {
    "category": "finance-fintech",
    "path": "finance-fintech/ntropy.json"
  },
  "@zbddev/payments-sdk-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/zbddev-payments-sdk-mcp.json",
    "validated": true,
    "tools": {
      "create_charge_gamertags": {
        "name": "create_charge_gamertags",
        "description": "Generate a payment request for a ZBD User."
      },
      "retrieve_by_gamertag_gamertags": {
        "name": "retrieve_by_gamertag_gamertags",
        "description": "Retrieve Gamertag from a ZBD user ID."
      },
      "retrieve_by_zbd_id_gamertags": {
        "name": "retrieve_by_zbd_id_gamertags",
        "description": "Retrieve ZBD user ID from a Gamertag."
      },
      "retrieve_payment_gamertags": {
        "name": "retrieve_payment_gamertags",
        "description": "Retrieve all data about a Payment sent to ZBD User."
      },
      "send_payment_gamertags": {
        "name": "send_payment_gamertags",
        "description": "Send instant Bitcoin payments to ZBD Users."
      },
      "create_lightning_charges": {
        "name": "create_lightning_charges",
        "description": "Start receiving instant Bitcoin payments through the ZBD API."
      },
      "retrieve_lightning_charges": {
        "name": "retrieve_lightning_charges",
        "description": "Retrieve all data about a single Charge."
      },
      "initiate_internal_transfer": {
        "name": "initiate_internal_transfer",
        "description": "Performs a transfer of funds between two Projects."
      },
      "create_charge_lightning_address": {
        "name": "create_charge_lightning_address",
        "description": "Generate a payment request for a Lightning Address."
      },
      "send_payment_lightning_address": {
        "name": "send_payment_lightning_address",
        "description": "Send instant Bitcoin payments to any Lightning Address."
      },
      "validate_lightning_address": {
        "name": "validate_lightning_address",
        "description": "Verify the validity of a Lightning Address."
      },
      "create_lightning_static_charges": {
        "name": "create_lightning_static_charges",
        "description": "Start accepting payments on Lightning with Static QR codes."
      },
      "retrieve_lightning_static_charges": {
        "name": "retrieve_lightning_static_charges",
        "description": "Retrieve all data about a single Static Charge."
      },
      "update_lightning_static_charges": {
        "name": "update_lightning_static_charges",
        "description": "Change the configuration of a Static Charge QR code."
      },
      "create_vouchers": {
        "name": "create_vouchers",
        "description": "Create Voucher"
      },
      "retrieve_vouchers": {
        "name": "retrieve_vouchers",
        "description": "Get Voucher"
      },
      "redeem_vouchers": {
        "name": "redeem_vouchers",
        "description": "Redeem Voucher"
      },
      "revoke_vouchers": {
        "name": "revoke_vouchers",
        "description": "Revoke Voucher"
      },
      "create_withdrawal_requests": {
        "name": "create_withdrawal_requests",
        "description": "Start creating Bitcoin voucher QR codes."
      },
      "retrieve_withdrawal_requests": {
        "name": "retrieve_withdrawal_requests",
        "description": "Retrieve all data about a single Withdrawal Request."
      },
      "retrieve_lightning_payments": {
        "name": "retrieve_lightning_payments",
        "description": "Retrieve all data about a single Payment."
      },
      "send_lightning_payments": {
        "name": "send_lightning_payments",
        "description": "Start sending instant Bitcoin payments through the ZBD API."
      },
      "retrieve_balance_wallet": {
        "name": "retrieve_balance_wallet",
        "description": "Retrieve all data about a ZBD Project's Wallet."
      },
      "check_ip_support_utils": {
        "name": "check_ip_support_utils",
        "description": "Verify if a user is coming from a supported region."
      },
      "decode_lightning_charge_utils": {
        "name": "decode_lightning_charge_utils",
        "description": "Understand the inner properties of a Charge QR code."
      },
      "list_prod_ips_utils": {
        "name": "list_prod_ips_utils",
        "description": "Get the official IP addresses of ZBD servers."
      },
      "retrieve_btc_usd_utils": {
        "name": "retrieve_btc_usd_utils",
        "description": "Get the latest price for Bitcoin in US Dollars."
      },
      "create_authorization_url_oauth2": {
        "name": "create_authorization_url_oauth2",
        "description": "Create an authorization URL for ZBD Login."
      },
      "refresh_token_oauth2": {
        "name": "refresh_token_oauth2",
        "description": "Generate a new accessToken for a ZBD Login user."
      },
      "retrieve_user_data_oauth2": {
        "name": "retrieve_user_data_oauth2",
        "description": "Fetch user-related information about a logged-in ZBD User."
      },
      "retrieve_wallet_data_oauth2": {
        "name": "retrieve_wallet_data_oauth2",
        "description": "Fetch wallet-related information about a logged-in ZBD User."
      },
      "send_keysend_payments": {
        "name": "send_keysend_payments",
        "description": "Start sending Keysend payments on the Lightning Network."
      },
      "send_email_payments": {
        "name": "send_email_payments",
        "description": "Send instant Bitcoin payments to any email."
      }
    }
  },
  "volume-wall-detector-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/volume-wall-detector-mcp.json",
    "validated": false,
    "tools": {}
  },
  "crypto-pro-apis-(defillama,-coingecko,-arkham)": {
    "category": "finance-fintech",
    "path": "finance-fintech/crypto-pro-apis--defillama--coingecko--arkham.json"
  },
  "zerodha": {
    "category": "finance-fintech",
    "path": "finance-fintech/zerodha.json"
  },
  "crypto-sentiment-(santiment)": {
    "category": "finance-fintech",
    "path": "finance-fintech/crypto-sentiment--santiment.json"
  },
  "armor-wallet": {
    "category": "finance-fintech",
    "path": "finance-fintech/armor-wallet.json"
  },
  "hubble-mcp-tool": {
    "category": "finance-fintech",
    "path": "finance-fintech/hubble-mcp-tool.json",
    "validated": true,
    "tools": {
      "search-hubble": {
        "name": "search-hubble",
        "description": "Get pumpfun data and solana DEX data from Hubble"
      },
      "generate-chart-hubble": {
        "name": "generate-chart-hubble",
        "description": "Generate a chart using QuickChart API. Supports basic chart types (bar, line, pie). Customizable with colors, labels, and advanced chart options."
      }
    }
  },
  "moneybird-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/moneybird-mcp-server.json",
    "validated": true,
    "tools": {
      "list_contacts": {
        "name": "list_contacts",
        "description": "List all contacts from your Moneybird account with optional filtering"
      },
      "get_contact": {
        "name": "get_contact",
        "description": "Get a specific contact by ID from your Moneybird account"
      },
      "list_sales_invoices": {
        "name": "list_sales_invoices",
        "description": "List all sales invoices from your Moneybird account"
      },
      "get_sales_invoice": {
        "name": "get_sales_invoice",
        "description": "Get a specific sales invoice by ID from your Moneybird account"
      },
      "list_financial_accounts": {
        "name": "list_financial_accounts",
        "description": "List all financial accounts from your Moneybird account"
      },
      "list_products": {
        "name": "list_products",
        "description": "List all products from your Moneybird account"
      },
      "list_projects": {
        "name": "list_projects",
        "description": "List all projects from your Moneybird account"
      },
      "list_time_entries": {
        "name": "list_time_entries",
        "description": "List all time entries from your Moneybird account"
      },
      "moneybird_request": {
        "name": "moneybird_request",
        "description": "Make a custom request to the Moneybird API"
      },
      "moneybird_assistant": {
        "name": "moneybird_assistant",
        "description": "Get assistance with using the Moneybird MCP server"
      }
    }
  },
  "artemis-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/artemis-mcp.json"
  },
  "alpha-vantage": {
    "category": "finance-fintech",
    "path": "finance-fintech/alpha-vantage.json"
  },
  "optionsflow-(yahoo-finance)": {
    "category": "finance-fintech",
    "path": "finance-fintech/optionsflow--yahoo-finance.json"
  },
  "akshare-(chinese-financial-data)": {
    "category": "finance-fintech",
    "path": "finance-fintech/akshare--chinese-financial-data.json"
  },
  "indian-stocks": {
    "category": "finance-fintech",
    "path": "finance-fintech/indian-stocks.json"
  },
  "wealthy-trading-platform": {
    "category": "finance-fintech",
    "path": "finance-fintech/wealthy-trading-platform.json"
  },
  "quickbooks-time": {
    "category": "finance-fintech",
    "path": "finance-fintech/quickbooks-time.json"
  },
  "akshare_mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/akshare_mcp.json"
  },
  "mbbank-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/mbbank-mcp.json"
  },
  "akshare-one-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/akshare-one-mcp.json"
  },
  "binance-smart-chain": {
    "category": "finance-fintech",
    "path": "finance-fintech/binance-smart-chain.json"
  },
  "fewsats-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/fewsats-mcp.json"
  },
  "@bujaayjaay/mcp-coincap-jj": {
    "category": "finance-fintech",
    "path": "finance-fintech/bujaayjaay-mcp-coincap-jj.json",
    "validated": true,
    "tools": {
      "get-crypto-price": {
        "name": "get-crypto-price",
        "description": "Get current price and 24h stats for a cryptocurrency"
      },
      "get-market-analysis": {
        "name": "get-market-analysis",
        "description": "Get detailed market analysis including top exchanges and volume distribution"
      },
      "get-historical-analysis": {
        "name": "get-historical-analysis",
        "description": "Get historical price analysis with customizable timeframe"
      }
    }
  },
  "binance": {
    "category": "finance-fintech",
    "path": "finance-fintech/binance.json"
  },
  "solana": {
    "category": "finance-fintech",
    "path": "finance-fintech/solana.json"
  },
  "dhan-trading": {
    "category": "finance-fintech",
    "path": "finance-fintech/dhan-trading.json"
  },
  "@iqai/mcp-bamm": {
    "category": "finance-fintech",
    "path": "finance-fintech/iqai-mcp-bamm.json",
    "validated": true,
    "tools": {
      "ADD_COLLATERAL": {
        "name": "ADD_COLLATERAL",
        "description": "Add collateral to your BAMM position"
      },
      "BORROW": {
        "name": "BORROW",
        "description": "Borrow tokens from a BAMM position"
      },
      "GET_POSITIONS": {
        "name": "GET_POSITIONS",
        "description": "Get all your active BAMM positions"
      },
      "LEND": {
        "name": "LEND",
        "description": "Lend Fraxswap LP tokens to a BAMM contract"
      },
      "POOL_STATS": {
        "name": "POOL_STATS",
        "description": "Get statistics for all BAMM pools"
      },
      "REMOVE_COLLATERAL": {
        "name": "REMOVE_COLLATERAL",
        "description": "Remove collateral from your BAMM position"
      },
      "REPAY": {
        "name": "REPAY",
        "description": "Repay borrowed tokens to a BAMM position"
      }
    }
  },
  "mcp-crypto-price": {
    "category": "finance-fintech",
    "path": "finance-fintech/mcp-crypto-price.json",
    "validated": true,
    "tools": {
      "get-crypto-price": {
        "name": "get-crypto-price",
        "description": "Get current price and 24h stats for a cryptocurrency"
      },
      "get-market-analysis": {
        "name": "get-market-analysis",
        "description": "Get detailed market analysis including top exchanges and volume distribution"
      },
      "get-historical-analysis": {
        "name": "get-historical-analysis",
        "description": "Get historical price analysis with customizable timeframe"
      }
    }
  },
  "ramp": {
    "category": "finance-fintech",
    "path": "finance-fintech/ramp.json"
  },
  "china-stock-market-data": {
    "category": "finance-fintech",
    "path": "finance-fintech/china-stock-market-data.json"
  },
  "beeminder": {
    "category": "finance-fintech",
    "path": "finance-fintech/beeminder.json"
  },
  "wave-accounting": {
    "category": "finance-fintech",
    "path": "finance-fintech/wave-accounting.json"
  },
  "@xeroapi/xero-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/xeroapi-xero-mcp-server.json",
    "validated": true,
    "tools": {
      "delete-timesheet": {
        "name": "delete-timesheet",
        "description": "Delete an existing payroll timesheet in Xero by its ID."
      },
      "get-timesheet": {
        "name": "get-timesheet",
        "description": "Retrieve a single payroll timesheet from Xero by its ID.\nThis provides details such as the timesheet ID, employee ID, start and end dates, total hours, and the last updated date."
      },
      "create-contact": {
        "name": "create-contact",
        "description": "Create a contact in Xero.  When a contact is created, a deep link to the contact in Xero is returned.   This deep link can be used to view the contact in Xero directly.   This link should be displayed to the user."
      },
      "create-credit-note": {
        "name": "create-credit-note",
        "description": "Create a credit note in Xero. When a credit note is created, a deep link to the credit note in Xero is returned.  This deep link can be used to view the credit note in Xero directly.  This link should be displayed to the user."
      },
      "create-manual-journal": {
        "name": "create-manual-journal",
        "description": "Create a manual journal in Xero.  Retrieve a list of account codes in Xero to use for the journal lines.  Journal lines must contain at least two individual journal lines with account codes,   use basic accounting account types pairing when not specified,   and make sure journal line pairs have credit and debit balanced."
      },
      "create-invoice": {
        "name": "create-invoice",
        "description": "Create an invoice in Xero. When an invoice is created, a deep link to the invoice in Xero is returned.  This deep link can be used to view the invoice in Xero directly.  This link should be displayed to the user."
      },
      "create-quote": {
        "name": "create-quote",
        "description": "Create a quote in Xero. When a quote is created, a deep link to the quote in Xero is returned.  This deep link can be used to view the quote in Xero directly.  This link should be displayed to the user."
      },
      "create-payment": {
        "name": "create-payment",
        "description": "Create a payment against an invoice in Xero. This tool records a payment transaction against an invoice.  You'll need to provide the invoice ID, account ID to make the payment from, and the amount.  The amount must be positive and should not exceed the remaining amount due on the invoice.  A payment can only be created for an invoice that is status AUTHORIZED  A payment can only be created for an invoice that is not fully paid  When a payment is created, a deep link to the payment in Xero is returned.  This deep link can be used to view the payment in Xero directly.  This link should be displayed to the user."
      },
      "create-item": {
        "name": "create-item",
        "description": "Create an item in Xero."
      },
      "create-bank-transaction": {
        "name": "create-bank-transaction",
        "description": "Create a bank transaction in Xero.\n  When a bank transaction is created, a deep link to the bank transaction in Xero is returned.\n  This deep link can be used to view the bank transaction in Xero directly.\n  This link should be displayed to the user."
      },
      "create-timesheet": {
        "name": "create-timesheet",
        "description": "Create a new payroll timesheet in Xero.\nThis allows you to specify details such as the employee ID, payroll calendar ID, start and end dates, and timesheet lines."
      },
      "create-tracking-category": {
        "name": "create-tracking-category",
        "description": "Create a tracking category in Xero."
      },
      "create-tracking-options": {
        "name": "create-tracking-options",
        "description": "Create tracking options for a tracking category in Xero."
      },
      "list-accounts": {
        "name": "list-accounts",
        "description": "Lists all accounts in Xero. Use this tool to get the account codes and names to be used when creating invoices in Xero"
      },
      "list-contacts": {
        "name": "list-contacts",
        "description": "List all contacts in Xero. This includes Suppliers and Customers."
      },
      "list-credit-notes": {
        "name": "list-credit-notes",
        "description": "List credit notes in Xero. \n  Ask the user if they want to see credit notes for a specific contact,\n  or to see all credit notes before running. \n  Ask the user if they want the next page of credit notes after running this tool \n  if 10 credit notes are returned. \n  If they want the next page, call this tool again with the next page number \n  and the contact if one was provided in the previous call."
      },
      "list-invoices": {
        "name": "list-invoices",
        "description": "List invoices in Xero. This includes Draft, Submitted, and Paid invoices.   Ask the user if they want to see invoices for a specific contact,   invoice number, or to see all invoices before running.   Ask the user if they want the next page of invoices after running this tool   if 10 invoices are returned.   If they want the next page, call this tool again with the next page number   and the contact or invoice number if one was provided in the previous call."
      },
      "list-items": {
        "name": "list-items",
        "description": "Lists all items in Xero. Use this tool to get the item codes and descriptions to be used when creating invoices in Xero"
      },
      "list-manual-journals": {
        "name": "list-manual-journals",
        "description": "List all manual journals from Xero.\nAsk the user if they want to see a specific manual journal or all manual journals before running.\nCan optionally pass in manual journal ID to retrieve a specific journal, or a date to filter journals modified after that date.\nThe response presents a complete overview of all manual journals currently registered in your Xero account, with their details. \nAsk the user if they want the next page of manual journals after running this tool if 10 manual journals are returned.\nIf they want the next page, call this tool again with the next page number, modified date, and the manual journal ID if one was provided in the previous call."
      },
      "list-quotes": {
        "name": "list-quotes",
        "description": "List all quotes in Xero. \n  Ask the user if they want to see quotes for a specific contact before running. \n  Ask the user if they want the next page of quotes after running this tool if 10 quotes are returned. \n  If they do, call this tool again with the page number and the contact provided in the previous call."
      },
      "list-tax-rates": {
        "name": "list-tax-rates",
        "description": "Lists all tax rates in Xero. Use this tool to get the tax rates to be used when creating invoices in Xero"
      },
      "list-trial-balance": {
        "name": "list-trial-balance",
        "description": "Lists trial balance in Xero. This provides a snapshot of the general ledger, showing debit and credit balances for each account."
      },
      "list-payments": {
        "name": "list-payments",
        "description": "List payments in Xero. \n  This tool shows all payments made against invoices, including payment date, amount, and payment method.\n  You can filter payments by invoice number, invoice ID, payment ID, or invoice reference.\n  Ask the user if they want to see payments for a specific invoice, contact, payment or reference before running.\n  If many payments are returned, ask the user if they want to see the next page."
      },
      "list-profit-and-loss": {
        "name": "list-profit-and-loss",
        "description": "Lists profit and loss report in Xero. This provides a summary of revenue, expenses, and profit or loss over a specified period of time."
      },
      "list-bank-transactions": {
        "name": "list-bank-transactions",
        "description": "List all bank transactions in Xero.\n  Ask the user if they want to see bank transactions for a specific bank account,\n  or to see all bank transactions before running.\n  Ask the user if they want the next page of quotes after running this tool if\n  10 bank transactions are returned.\n  If they do, call this tool again with the next page number and the bank account\n  if one was provided in the provided in the previous call."
      },
      "list-payroll-employees": {
        "name": "list-payroll-employees",
        "description": "List all payroll employees in Xero.\nThis retrieves comprehensive employee details including names, User IDs, dates of birth, email addresses, gender, phone numbers, start dates, engagement types (Permanent, FixedTerm, or Casual), titles, and when records were last updated.\nThe response presents a complete overview of all staff currently registered in your Xero payroll, with their personal and employment information. If there are many employees, ask the user if they would like to see more detailed information about specific employees before proceeding."
      },
      "list-report-balance-sheet": {
        "name": "list-report-balance-sheet",
        "description": "List the Balance Sheet report from Xero."
      },
      "list-organisation-details": {
        "name": "list-organisation-details",
        "description": "Lists the organisation details from Xero. Use this tool to get information about the current Xero organisation."
      },
      "list-payroll-employee-leave": {
        "name": "list-payroll-employee-leave",
        "description": "List all leave records for a specific employee in Xero. This shows all leave transactions including approved, pending, and processed time off. Provide an employee ID to see their leave history."
      },
      "list-payroll-leave-periods": {
        "name": "list-payroll-leave-periods",
        "description": "List all leave periods for a specific employee in Xero. This shows detailed time off periods including start and end dates, period status, payment dates, and leave types. Provide an employee ID to see their leave periods."
      },
      "list-payroll-employee-leave-types": {
        "name": "list-payroll-employee-leave-types",
        "description": "List all leave types available for a specific employee in Xero. This shows detailed information about the types of leave an employee can take, including schedule of accrual, leave type name, and entitlement."
      },
      "list-payroll-employee-leave-balances": {
        "name": "list-payroll-employee-leave-balances",
        "description": "List all leave balances for a specific employee in Xero. This shows current leave balances for all leave types available to the employee, including annual, sick, and other leave types."
      },
      "list-payroll-leave-types": {
        "name": "list-payroll-leave-types",
        "description": "Lists all available leave types in Xero Payroll. This provides information about all the leave categories configured in your Xero system, including statutory and organization-specific leave types."
      },
      "list-aged-receivables-by-contact": {
        "name": "list-aged-receivables-by-contact",
        "description": "Lists the aged receivables in Xero.\n  This shows aged receivables for a certain contact up to a report date."
      },
      "list-aged-payables-by-contact": {
        "name": "list-aged-payables-by-contact",
        "description": "Lists the aged payables in Xero.\n  This shows aged payables for a certain contact up to a report date."
      },
      "list-timesheets": {
        "name": "list-timesheets",
        "description": "List all payroll timesheets in Xero.\nThis retrieves comprehensive timesheet details including timesheet IDs, employee IDs, start and end dates, total hours, and the last updated date."
      },
      "list-contact-groups": {
        "name": "list-contact-groups",
        "description": "List all contact groups in Xero.\n  You can optionally specify a contact group ID to retrieve details for that specific group, including its contacts."
      },
      "list-tracking-categories": {
        "name": "list-tracking-categories",
        "description": "List all tracking categories in Xero, along with their associated tracking options."
      },
      "update-contact": {
        "name": "update-contact",
        "description": "Update a contact in Xero. When a contact is updated, a deep link to the contact in Xero is returned.  This deep link can be used to view the contact in Xero directly.  This link should be displayed to the user."
      },
      "update-credit-note": {
        "name": "update-credit-note",
        "description": "Update a credit note in Xero. Only works on draft credit notes.  All line items must be provided. Any line items not provided will be removed. Including existing line items.  Do not modify line items that have not been specified by the user. When a credit note is updated, a deep link to the credit note in Xero is returned. This deep link can be used to view the credit note in Xero directly. This link should be displayed to the user."
      },
      "update-invoice": {
        "name": "update-invoice",
        "description": "Update an invoice in Xero. Only works on draft invoices.  All line items must be provided. Any line items not provided will be removed. Including existing line items.  Do not modify line items that have not been specified by the user. When an invoice is updated, a deep link to the invoice in Xero is returned.  This deep link can be used to view the contact in Xero directly.  This link should be displayed to the user."
      },
      "update-manual-journal": {
        "name": "update-manual-journal",
        "description": "Update a manual journal in Xero. Only works on draft manual journals.  Do not modify line items or parameters that have not been specified by the user."
      },
      "update-quote": {
        "name": "update-quote",
        "description": "Update a quote in Xero. Only works on draft quotes.  All line items must be provided. Any line items not provided will be removed. Including existing line items.  Do not modify line items that have not been specified by the user.  When a quote is updated, a deep link to the quote in Xero is returned.  This deep link can be used to view the quote in Xero directly.  This link should be displayed to the user."
      },
      "update-item": {
        "name": "update-item",
        "description": "Update an item in Xero."
      },
      "update-bank-transaction": {
        "name": "update-bank-transaction",
        "description": "Update a bank transaction in Xero.\n  When a bank transaction is updated, a deep link to the bank transaction in Xero is returned.\n  This deep link can be used to view the bank transaction in Xero directly.\n  This link should be displayed to the user."
      },
      "approve-timesheet": {
        "name": "approve-timesheet",
        "description": "Approve a payroll timesheet in Xero by its ID."
      },
      "add-timesheet-line": {
        "name": "add-timesheet-line",
        "description": "Add a new timesheet line to an existing payroll timesheet in Xero."
      },
      "update-timesheet-line": {
        "name": "update-timesheet-line",
        "description": "Update an existing timesheet line in a payroll timesheet in Xero."
      },
      "revert-timesheet": {
        "name": "revert-timesheet",
        "description": "Revert a payroll timesheet to draft in Xero by its ID."
      },
      "update-tracking-category": {
        "name": "update-tracking-category",
        "description": "Updates an existing tracking category in Xero."
      },
      "update-tracking-options": {
        "name": "update-tracking-options",
        "description": "Updates tracking options for a tracking category in Xero."
      }
    }
  },
  "zerodha-kite": {
    "category": "finance-fintech",
    "path": "finance-fintech/zerodha-kite.json"
  },
  "ledger-cli": {
    "category": "finance-fintech",
    "path": "finance-fintech/ledger-cli.json"
  },
  "schwab": {
    "category": "finance-fintech",
    "path": "finance-fintech/schwab.json"
  },
  "tesouro-direto-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/tesouro-direto-mcp.json",
    "validated": true,
    "tools": {
      "market_data": {
        "name": "market_data",
        "description": "Retrieves general market data from Tesouro Direto, including opening/closing times and status"
      },
      "bond_data": {
        "name": "bond_data",
        "description": "Retrieves detailed data for a specific bond from Tesouro Direto"
      },
      "search_bonds": {
        "name": "search_bonds",
        "description": "Search for bonds by type (ANY,SELIC, IPCA, PREFIXADO) or maturity date range"
      }
    }
  },
  "alpaca-trading": {
    "category": "finance-fintech",
    "path": "finance-fintech/alpaca-trading.json"
  },
  "findata-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/findata-mcp-server.json",
    "validated": true,
    "tools": {
      "getStockQuote": {
        "name": "getStockQuote",
        "description": "Get the current quote for a stock."
      },
      "getHistoricalData": {
        "name": "getHistoricalData",
        "description": "Get historical data for a stock."
      }
    }
  },
  "cb-insights": {
    "category": "finance-fintech",
    "path": "finance-fintech/cb-insights.json"
  },
  "awslabs.cost-analysis-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/awslabs-cost-analysis-mcp-server.json"
  },
  "ton-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/ton-mcp-server.json"
  },
  "stripe": {
    "category": "finance-fintech",
    "path": "finance-fintech/stripe.json"
  },
  "li.fi": {
    "category": "finance-fintech",
    "path": "finance-fintech/li-fi.json"
  },
  "cryptopanic": {
    "category": "finance-fintech",
    "path": "finance-fintech/cryptopanic.json"
  },
  "heurist-mesh-(web3-tools)": {
    "category": "finance-fintech",
    "path": "finance-fintech/heurist-mesh--web3-tools.json"
  },
  "alphavantage-trader": {
    "category": "finance-fintech",
    "path": "finance-fintech/alphavantage-trader.json"
  },
  "tradingview-chart": {
    "category": "finance-fintech",
    "path": "finance-fintech/tradingview-chart.json"
  },
  "m-pesa-(safaricom-daraja-api)": {
    "category": "finance-fintech",
    "path": "finance-fintech/m-pesa--safaricom-daraja-api.json"
  },
  "yfmcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/yfmcp.json"
  },
  "mercadolibre-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/mercadolibre-mcp.json",
    "validated": true,
    "tools": {
      "seller_reputation": {
        "name": "seller_reputation",
        "description": "Obtiene la reputación de un vendedor"
      },
      "product_reviews": {
        "name": "product_reviews",
        "description": "Obtiene las reseñas de un producto"
      },
      "product_description": {
        "name": "product_description",
        "description": "Obtiene la descripción de un producto"
      }
    }
  },
  "mcp-server-twelve-data": {
    "category": "finance-fintech",
    "path": "finance-fintech/mcp-server-twelve-data.json"
  },
  "stock-market-analysis-tools": {
    "category": "finance-fintech",
    "path": "finance-fintech/stock-market-analysis-tools.json"
  },
  "gp": {
    "category": "finance-fintech",
    "path": "finance-fintech/gp.json"
  },
  "coingecko-crypto-trader": {
    "category": "finance-fintech",
    "path": "finance-fintech/coingecko-crypto-trader.json"
  },
  "bicscan": {
    "category": "finance-fintech",
    "path": "finance-fintech/bicscan.json"
  },
  "kospi-kosdaq-stock-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/kospi-kosdaq-stock-server.json"
  },
  "setu_mcp_kyc": {
    "category": "finance-fintech",
    "path": "finance-fintech/setu_mcp_kyc.json"
  },
  "etf-flow-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/etf-flow-mcp.json"
  },
  "deriv": {
    "category": "finance-fintech",
    "path": "finance-fintech/deriv.json"
  },
  "@coinstats/coinstats-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/coinstats-coinstats-mcp.json",
    "validated": true,
    "tools": {
      "get-coins": {
        "name": "get-coins",
        "description": "Get comprehensive data about all cryptocurrencies: Price, market cap, and volume. Price changes (1h, 24h, 7d). Supply information. Trading metrics. Social links and metadata."
      },
      "get-coin-by-id": {
        "name": "get-coin-by-id",
        "description": "Get detailed information about a specific cryptocurrency based on its unique identifier."
      },
      "get-coin-chart-by-id": {
        "name": "get-coin-chart-by-id",
        "description": "Get chart data for a specific cryptocurrency based on its unique identifier, specifying different time ranges."
      },
      "get-coin-avg-price": {
        "name": "get-coin-avg-price",
        "description": "Get the historical average price for a specific cryptocurrency based on its unique identifier and a specific date."
      },
      "get-coin-exchange-price": {
        "name": "get-coin-exchange-price",
        "description": "Get the historical price data for a specific cryptocurrency on a particular exchange."
      },
      "get-ticker-exchanges": {
        "name": "get-ticker-exchanges",
        "description": "Get a list of supported exchanges."
      },
      "get-ticker-markets": {
        "name": "get-ticker-markets",
        "description": "Get a list of tickers for a specific cryptocurrency across different exchanges."
      },
      "get-blockchains": {
        "name": "get-blockchains",
        "description": "Get a list of supported blockchains by CoinStats."
      },
      "get-wallet-balance": {
        "name": "get-wallet-balance",
        "description": "Get the balance data for a provided wallet address on a specific blockchain network."
      },
      "get-wallet-balances": {
        "name": "get-wallet-balances",
        "description": "Get the balance data for a provided wallet address on all CoinStats supported networks."
      },
      "get-wallet-sync-status": {
        "name": "get-wallet-sync-status",
        "description": "Get the syncing status of the wallet with the blockchain network."
      },
      "get-wallet-transactions": {
        "name": "get-wallet-transactions",
        "description": "Get transaction data for a specific wallet. Ensure transactions are synced by calling PATCH /transactions first."
      },
      "transactions-sync": {
        "name": "transactions-sync",
        "description": "Initiate the syncing process to update transaction data for a specific wallet."
      },
      "get-exchanges": {
        "name": "get-exchanges",
        "description": "Get a list of supported exchange portfolio connections by CoinStats."
      },
      "get-exchange-balance": {
        "name": "get-exchange-balance",
        "description": "Get the balance data for a provided Exchange."
      },
      "get-exchange-sync-status": {
        "name": "get-exchange-sync-status",
        "description": "Get the syncing status of the exchange portfolio."
      },
      "get-exchange-transactions": {
        "name": "get-exchange-transactions",
        "description": "Get transaction data for a specific exchange."
      },
      "get-fiat-currencies": {
        "name": "get-fiat-currencies",
        "description": "Get a list of fiat currencies supported by CoinStats."
      },
      "get-news-sources": {
        "name": "get-news-sources",
        "description": "Get news sources."
      },
      "get-news": {
        "name": "get-news",
        "description": "Get news articles with pagination."
      },
      "get-news-by-type": {
        "name": "get-news-by-type",
        "description": "Get news articles based on a type."
      },
      "get-news-by-id": {
        "name": "get-news-by-id",
        "description": "Get news by id."
      },
      "get-market-cap": {
        "name": "get-market-cap",
        "description": "Get global market data."
      },
      "get-portfolio-coins": {
        "name": "get-portfolio-coins",
        "description": "Get a list of portfolio coins with P/L and other data displayed on CoinStats web."
      },
      "get-portfolio-chart": {
        "name": "get-portfolio-chart",
        "description": "Get portfolio performance chart data."
      },
      "get-portfolio-transactions": {
        "name": "get-portfolio-transactions",
        "description": "Get a list of portfolio transactions."
      },
      "add-portfolio-transaction": {
        "name": "add-portfolio-transaction",
        "description": "Add a transaction to a manual portfolio."
      },
      "get-currencies": {
        "name": "get-currencies",
        "description": "Get a list of fiat currencies supported by CoinStats."
      },
      "save-share-token": {
        "name": "save-share-token",
        "description": "Saves the provided portfolio share token to a local cache for future use across sessions."
      },
      "get-share-token": {
        "name": "get-share-token",
        "description": "Retrieves the saved portfolio share token from local cache."
      }
    }
  },
  "square": {
    "category": "finance-fintech",
    "path": "finance-fintech/square.json"
  },
  "solana-vault": {
    "category": "finance-fintech",
    "path": "finance-fintech/solana-vault.json"
  },
  "polygon.io": {
    "category": "finance-fintech",
    "path": "finance-fintech/polygon-io.json"
  },
  "octagon-vc-agents": {
    "category": "finance-fintech",
    "path": "finance-fintech/octagon-vc-agents.json"
  },
  "manifold-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/manifold-mcp-server.json",
    "validated": true,
    "tools": {
      "search_markets": {
        "name": "search_markets",
        "description": "Search for prediction markets with optional filters"
      },
      "get_market": {
        "name": "get_market",
        "description": "Get detailed information about a specific market"
      },
      "get_user": {
        "name": "get_user",
        "description": "Get user information by username"
      },
      "place_bet": {
        "name": "place_bet",
        "description": "Place a bet on a market"
      },
      "cancel_bet": {
        "name": "cancel_bet",
        "description": "Cancel a limit order bet"
      },
      "sell_shares": {
        "name": "sell_shares",
        "description": "Sell shares in a market"
      },
      "add_liquidity": {
        "name": "add_liquidity",
        "description": "Add mana to market liquidity pool"
      },
      "get_positions": {
        "name": "get_positions",
        "description": "Get user positions across markets"
      },
      "send_mana": {
        "name": "send_mana",
        "description": "Send mana to other users"
      }
    }
  },
  "futu-api": {
    "category": "finance-fintech",
    "path": "finance-fintech/futu-api.json"
  },
  "crypto-exchange": {
    "category": "finance-fintech",
    "path": "finance-fintech/crypto-exchange.json"
  },
  "kroger": {
    "category": "finance-fintech",
    "path": "finance-fintech/kroger.json"
  },
  "freqtrade": {
    "category": "finance-fintech",
    "path": "finance-fintech/freqtrade.json"
  },
  "xero-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/xero-mcp.json",
    "validated": true,
    "tools": {
      "authenticate": {
        "name": "authenticate",
        "description": "Authenticate with Xero using OAuth2"
      },
      "create_bank_transactions": {
        "name": "create_bank_transactions",
        "description": "Creates one or more spent or received money transaction. Only use this tool when user has directly and explicitly ask you to create transactions."
      },
      "create_contacts": {
        "name": "create_contacts",
        "description": "Creates one or multiple contacts in a Xero organisation. Only use this tool when user has directly and explicitly ask you to create contact."
      },
      "get_balance_sheet": {
        "name": "get_balance_sheet",
        "description": "Returns a balance sheet for the end of the month of the specified date. It also returns the value at the end of the same month for the previous year."
      },
      "list_accounts": {
        "name": "list_accounts",
        "description": "Retrieves the full chart of accounts"
      },
      "list_bank_transactions": {
        "name": "list_bank_transactions",
        "description": "Retrieves any spent or received money transactions"
      },
      "list_contacts": {
        "name": "list_contacts",
        "description": "Retrieves all contacts in a Xero organisation"
      },
      "list_invoices": {
        "name": "list_invoices",
        "description": "Retrieves sales invoices or purchase bills"
      },
      "list_journals": {
        "name": "list_journals",
        "description": "Retrieves journals"
      },
      "list_organisations": {
        "name": "list_organisations",
        "description": "Retrieves Xero organisation details"
      },
      "list_payments": {
        "name": "list_payments",
        "description": "Retrieves payments for invoices and credit notes"
      },
      "list_quotes": {
        "name": "list_quotes",
        "description": "Retrieves sales quotes"
      }
    }
  },
  "extend_ai_toolkit": {
    "category": "finance-fintech",
    "path": "finance-fintech/extend_ai_toolkit.json"
  },
  "@getalby/nwc-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/getalby-nwc-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "luno": {
    "category": "finance-fintech",
    "path": "finance-fintech/luno.json"
  },
  "dodopayments-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/dodopayments-mcp.json",
    "validated": true,
    "tools": {
      "create_payments": {
        "name": "create_payments",
        "description": ""
      },
      "retrieve_payments": {
        "name": "retrieve_payments",
        "description": ""
      },
      "list_payments": {
        "name": "list_payments",
        "description": ""
      },
      "retrieve_line_items_payments": {
        "name": "retrieve_line_items_payments",
        "description": ""
      },
      "create_subscriptions": {
        "name": "create_subscriptions",
        "description": ""
      },
      "retrieve_subscriptions": {
        "name": "retrieve_subscriptions",
        "description": ""
      },
      "update_subscriptions": {
        "name": "update_subscriptions",
        "description": ""
      },
      "list_subscriptions": {
        "name": "list_subscriptions",
        "description": ""
      },
      "change_plan_subscriptions": {
        "name": "change_plan_subscriptions",
        "description": ""
      },
      "charge_subscriptions": {
        "name": "charge_subscriptions",
        "description": ""
      },
      "retrieve_invoices_payments": {
        "name": "retrieve_invoices_payments",
        "description": ""
      },
      "activate_licenses": {
        "name": "activate_licenses",
        "description": ""
      },
      "deactivate_licenses": {
        "name": "deactivate_licenses",
        "description": ""
      },
      "validate_licenses": {
        "name": "validate_licenses",
        "description": ""
      },
      "retrieve_license_keys": {
        "name": "retrieve_license_keys",
        "description": ""
      },
      "update_license_keys": {
        "name": "update_license_keys",
        "description": ""
      },
      "list_license_keys": {
        "name": "list_license_keys",
        "description": ""
      },
      "retrieve_license_key_instances": {
        "name": "retrieve_license_key_instances",
        "description": ""
      },
      "update_license_key_instances": {
        "name": "update_license_key_instances",
        "description": ""
      },
      "list_license_key_instances": {
        "name": "list_license_key_instances",
        "description": ""
      },
      "create_customers": {
        "name": "create_customers",
        "description": ""
      },
      "retrieve_customers": {
        "name": "retrieve_customers",
        "description": ""
      },
      "update_customers": {
        "name": "update_customers",
        "description": ""
      },
      "list_customers": {
        "name": "list_customers",
        "description": ""
      },
      "create_customers_customer_portal": {
        "name": "create_customers_customer_portal",
        "description": ""
      },
      "create_refunds": {
        "name": "create_refunds",
        "description": ""
      },
      "retrieve_refunds": {
        "name": "retrieve_refunds",
        "description": ""
      },
      "list_refunds": {
        "name": "list_refunds",
        "description": ""
      },
      "retrieve_disputes": {
        "name": "retrieve_disputes",
        "description": ""
      },
      "list_disputes": {
        "name": "list_disputes",
        "description": ""
      },
      "list_payouts": {
        "name": "list_payouts",
        "description": ""
      },
      "retrieve_webhook_events": {
        "name": "retrieve_webhook_events",
        "description": ""
      },
      "list_webhook_events": {
        "name": "list_webhook_events",
        "description": ""
      },
      "create_products": {
        "name": "create_products",
        "description": ""
      },
      "retrieve_products": {
        "name": "retrieve_products",
        "description": ""
      },
      "update_products": {
        "name": "update_products",
        "description": ""
      },
      "list_products": {
        "name": "list_products",
        "description": ""
      },
      "delete_products": {
        "name": "delete_products",
        "description": ""
      },
      "unarchive_products": {
        "name": "unarchive_products",
        "description": ""
      },
      "update_files_products": {
        "name": "update_files_products",
        "description": ""
      },
      "update_products_images": {
        "name": "update_products_images",
        "description": ""
      },
      "list_supported_countries_misc": {
        "name": "list_supported_countries_misc",
        "description": ""
      },
      "create_discounts": {
        "name": "create_discounts",
        "description": "If `code` is omitted or empty, a random 16-char uppercase code is generated."
      },
      "retrieve_discounts": {
        "name": "retrieve_discounts",
        "description": "GET /discounts/{discount_id}"
      },
      "update_discounts": {
        "name": "update_discounts",
        "description": "PATCH /discounts/{discount_id}"
      },
      "list_discounts": {
        "name": "list_discounts",
        "description": "GET /discounts"
      },
      "delete_discounts": {
        "name": "delete_discounts",
        "description": "DELETE /discounts/{discount_id}"
      },
      "create_addons": {
        "name": "create_addons",
        "description": ""
      },
      "retrieve_addons": {
        "name": "retrieve_addons",
        "description": ""
      },
      "update_addons": {
        "name": "update_addons",
        "description": ""
      },
      "list_addons": {
        "name": "list_addons",
        "description": ""
      },
      "update_images_addons": {
        "name": "update_images_addons",
        "description": ""
      },
      "create_brands": {
        "name": "create_brands",
        "description": ""
      },
      "retrieve_brands": {
        "name": "retrieve_brands",
        "description": "Thin handler just calls `get_brand` and wraps in `Json(...)`"
      },
      "update_brands": {
        "name": "update_brands",
        "description": ""
      },
      "list_brands": {
        "name": "list_brands",
        "description": ""
      },
      "update_images_brands": {
        "name": "update_images_brands",
        "description": ""
      }
    }
  },
  "xtquant-ai": {
    "category": "finance-fintech",
    "path": "finance-fintech/xtquant-ai.json"
  },
  "consumer-financial-protection-bureau-complaints": {
    "category": "finance-fintech",
    "path": "finance-fintech/consumer-financial-protection-bureau-complaints.json"
  },
  "setu_mcp_upi_deeplinks": {
    "category": "finance-fintech",
    "path": "finance-fintech/setu_mcp_upi_deeplinks.json"
  },
  "square-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/square-mcp-server.json",
    "validated": true,
    "tools": {
      "make_api_request": {
        "name": "make_api_request",
        "description": "Unified tool for all Square API operations. Be sure to get types before calling. Available services:\n  applepay, bankaccounts, bookingcustomattributes, bookings, cards, cashdrawers, catalog, checkout, customercustomattributes, customergroups, customersegments, customers, devices, disputes, events, giftcardactivities, giftcards, inventory, invoices, labor, locationcustomattributes, locations, loyalty, merchantcustomattributes, merchants, oauth, ordercustomattributes, orders, payments, payouts, refunds, sites, snippets, subscriptions, team, terminal, vendors, webhooksubscriptions."
      },
      "get_type_info": {
        "name": "get_type_info",
        "description": "Get type information for a Square API method. You must call this before calling the make_api_request tool."
      },
      "get_service_info": {
        "name": "get_service_info",
        "description": "Get information about a Square API service. Call me before trying to get type info"
      }
    }
  },
  "adfin-financial-management": {
    "category": "finance-fintech",
    "path": "finance-fintech/adfin-financial-management.json"
  },
  "lunchmoney-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/lunchmoney-mcp.json",
    "validated": true,
    "tools": {
      "get-budget-summary": {
        "name": "get-budget-summary",
        "description": "Get budget summary for a specific time period"
      },
      "get-recent-transactions": {
        "name": "get-recent-transactions",
        "description": "Get recent transactions"
      },
      "search-transactions": {
        "name": "search-transactions",
        "description": "Search transactions by keyword"
      },
      "get-category-spending": {
        "name": "get-category-spending",
        "description": "Get spending in a category"
      }
    }
  },
  "whale-tracker": {
    "category": "finance-fintech",
    "path": "finance-fintech/whale-tracker.json"
  },
  "finnhub": {
    "category": "finance-fintech",
    "path": "finance-fintech/finnhub.json"
  },
  "tradovate": {
    "category": "finance-fintech",
    "path": "finance-fintech/tradovate.json"
  },
  "quantconnect-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/quantconnect-mcp.json"
  },
  "fred-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/fred-mcp-server.json",
    "validated": true,
    "tools": {
      "RRPONTSYD": {
        "name": "RRPONTSYD",
        "description": "Retrieve data for Overnight Reverse Repurchase Agreements (RRPONTSYD) from FRED"
      }
    }
  },
  "coinmarketcap": {
    "category": "finance-fintech",
    "path": "finance-fintech/coinmarketcap.json"
  },
  "bitcoin-(coingecko)": {
    "category": "finance-fintech",
    "path": "finance-fintech/bitcoin--coingecko.json"
  },
  "stockflow-(yahoo-finance)": {
    "category": "finance-fintech",
    "path": "finance-fintech/stockflow--yahoo-finance.json"
  },
  "crypto-trading": {
    "category": "finance-fintech",
    "path": "finance-fintech/crypto-trading.json"
  },
  "stock-info-(akshare)": {
    "category": "finance-fintech",
    "path": "finance-fintech/stock-info--akshare.json"
  },
  "trade-companion-(substack)": {
    "category": "finance-fintech",
    "path": "finance-fintech/trade-companion--substack.json"
  },
  "paradex": {
    "category": "finance-fintech",
    "path": "finance-fintech/paradex.json"
  },
  "gatherings-(expense-sharing)": {
    "category": "finance-fintech",
    "path": "finance-fintech/gatherings--expense-sharing.json"
  },
  "sec-edgar": {
    "category": "finance-fintech",
    "path": "finance-fintech/sec-edgar.json"
  },
  "fred-macroeconomic-data": {
    "category": "finance-fintech",
    "path": "finance-fintech/fred-macroeconomic-data.json"
  },
  "coingecko": {
    "category": "finance-fintech",
    "path": "finance-fintech/coingecko.json"
  },
  "ynab": {
    "category": "finance-fintech",
    "path": "finance-fintech/ynab.json"
  },
  "bonk-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/bonk-mcp.json"
  },
  "bitrefill-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/bitrefill-mcp-server.json",
    "validated": true,
    "tools": {
      "search": {
        "name": "search",
        "description": "Search for gift cards, esims, mobile topups and more. It's suggested to use the `categories` tool before searching for products, to have a better understanding of what's available."
      },
      "detail": {
        "name": "detail",
        "description": "Get detailed information about a product"
      },
      "categories": {
        "name": "categories",
        "description": "Get the full product type/categories map. It's suggested to use this tool to get the categories and then use the `search` tool to search for products in a specific category."
      },
      "create_invoice": {
        "name": "create_invoice",
        "description": "Create a new invoice for purchasing products with various payment methods"
      },
      "get_invoices": {
        "name": "get_invoices",
        "description": "Retrieve a list of invoices with optional filtering"
      },
      "get_invoice": {
        "name": "get_invoice",
        "description": "Retrieve details for a specific invoice by ID"
      },
      "pay_invoice": {
        "name": "pay_invoice",
        "description": "Pay an unpaid invoice (only works with 'balance' payment method)"
      },
      "get_orders": {
        "name": "get_orders",
        "description": "Retrieve a list of orders with optional filtering"
      },
      "get_order": {
        "name": "get_order",
        "description": "Retrieve details for a specific order by ID"
      },
      "unseal_order": {
        "name": "unseal_order",
        "description": "Reveal codes and PINs for a specific order by ID"
      },
      "get_account_balance": {
        "name": "get_account_balance",
        "description": "Retrieve your account balance"
      },
      "ping": {
        "name": "ping",
        "description": "Check if the Bitrefill API is available"
      }
    }
  },
  "razorpay": {
    "category": "finance-fintech",
    "path": "finance-fintech/razorpay.json"
  },
  "solana-blockchain": {
    "category": "finance-fintech",
    "path": "finance-fintech/solana-blockchain.json"
  },
  "up-bank": {
    "category": "finance-fintech",
    "path": "finance-fintech/up-bank.json"
  },
  "finance-tools-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/finance-tools-mcp.json"
  },
  "octagon-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/octagon-mcp.json",
    "validated": true,
    "tools": {
      "octagon-agent": {
        "name": "octagon-agent",
        "description": "[COMPREHENSIVE MARKET INTELLIGENCE] Orchestrates all agents for comprehensive market intelligence analysis. Capabilities: Combines insights from SEC filings, earnings calls, financial metrics, stock data, institutional holdings, private company research, funding analysis, M&A transactions, investor intelligence, and debt analysis to provide holistic market intelligence. Best for: Complex research requiring multiple data sources and comprehensive analysis across public and private markets. Example queries: 'Retrieve year-over-year growth in key income-statement items for AAPL, limited to 5 records and filtered by period FY', 'Analyze the latest 10-K filing for AAPL and extract key financial metrics and risk factors', 'Retrieve the daily closing prices for AAPL over the last 30 days', 'Analyze AAPL's latest earnings call transcript and extract key insights about future guidance', 'Provide a comprehensive overview of Stripe, including its business model and key metrics', 'Retrieve the funding history for Stripe, including all rounds and investors'."
      },
      "octagon-sec-agent": {
        "name": "octagon-sec-agent",
        "description": "[PUBLIC MARKET INTELLIGENCE] A specialized agent for SEC filings analysis and extraction. Covers over 8,000 public companies from SEC EDGAR with comprehensive coverage of annual and quarterly reports (10-K, 10-Q, 20-F), offering filings (S-1), amendments, and event filings (8-K). Updated daily with historical data dating back to 2018 for time-series analysis. Best for extracting management discussion, footnotes, risk factors, and quantitative data from SEC filings. Example queries:'Find the risk factors related to supply chain in Tesla's latest 10-K', 'List every material weakness in internal control that Salesforce disclosed between 2020 and 2024.', 'Compare executive compensation (total, cash, equity) for Amazon, Walmart, and Target in 2023'."
      },
      "octagon-transcripts-agent": {
        "name": "octagon-transcripts-agent",
        "description": "[PUBLIC MARKET INTELLIGENCE] A specialized agent for analyzing earnings call transcripts and management commentary. Covers over 8,000 public companies with continuous daily updates for real-time insights. Historical data dating back to 2018 enables robust time-series analysis. Extract information from earnings call transcripts, including executive statements, financial guidance, analyst questions, and forward-looking statements. Best for analyzing management sentiment, extracting guidance figures, and identifying key business trends. Example queries: 'What did Amazon's CEO say about AWS growth expectations in the latest earnings call?', 'Summarize key financial metrics mentioned in Tesla's Q2 2023 earnings call', 'What questions did analysts ask about margins during Netflix's latest earnings call?'."
      },
      "octagon-financials-agent": {
        "name": "octagon-financials-agent",
        "description": "[PUBLIC MARKET INTELLIGENCE] Specialized agent for public companies' financial statement analysis, financial ratio calculations, and analysts' estimates. Capabilities: Analyze financial statements including income statements, balance sheets, cash flow statements, product segments, geographic segments, analysts' financial estimates, calculate financial metrics, growth rates, compare ratios across companies, and evaluate performance indicators and operational efficiency. Best for: Deep financial analysis and comparison of company financial performance. Example queries: 'Extract quarterly revenue growth rates for Microsoft over the past 2 years', 'Compare the gross margins, operating margins, and net margins of Apple, Microsoft, and Google over the last 3 years', 'Analyze Tesla's cash flow statements from 2021 to 2023 and calculate free cash flow trends', 'Show me Amazon's capex to operating cash flow ratio for the past 3 years','What is NVDA's cash conversion cycle trend over the past 8 quarters?'."
      },
      "octagon-stock-data-agent": {
        "name": "octagon-stock-data-agent",
        "description": "[PUBLIC MARKET INTELLIGENCE] Specialized agent for stock market data and valuation analysis. Capabilities: Analyze stock price movements, trading volumes, stock indices performance by sector and industry, valuation metrics by company, sector, industry including P/E, EV/S ratios, analysts' price target and ratings, and technical indicators. Best for: Stock market research, equity analysis, and trading pattern identification. Example queries: 'How has Apple's stock performed compared to the S&P 500 over the last 6 months?', 'What is the monthly P/E ratio for NVDA over the past 24 months?', 'Analyze the trading volume patterns for Tesla stock before and after earnings releases', 'What were the major price movements for NVIDIA in 2023 and what were the catalysts?'."
      },
      "octagon-companies-agent": {
        "name": "octagon-companies-agent",
        "description": "[PRIVATE MARKET INTELLIGENCE] A specialized database agent for looking up company information and financials. Capabilities: Query comprehensive company financial information and business intelligence from Octagon's company database. Best for: Finding basic information about companies, their financial metrics, and industry benchmarks. NOTE: For better and more accurate results, provide the company's website URL instead of just the company name. Example queries: 'What is the employee trends for Stripe (stripe.com)?', 'List the top 5 companies in the AI sector by revenue growth', 'Who are the top competitors to Databricks (databricks.com)?'."
      },
      "octagon-funding-agent": {
        "name": "octagon-funding-agent",
        "description": "[PRIVATE MARKET INTELLIGENCE] A specialized database agent for company funding transactions. Capabilities: Extract information about funding rounds, investors, valuations, and investment trends. Best for: Researching startup funding history, investor activity, and venture capital patterns. NOTE: For better and more accurate results, provide the company's website URL instead of just the company name. Example queries: 'What was Anthropic's latest funding round size, valuation, and key investors (anthropic.com)?', 'How much has OpenAI raised in total funding and at what valuation (openai.com)?', 'Who were the lead investors in Databricks' Series G round and what was the post-money valuation (databricks.com)?'."
      },
      "octagon-funds-agent": {
        "name": "octagon-funds-agent",
        "description": "[PRIVATE MARKET INTELLIGENCE] A specialized agent for analyzing investment funds. Capabilities: Retrieve information about fund strategies, fund sizes, target sectors, LPs, dry powder, fund performance, distributions, and fundraising activities. Best for: Understanding private market fund characteristics, tracking fundraising events, and identifying active funds by region or focus. Example queries: 'List top-performing venture capital funds launched in 2020', 'What sectors does Andreessen Horowitz's latest fund target?', 'What are the typical LPs in early-stage crypto funds?', 'Which funds closed the largest raises in Q1 2024?'"
      },
      "octagon-deals-agent": {
        "name": "octagon-deals-agent",
        "description": "[PRIVATE MARKET INTELLIGENCE] A specialized database agent for M&A and IPO transaction analysis. Capabilities: Retrieve information about mergers, acquisitions, initial public offerings, and other financial transactions. Best for: Research on corporate transactions, IPO valuations, and M&A activity. NOTE: For better and more accurate results, provide the company's website URL instead of just the company name. Example queries: 'What was the acquisition price when Microsoft (microsoft.com) acquired GitHub (github.com)?', 'List the valuation multiples for AI companies in 2024', 'List all the acquisitions and price, valuation by Salesforce (salesforce.com) in 2023?'."
      },
      "octagon-investors-agent": {
        "name": "octagon-investors-agent",
        "description": "[PRIVATE MARKET INTELLIGENCE] A specialized database agent for looking up information on investors including angel investors, venture capital, and private equity. Capabilities: Retrieve information about investors, their investment criteria, and past activities. Best for: Research on investors and details about their investment activities. NOTE: For better and more accurate results, provide the investor's website URL instead of just the investor name. Example queries: 'What is the latest investment criteria of Insight Partners (insightpartners.com)?', 'How many investments did Andreessen Horowitz (a16z.com) make in the last 6 months', 'What is the typical check size for QED Investors (qedinvestors.com)'."
      },
      "octagon-scraper-agent": {
        "name": "octagon-scraper-agent",
        "description": "[PUBLIC & PRIVATE MARKET INTELLIGENCE] Specialized agent for financial data extraction from investor websites. Capabilities: Extract structured financial data from investor relations websites, tables, and online financial sources. Best for: Gathering financial data from websites that don't have accessible APIs. Example queries: 'Extract all data fields from zillow.com/san-francisco-ca/', 'Extract all data fields from www.carvana.com/cars/'."
      },
      "octagon-deep-research-agent": {
        "name": "octagon-deep-research-agent",
        "description": "[PUBLIC & PRIVATE MARKET INTELLIGENCE] A comprehensive agent that can utilize multiple sources for deep research analysis. Capabilities: Aggregate research across multiple data sources, synthesize information, and provide comprehensive investment research. Best for: Investment research questions requiring up-to-date aggregated information from the web. Example queries: 'Research the financial impact of Apple's privacy changes on digital advertising companies' revenue and margins', 'Analyze the competitive landscape in the cloud computing sector, focusing on AWS, Azure, and Google Cloud margin and growth trends', 'Investigate the factors driving electric vehicle adoption and their impact on battery supplier financials'."
      },
      "octagon-debts-agent": {
        "name": "octagon-debts-agent",
        "description": "[PRIVATE MARKET INTELLIGENCE] A specialized database agent for analyzing private debts and lenders. Capabilities: Retrieve information about private debts and lenders. Best for: Research on borrowers, and lenders and details about the private debt facilities. Example queries: 'List all the debt activities from borrower American Tower', 'Compile all the debt activities from lender ING Group in Q4 2024'."
      },
      "octagon-holdings-agent": {
        "name": "octagon-holdings-agent",
        "description": "[PUBLIC MARKET INTELLIGENCE] Specialized agent for institutional ownership and holdings data, providing comprehensive insights into Form 13F filings, institutional investor activity, fund performance, and industry-level holdings analytics. Capabilities: Retrieve the latest Form 13F and related institutional ownership filings; Analyze institutional holder filings for specific securities and periods; Summarize performance of institutional holders (funds, asset managers); Break down institutional portfolios by industry/sector; Summarize institutional positions for a given security; Benchmark industry performance based on institutional holdings. Use Cases: Tracking institutional buying and selling activity for specific stocks; Analyzing fund manager performance and portfolio allocation; Benchmarking industry and sector performance based on institutional holdings; Identifying new or exited positions by major funds; Understanding industry exposure and concentration in institutional portfolios. Example queries: '@octagon-holdings-agent Retrieve the most recent Form 13F and related filings submitted by institutional investors, limited to 50 records on page 0.'; '@octagon-holdings-agent Retrieve analytics for institutional holder filings for AAPL in Q2 of 2023, limited to 20 records on page 0.'; '@octagon-holdings-agent Get a summary of the performance of the institutional holder with CIK 0001166559.'; '@octagon-holdings-agent Retrieve the industry breakdown for the holder with CIK 0001067983 for Q4 of 2024.'; '@octagon-holdings-agent Get a summary of institutional positions for AAPL for Q4 of 2024.'; '@octagon-holdings-agent Get a financial performance summary for all industries for Q4 of 2024.'"
      },
      "octagon-crypto-agent": {
        "name": "octagon-crypto-agent",
        "description": "[PUBLIC MARKET INTELLIGENCE] Specialized agent for cryptocurrency market data and analysis. Capabilities: Retrieve comprehensive cryptocurrency listings from global exchanges, access historical price data and end-of-day charts, get real-time quotes and live price snapshots, search cryptocurrency news articles, and analyze crypto market trends. Best for: Cryptocurrency research, price analysis, market monitoring, and staying updated with crypto news. Example queries: 'Get a comprehensive list of all cryptocurrencies traded on global exchanges', 'Retrieve historical end-of-day price data for BTCUSD from 2020-01-01 to 2024-12-31', 'Retrieve the real-time quote for ETHUSD', 'Retrieve a short live price snapshot for many cryptocurrencies', 'Search news articles for BTCUSD, ETHUSD from 2025-01-01 to 2025-06-13, limited to 20 results on page 0'."
      }
    }
  },
  "coinmarket": {
    "category": "finance-fintech",
    "path": "finance-fintech/coinmarket.json"
  },
  "investor-agent": {
    "category": "finance-fintech",
    "path": "finance-fintech/investor-agent.json"
  },
  "openbudget": {
    "category": "finance-fintech",
    "path": "finance-fintech/openbudget.json"
  },
  "bybit-exchange-api": {
    "category": "finance-fintech",
    "path": "finance-fintech/bybit-exchange-api.json"
  },
  "investment-portfolio-manager": {
    "category": "finance-fintech",
    "path": "finance-fintech/investment-portfolio-manager.json"
  },
  "fred-(federal-reserve-economic-data)": {
    "category": "finance-fintech",
    "path": "finance-fintech/fred--federal-reserve-economic-data.json"
  },
  "@paddle/paddle-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/paddle-paddle-mcp.json",
    "validated": false,
    "tools": {}
  },
  "tigerbeetle": {
    "category": "finance-fintech",
    "path": "finance-fintech/tigerbeetle.json"
  },
  "transaction-categorizer": {
    "category": "finance-fintech",
    "path": "finance-fintech/transaction-categorizer.json"
  },
  "stock-market-data": {
    "category": "finance-fintech",
    "path": "finance-fintech/stock-market-data.json"
  },
  "blockchain.com-data-and-query": {
    "category": "finance-fintech",
    "path": "finance-fintech/blockchain-com-data-and-query.json"
  },
  "pancakeswap-poolspy": {
    "category": "finance-fintech",
    "path": "finance-fintech/pancakeswap-poolspy.json"
  },
  "financial-datasets": {
    "category": "finance-fintech",
    "path": "finance-fintech/financial-datasets.json"
  },
  "odoo-accounting": {
    "category": "finance-fintech",
    "path": "finance-fintech/odoo-accounting.json"
  },
  "uniswap-poolspy": {
    "category": "finance-fintech",
    "path": "finance-fintech/uniswap-poolspy.json"
  },
  "paypal-java": {
    "category": "finance-fintech",
    "path": "finance-fintech/paypal-java.json"
  },
  "ccxt-cryptocurrency-exchange": {
    "category": "finance-fintech",
    "path": "finance-fintech/ccxt-cryptocurrency-exchange.json"
  },
  "yfinance-trader": {
    "category": "finance-fintech",
    "path": "finance-fintech/yfinance-trader.json"
  },
  "@getalby/lightning-tools-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/getalby-lightning-tools-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@akki91/ankr-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/akki91-ankr-mcp.json",
    "validated": true,
    "tools": {
      "get_token_balances_on_network": {
        "name": "get_token_balances_on_network",
        "description": "Gets all token balances for a given address on a specific network"
      }
    }
  },
  "norman-finance": {
    "category": "finance-fintech",
    "path": "finance-fintech/norman-finance.json"
  },
  "yahoo-finance": {
    "category": "finance-fintech",
    "path": "finance-fintech/yahoo-finance.json"
  },
  "rootdata": {
    "category": "finance-fintech",
    "path": "finance-fintech/rootdata.json"
  },
  "@paypal/mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/paypal-mcp.json",
    "validated": false,
    "tools": {}
  },
  "openregister": {
    "category": "finance-fintech",
    "path": "finance-fintech/openregister.json"
  },
  "cryptocurrency-technical-analysis": {
    "category": "finance-fintech",
    "path": "finance-fintech/cryptocurrency-technical-analysis.json"
  },
  "paypal-account-updater": {
    "category": "finance-fintech",
    "path": "finance-fintech/paypal-account-updater.json"
  },
  "alphavantage": {
    "category": "finance-fintech",
    "path": "finance-fintech/alphavantage.json"
  },
  "a-stock": {
    "category": "finance-fintech",
    "path": "finance-fintech/a-stock.json"
  },
  "base-network-mcp-server": {
    "category": "finance-fintech",
    "path": "finance-fintech/base-network-mcp-server.json",
    "validated": true,
    "tools": {
      "process_command": {
        "name": "process_command",
        "description": "Process a natural language command for Base network operations"
      },
      "create_wallet": {
        "name": "create_wallet",
        "description": "Create a new wallet"
      },
      "check_balance": {
        "name": "check_balance",
        "description": "Check wallet balance"
      },
      "list_wallets": {
        "name": "list_wallets",
        "description": "List all available wallets"
      }
    }
  },
  "beanquery-(beancount-ledger)": {
    "category": "finance-fintech",
    "path": "finance-fintech/beanquery--beancount-ledger.json"
  },
  "ssi-stock-(vietnamese-market-data)": {
    "category": "finance-fintech",
    "path": "finance-fintech/ssi-stock--vietnamese-market-data.json"
  },
  "xueqiu-(chinese-stock-market)": {
    "category": "finance-fintech",
    "path": "finance-fintech/xueqiu--chinese-stock-market.json"
  },
  "search-stock-news-mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/search-stock-news-mcp.json",
    "validated": true,
    "tools": {
      "search-stock-news": {
        "name": "search-stock-news",
        "description": "Search for stock-related news using Tavily API"
      },
      "general-search": {
        "name": "general-search",
        "description": "Perform a general web search using Tavily API"
      }
    }
  },
  "minecraft-rcon": {
    "category": "gaming",
    "path": "gaming/minecraft-rcon.json"
  },
  "moling-minecraft": {
    "category": "gaming",
    "path": "gaming/moling-minecraft.json"
  },
  "steam-web-api": {
    "category": "gaming",
    "path": "gaming/steam-web-api.json"
  },
  "cs2-rcon": {
    "category": "gaming",
    "path": "gaming/cs2-rcon.json"
  },
  "unity-ollama": {
    "category": "gaming",
    "path": "gaming/unity-ollama.json"
  },
  "mcp-chess": {
    "category": "gaming",
    "path": "gaming/mcp-chess.json"
  },
  "steam": {
    "category": "gaming",
    "path": "gaming/steam.json"
  },
  "unreal-engine-binary-reader": {
    "category": "gaming",
    "path": "gaming/unreal-engine-binary-reader.json"
  },
  "chess": {
    "category": "gaming",
    "path": "gaming/chess.json"
  },
  "poker-win-calculator": {
    "category": "gaming",
    "path": "gaming/poker-win-calculator.json"
  },
  "opendota": {
    "category": "gaming",
    "path": "gaming/opendota.json"
  },
  "mtg-deck-manager": {
    "category": "gaming",
    "path": "gaming/mtg-deck-manager.json"
  },
  "confluence-cloud": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/confluence-cloud.json"
  },
  "flomo-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/flomo-mcp.json",
    "validated": true,
    "tools": {
      "write_note": {
        "name": "write_note",
        "description": "Write note to flomo"
      }
    }
  },
  "sourcesage": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/sourcesage.json"
  },
  "sourcesyncai-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/sourcesyncai-mcp.json",
    "validated": true,
    "tools": {
      "validateApiKey": {
        "name": "validateApiKey",
        "description": "Validates the API key by attempting to list namespaces. Returns the list of namespaces if successful."
      },
      "createNamespace": {
        "name": "createNamespace",
        "description": "Creates a new namespace with the provided configuration. Requires a name, file storage configuration, vector storage configuration, and embedding model configuration."
      },
      "listNamespaces": {
        "name": "listNamespaces",
        "description": "Lists all namespaces available for the current API key and optional tenant ID."
      },
      "getNamespace": {
        "name": "getNamespace",
        "description": "Retrieves a specific namespace by its ID."
      },
      "updateNamespace": {
        "name": "updateNamespace",
        "description": "Updates an existing namespace with the provided configuration parameters."
      },
      "deleteNamespace": {
        "name": "deleteNamespace",
        "description": "Permanently deletes a namespace by its ID."
      },
      "ingestText": {
        "name": "ingestText",
        "description": "Ingests raw text content into the namespace. Supports optional metadata and chunk configuration."
      },
      "ingestFile": {
        "name": "ingestFile",
        "description": "Ingests a file into the namespace. Supports various file formats with automatic parsing."
      },
      "ingestUrls": {
        "name": "ingestUrls",
        "description": "Ingests content from a list of URLs. Supports scraping options and metadata."
      },
      "ingestSitemap": {
        "name": "ingestSitemap",
        "description": "Ingests content from a website using its sitemap.xml. Supports path filtering and link limits."
      },
      "ingestWebsite": {
        "name": "ingestWebsite",
        "description": "Crawls and ingests content from a website recursively. Supports depth control and path filtering."
      },
      "ingestConnector": {
        "name": "ingestConnector",
        "description": "Ingests all documents in the connector that are in backlog or failed status. No need to provide the document ids or file ids for the ingestion. Ids are already in the backlog when picked thorough the picker. If not, the user has to go through the authorization flow again, where they will be asked to pick the documents again."
      },
      "getIngestJobRunStatus": {
        "name": "getIngestJobRunStatus",
        "description": "Checks the status of a previously submitted ingestion job."
      },
      "fetchDocuments": {
        "name": "fetchDocuments",
        "description": "Fetches documents from the namespace based on filter criteria. Supports pagination and including specific document properties."
      },
      "updateDocuments": {
        "name": "updateDocuments",
        "description": "Updates metadata for documents that match the specified filter criteria."
      },
      "deleteDocuments": {
        "name": "deleteDocuments",
        "description": "Permanently deletes documents that match the specified filter criteria."
      },
      "resyncDocuments": {
        "name": "resyncDocuments",
        "description": "Reprocesses documents that match the specified filter criteria. Useful for updating after schema changes."
      },
      "semanticSearch": {
        "name": "semanticSearch",
        "description": "Performs semantic search across the namespace to find relevant content based on meaning rather than exact keyword matches."
      },
      "hybridSearch": {
        "name": "hybridSearch",
        "description": "Performs a combined keyword and semantic search, balancing between exact matches and semantic similarity. Requires hybridConfig with weights for both search types."
      },
      "createConnection": {
        "name": "createConnection",
        "description": "Creates a new connection to a specific source. The connector parameter should be a valid SourceSync connector enum value. The clientRedirectUrl parameter is optional and can be used to specify a custom redirect URL for the connection. This will give you a authorization url which you can redirect the user to. The user will then be asked to pick the documents they want to ingest."
      },
      "listConnections": {
        "name": "listConnections",
        "description": "Lists all connections for the current namespace, optionally filtered by connector type."
      },
      "getConnection": {
        "name": "getConnection",
        "description": "Retrieves details for a specific connection by its ID."
      },
      "updateConnection": {
        "name": "updateConnection",
        "description": "Updates a connection to a specific source. The connector parameter should be a valid SourceSync connector enum value. The clientRedirectUrl parameter is optional and can be used to specify a custom redirect URL for the connection. This will give you a authorization url which you can redirect the user to. The user will then be asked to pick the documents they want to ingest. This is useful if you want to update the connection to a different source or if you want to update the clientRedirectUrl or if you want to pick a different or new set of documents."
      },
      "revokeConnection": {
        "name": "revokeConnection",
        "description": "Revokes access for a specific connection, removing the integration with the external service."
      },
      "fetchUrlContent": {
        "name": "fetchUrlContent",
        "description": "Fetches the content of a URL. Particularly useful for fetching parsed text file URLs."
      }
    }
  },
  "zotero-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/zotero-mcp.json"
  },
  "literature-memory": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/literature-memory.json"
  },
  "mcp-pinecone": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-pinecone.json"
  },
  "memory-plugin-(sqlite)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-plugin--sqlite.json"
  },
  "wikidata": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/wikidata.json"
  },
  "readwise": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/readwise.json"
  },
  "tribal-(error-knowledge-base)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/tribal--error-knowledge-base.json"
  },
  "esa-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/esa-mcp-server.json",
    "validated": true,
    "tools": {
      "search_esa_posts": {
        "name": "search_esa_posts",
        "description": "Search posts in esa.io. Response is paginated. For efficient search, you can use customized queries like the following: keyword for partial match, \"keyword\" for exact match, keyword1 keyword2 for AND match, keyword1 OR keyword2 for OR match, -keyword for excluding keywords, title:keyword for title match, wip:true or wip:false for WIP posts, kind:stock or kind:flow for kind match, category:category_name for partial match with category name, in:category_name for prefix match with category name, on:category_name for exact match with category name, body:keyword for body match, tag:tag_name or tag:tag_name case_sensitive:true for tag match, user:screen_name for post author's screen name, updated_by:screen_name for post updater's screen name, comment:keyword for partial match with comments, starred:true or starred:false for starred posts, watched:true or watched:false for watched posts, watched_by:screen_name for screen name of members watching the post, sharing:true or sharing:false for shared posts, stars:>3 for posts with more than 3 stars, watches:>3 for posts with more than 3 watches, comments:>3 for posts with more than 3 comments, done:>=3 for posts with 3 or more done items, undone:>=3 for posts with 3 or more undone items, created:>YYYY-MM-DD for filtering by creation date, updated:>YYYY-MM-DD for filtering by update date"
      },
      "read_esa_post": {
        "name": "read_esa_post",
        "description": "Read a post in esa.io."
      },
      "read_esa_multiple_posts": {
        "name": "read_esa_multiple_posts",
        "description": "Read multiple posts in esa.io."
      }
    }
  },
  "systemprompt-mcp-notion": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/systemprompt-mcp-notion.json",
    "validated": true,
    "tools": {
      "systemprompt_list_notion_pages": {
        "name": "systemprompt_list_notion_pages",
        "description": "Lists all accessible Notion pages in your workspace, sorted by last edited time. Returns key metadata including title, URL, and last edited timestamp."
      },
      "systemprompt_list_notion_databases": {
        "name": "systemprompt_list_notion_databases",
        "description": "Lists all accessible Notion databases in your workspace, sorted by last edited time. Returns key metadata including database title, schema, and last edited timestamp."
      },
      "systemprompt_search_notion_pages": {
        "name": "systemprompt_search_notion_pages",
        "description": "Performs a full-text search across all accessible Notion pages using the provided query. Searches through titles, content, and metadata to find relevant matches."
      },
      "systemprompt_search_notion_pages_by_title": {
        "name": "systemprompt_search_notion_pages_by_title",
        "description": "Searches specifically for Notion pages with titles matching the provided query. Useful for finding exact or similar title matches when you know the page name."
      },
      "systemprompt_get_notion_page": {
        "name": "systemprompt_get_notion_page",
        "description": "Retrieves comprehensive details of a specific Notion page, including its content, properties, and metadata. Returns the complete page structure and all nested content blocks."
      },
      "systemprompt_create_notion_page": {
        "name": "systemprompt_create_notion_page",
        "description": "Creates a rich, comprehensive Notion page that expands upon basic user inputs. Takes simple instructions and content, then generates a detailed, well-structured page with appropriate sections, formatting, and supplementary content."
      },
      "systemprompt_update_notion_page": {
        "name": "systemprompt_update_notion_page",
        "description": "Updates an existing Notion page with rich, comprehensive content based on user instructions. Takes simple inputs and transforms them into well-structured, detailed page content while preserving existing information. Can enhance, reorganize, or expand the current content while maintaining page integrity."
      },
      "systemprompt_delete_notion_page": {
        "name": "systemprompt_delete_notion_page",
        "description": "Permanently deletes a specified Notion page and all its contents. This action cannot be undone, so use with caution."
      }
    }
  },
  "@professional-wiki/mediawiki-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/professional-wiki-mediawiki-mcp-server.json",
    "validated": true,
    "tools": {
      "get-page": {
        "name": "get-page",
        "description": "Returns the standard page object for a wiki page, optionally including page source or rendered HTML, and including the license and information about the latest revision."
      },
      "get-page-history": {
        "name": "get-page-history",
        "description": "Returns information about the latest revisions to a wiki page, in segments of 20 revisions, starting with the latest revision. The response includes API routes for the next oldest, next newest, and latest revision segments."
      },
      "search-page": {
        "name": "search-page",
        "description": "Search wiki page titles and contents for the provided search terms, and returns matching pages."
      },
      "set-wiki": {
        "name": "set-wiki",
        "description": "Set the wiki to use for the current session."
      },
      "update-page": {
        "name": "update-page",
        "description": "Updates a wiki page. Replaces the existing content of a page with the provided content"
      },
      "get-file": {
        "name": "get-file",
        "description": "Returns information about a file, including links to download the file in thumbnail, preview, and original formats."
      },
      "create-page": {
        "name": "create-page",
        "description": "Creates a wiki page with the provided content."
      }
    }
  },
  "groundx-rag": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/groundx-rag.json"
  },
  "mcp-codebase-insight": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-codebase-insight.json"
  },
  "notion-(via-dify)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/notion--via-dify.json"
  },
  "rdf-explorer": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/rdf-explorer.json"
  },
  "mcp-server-obsidian-omnisearch": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-server-obsidian-omnisearch.json"
  },
  "memory-plus": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-plus.json"
  },
  "logseq": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/logseq.json"
  },
  "chroma-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/chroma-mcp-server.json"
  },
  "memory-journal-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-journal-mcp-server.json"
  },
  "obsidian-index": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/obsidian-index.json"
  },
  "notion-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/notion-mcp-server.json",
    "validated": true,
    "tools": {
      "notion_pages": {
        "name": "notion_pages",
        "description": "Perform various page operations (create, archive, restore, search, update)"
      },
      "notion_blocks": {
        "name": "notion_blocks",
        "description": "Perform various block operations (retrieve, update, delete, append children, batch operations)"
      },
      "notion_database": {
        "name": "notion_database",
        "description": "Perform various database operations (create, query, update)"
      },
      "notion_comments": {
        "name": "notion_comments",
        "description": "Perform various comment operations (get, add to page, add to discussion)"
      },
      "notion_users": {
        "name": "notion_users",
        "description": "Perform various user operations (list, get, get bot)"
      }
    }
  },
  "mcp-confluence": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-confluence.json",
    "validated": false,
    "tools": {}
  },
  "knowledge-base": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/knowledge-base.json"
  },
  "memos-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memos-mcp-server.json"
  },
  "@itseasy21/mcp-knowledge-graph": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/itseasy21-mcp-knowledge-graph.json",
    "validated": true,
    "tools": {
      "create_entities": {
        "name": "create_entities",
        "description": "Create multiple new entities in the knowledge graph"
      },
      "create_relations": {
        "name": "create_relations",
        "description": "Create multiple new relations between entities in the knowledge graph. Relations should be in active voice"
      },
      "add_observations": {
        "name": "add_observations",
        "description": "Add new observations to existing entities in the knowledge graph"
      },
      "delete_entities": {
        "name": "delete_entities",
        "description": "Delete multiple entities and their associated relations from the knowledge graph"
      },
      "delete_observations": {
        "name": "delete_observations",
        "description": "Delete specific observations from entities in the knowledge graph"
      },
      "delete_relations": {
        "name": "delete_relations",
        "description": "Delete multiple relations from the knowledge graph"
      },
      "read_graph": {
        "name": "read_graph",
        "description": "Read the entire knowledge graph"
      },
      "search_nodes": {
        "name": "search_nodes",
        "description": "Search for nodes in the knowledge graph based on a query"
      },
      "open_nodes": {
        "name": "open_nodes",
        "description": "Open specific nodes in the knowledge graph by their names"
      },
      "update_entities": {
        "name": "update_entities",
        "description": "Update multiple existing entities in the knowledge graph"
      },
      "update_relations": {
        "name": "update_relations",
        "description": "Update multiple existing relations in the knowledge graph"
      }
    }
  },
  "logseq-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/logseq-mcp.json"
  },
  "memory-bank": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-bank.json"
  },
  "mcp-server-vikingdb": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-server-vikingdb.json"
  },
  "mcp-outline": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-outline.json"
  },
  "memory-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-mcp-server.json"
  },
  "tana-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/tana-mcp.json",
    "validated": true,
    "tools": {
      "create_plain_node": {
        "name": "create_plain_node",
        "description": ""
      },
      "create_reference_node": {
        "name": "create_reference_node",
        "description": ""
      },
      "create_date_node": {
        "name": "create_date_node",
        "description": ""
      },
      "create_url_node": {
        "name": "create_url_node",
        "description": ""
      },
      "create_checkbox_node": {
        "name": "create_checkbox_node",
        "description": ""
      },
      "create_file_node": {
        "name": "create_file_node",
        "description": ""
      },
      "create_field_node": {
        "name": "create_field_node",
        "description": ""
      },
      "set_node_name": {
        "name": "set_node_name",
        "description": ""
      },
      "create_node_structure": {
        "name": "create_node_structure",
        "description": ""
      },
      "create_supertag": {
        "name": "create_supertag",
        "description": ""
      },
      "create_field": {
        "name": "create_field",
        "description": ""
      }
    }
  },
  "code-embeddings": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/code-embeddings.json"
  },
  "inkeep-rag": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/inkeep-rag.json"
  },
  "mem0": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mem0.json"
  },
  "@myjungle/docu-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/myjungle-docu-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "txtai": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/txtai.json"
  },
  "rowik-(personal-mediawiki)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/rowik--personal-mediawiki.json"
  },
  "mem0-for-project-management": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mem0-for-project-management.json"
  },
  "onyx-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/onyx-mcp-server.json",
    "validated": true,
    "tools": {
      "search_onyx": {
        "name": "search_onyx",
        "description": "Search the Onyx backend for relevant documents"
      },
      "chat_with_onyx": {
        "name": "chat_with_onyx",
        "description": "Chat with Onyx to get comprehensive answers"
      }
    }
  },
  "memory-manager": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-manager.json"
  },
  "sqlite-literature-manager": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/sqlite-literature-manager.json"
  },
  "awslabs.bedrock-kb-retrieval-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/awslabs-bedrock-kb-retrieval-mcp-server.json"
  },
  "mcp-server-logseq": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-server-logseq.json"
  },
  "memory_mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory_mcp.json"
  },
  "@kj455/mcp-kibela": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/kj455-mcp-kibela.json",
    "validated": true,
    "tools": {
      "kibela_search_notes": {
        "name": "kibela_search_notes",
        "description": "Search Kibela notes by query"
      },
      "kibela_get_my_notes": {
        "name": "kibela_get_my_notes",
        "description": "Get my latest notes from Kibela"
      },
      "kibela_get_note_content": {
        "name": "kibela_get_note_content",
        "description": "Get note content by note ID"
      },
      "kibela_get_note_from_path": {
        "name": "kibela_get_note_from_path",
        "description": "Get note content by note path"
      },
      "kibela_update_note_content": {
        "name": "kibela_update_note_content",
        "description": "Update note content by note id. This tool allows you to modify the content of an existing Kibela note. Before updating, it fetches the current content of the note to ensure proper version control. Note that you need the note ID (not the note path) to use this tool."
      },
      "kibela_create_note": {
        "name": "kibela_create_note",
        "description": "Create a new note in Kibela."
      }
    }
  },
  "mem0.ai-memory-manager": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mem0-ai-memory-manager.json"
  },
  "bear": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/bear.json"
  },
  "bear-notes": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/bear-notes.json"
  },
  "fegis-(schema-driven-memory)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/fegis--schema-driven-memory.json"
  },
  "cognee": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/cognee.json"
  },
  "mcp-memory-libsql": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-memory-libsql.json",
    "validated": false,
    "tools": {}
  },
  "obsidian-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/obsidian-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "@readwise/readwise-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/readwise-readwise-mcp.json",
    "validated": true,
    "tools": {
      "search_readwise_highlights": {
        "name": "search_readwise_highlights",
        "description": ""
      }
    }
  },
  "@gleanwork/mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/gleanwork-mcp-server.json",
    "validated": true,
    "tools": {
      "company_search": {
        "name": "company_search",
        "description": "Find relevant company documents and data\n\n        Example request:\n\n        {\n            \"query\": \"What are the company holidays this year?\",\n            \"datasources\": [\"drive\", \"confluence\"]\n        }\n        "
      },
      "chat": {
        "name": "chat",
        "description": "Chat with Glean Assistant using Glean's RAG\n\n        Example request:\n\n        {\n            \"message\": \"What are the company holidays this year?\",\n            \"context\": [\n                \"Hello, I need some information about time off.\",\n                \"I'm planning my vacation for next year.\"\n            ]\n        }\n        "
      },
      "people_profile_search": {
        "name": "people_profile_search",
        "description": "Search for people profiles in the company\n\n        Example request:\n\n        {\n            \"query\": \"Find people named John Doe\",\n            \"filters\": {\n                \"department\": \"Engineering\",\n                \"city\": \"San Francisco\"\n            },\n            \"pageSize\": 10\n        }\n\n        "
      }
    }
  },
  "@delorenj/mcp-qdrant-memory": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/delorenj-mcp-qdrant-memory.json",
    "validated": false,
    "tools": {}
  },
  "memory-service": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/memory-service.json"
  },
  "journal-rag": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/journal-rag.json"
  },
  "arcknowledge-(custom-rag)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/arcknowledge--custom-rag.json"
  },
  "mindmap-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mindmap-mcp-server.json"
  },
  "joplin": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/joplin.json"
  },
  "mcp-server-qdrant": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-server-qdrant.json"
  },
  "markdown-library": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/markdown-library.json"
  },
  "context-portal-mcp": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/context-portal-mcp.json"
  },
  "obsidian-api-mcp-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/obsidian-api-mcp-server.json"
  },
  "mem0-(long-term-memory)": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mem0--long-term-memory.json"
  },
  "pdf-knowledge-base": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/pdf-knowledge-base.json"
  },
  "basic-memory": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/basic-memory.json"
  },
  "think-tool": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/think-tool.json"
  },
  "confluence-chat": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/confluence-chat.json"
  },
  "roam-research": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/roam-research.json"
  },
  "@kazuph/mcp-obsidian": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/kazuph-mcp-obsidian.json",
    "validated": false,
    "tools": {}
  },
  "chat-analysis": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/chat-analysis.json"
  },
  "mcpunk": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcpunk.json"
  },
  "graphiti": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/graphiti.json"
  },
  "sparql": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/sparql.json"
  },
  "@aindreyway/mcp-codex-keeper": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/aindreyway-mcp-codex-keeper.json",
    "validated": false,
    "tools": {}
  },
  "optimized-memory": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/optimized-memory.json"
  },
  "volcengine-knowledge-base": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/volcengine-knowledge-base.json"
  },
  "contentstack-brandkit": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/contentstack-brandkit.json"
  },
  "watson-discovery": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/watson-discovery.json"
  },
  "dify-dataset-retriever": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/dify-dataset-retriever.json"
  },
  "research-notion": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/research-notion.json"
  },
  "notion": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/notion.json"
  },
  "@iachilles/memento": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/iachilles-memento.json",
    "validated": false,
    "tools": {}
  },
  "@suekou/mcp-notion-server": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/suekou-mcp-notion-server.json",
    "validated": true,
    "tools": {
      "notion_append_block_children": {
        "name": "notion_append_block_children",
        "description": "Append new children blocks to a specified parent block in Notion. Requires insert content capabilities. You can optionally specify the 'after' parameter to append after a certain block."
      },
      "notion_retrieve_block": {
        "name": "notion_retrieve_block",
        "description": "Retrieve a block from Notion"
      },
      "notion_retrieve_block_children": {
        "name": "notion_retrieve_block_children",
        "description": "Retrieve the children of a block"
      },
      "notion_delete_block": {
        "name": "notion_delete_block",
        "description": "Delete a block in Notion"
      },
      "notion_update_block": {
        "name": "notion_update_block",
        "description": "Update the content of a block in Notion based on its type. The update replaces the entire value for a given field."
      },
      "notion_retrieve_page": {
        "name": "notion_retrieve_page",
        "description": "Retrieve a page from Notion"
      },
      "notion_update_page_properties": {
        "name": "notion_update_page_properties",
        "description": "Update properties of a page or an item in a Notion database"
      },
      "notion_list_all_users": {
        "name": "notion_list_all_users",
        "description": "List all users in the Notion workspace. **Note:** This function requires upgrading to the Notion Enterprise plan and using an Organization API key to avoid permission errors."
      },
      "notion_retrieve_user": {
        "name": "notion_retrieve_user",
        "description": "Retrieve a specific user by user_id in Notion. **Note:** This function requires upgrading to the Notion Enterprise plan and using an Organization API key to avoid permission errors."
      },
      "notion_retrieve_bot_user": {
        "name": "notion_retrieve_bot_user",
        "description": "Retrieve the bot user associated with the current token in Notion"
      },
      "notion_create_database": {
        "name": "notion_create_database",
        "description": "Create a database in Notion"
      },
      "notion_query_database": {
        "name": "notion_query_database",
        "description": "Query a database in Notion"
      },
      "notion_retrieve_database": {
        "name": "notion_retrieve_database",
        "description": "Retrieve a database in Notion"
      },
      "notion_update_database": {
        "name": "notion_update_database",
        "description": "Update a database in Notion"
      },
      "notion_create_database_item": {
        "name": "notion_create_database_item",
        "description": "Create a new item (page) in a Notion database"
      },
      "notion_create_comment": {
        "name": "notion_create_comment",
        "description": "Create a comment in Notion. This requires the integration to have 'insert comment' capabilities. You can either specify a page parent or a discussion_id, but not both."
      },
      "notion_retrieve_comments": {
        "name": "notion_retrieve_comments",
        "description": "Retrieve a list of unresolved comments from a Notion page or block. Requires the integration to have 'read comment' capabilities."
      },
      "notion_search": {
        "name": "notion_search",
        "description": "Search pages or databases by title in Notion"
      }
    }
  },
  "kakao-local": {
    "category": "location-services",
    "path": "location-services/kakao-local.json"
  },
  "nearby-places": {
    "category": "location-services",
    "path": "location-services/nearby-places.json"
  },
  "openstreetmap": {
    "category": "location-services",
    "path": "location-services/openstreetmap.json"
  },
  "time-zone": {
    "category": "location-services",
    "path": "location-services/time-zone.json"
  },
  "geoapify-map-generator": {
    "category": "location-services",
    "path": "location-services/geoapify-map-generator.json"
  },
  "@cablate/mcp-google-map": {
    "category": "location-services",
    "path": "location-services/cablate-mcp-google-map.json",
    "validated": true,
    "tools": {
      "search_nearby": {
        "name": "search_nearby",
        "description": "搜尋附近的地點"
      },
      "get_place_details": {
        "name": "get_place_details",
        "description": "獲取特定地點的詳細資訊"
      },
      "maps_geocode": {
        "name": "maps_geocode",
        "description": "將地址轉換為座標"
      },
      "maps_reverse_geocode": {
        "name": "maps_reverse_geocode",
        "description": "將座標轉換為地址"
      },
      "maps_distance_matrix": {
        "name": "maps_distance_matrix",
        "description": "計算多個起點和終點之間的距離和時間"
      },
      "maps_directions": {
        "name": "maps_directions",
        "description": "獲取兩點之間的詳細導航路線"
      },
      "maps_elevation": {
        "name": "maps_elevation",
        "description": "獲取位置的海拔數據"
      }
    }
  },
  "ip-geolocation": {
    "category": "location-services",
    "path": "location-services/ip-geolocation.json"
  },
  "mcp-myip": {
    "category": "location-services",
    "path": "location-services/mcp-myip.json"
  },
  "korean-weather": {
    "category": "location-services",
    "path": "location-services/korean-weather.json"
  },
  "weather": {
    "category": "location-services",
    "path": "location-services/weather.json"
  },
  "weather-alerts-&-forecasts": {
    "category": "location-services",
    "path": "location-services/weather-alerts---forecasts.json"
  },
  "xiaozhi-location": {
    "category": "location-services",
    "path": "location-services/xiaozhi-location.json"
  },
  "world-time": {
    "category": "location-services",
    "path": "location-services/world-time.json"
  },
  "geoserver": {
    "category": "location-services",
    "path": "location-services/geoserver.json"
  },
  "@swonixs/weatherapi-mcp": {
    "category": "location-services",
    "path": "location-services/swonixs-weatherapi-mcp.json",
    "validated": true,
    "tools": {
      "get_weather": {
        "name": "get_weather",
        "description": ""
      }
    }
  },
  "aemet_mcp": {
    "category": "location-services",
    "path": "location-services/aemet_mcp.json"
  },
  "weather-api": {
    "category": "location-services",
    "path": "location-services/weather-api.json"
  },
  "mcp_weather_server": {
    "category": "location-services",
    "path": "location-services/mcp_weather_server.json"
  },
  "@baidumap/mcp-server-baidu-map": {
    "category": "location-services",
    "path": "location-services/baidumap-mcp-server-baidu-map.json",
    "validated": true,
    "tools": {
      "map_geocode": {
        "name": "map_geocode",
        "description": "地理编码服务"
      },
      "map_reverse_geocode": {
        "name": "map_reverse_geocode",
        "description": "全球逆地理编码"
      },
      "map_search_places": {
        "name": "map_search_places",
        "description": "地点检索服务（包括城市检索、圆形区域检索、多边形区域检索）"
      },
      "map_place_details": {
        "name": "map_place_details",
        "description": "地点详情检索服务"
      },
      "map_distance_matrix": {
        "name": "map_distance_matrix",
        "description": "计算多个出发地和目的地的距离和路线用时"
      },
      "map_directions": {
        "name": "map_directions",
        "description": "路线规划服务， 计算出发地到目的地的距离、路线用时、路线方案"
      },
      "map_weather": {
        "name": "map_weather",
        "description": "通过行政区划代码或者经纬度坐标获取实时天气信息和未来5天天气预报"
      },
      "map_ip_location": {
        "name": "map_ip_location",
        "description": "通过IP地址获取位置信息"
      },
      "map_road_traffic": {
        "name": "map_road_traffic",
        "description": "根据城市和道路名称查询具体道路的实时拥堵评价和拥堵路段、拥堵距离、拥堵趋势等信息"
      },
      "map_poi_extract": {
        "name": "map_poi_extract",
        "description": "POI智能标注"
      }
    }
  },
  "cep-(brazilian-postal-code)": {
    "category": "location-services",
    "path": "location-services/cep--brazilian-postal-code.json"
  },
  "naver-maps": {
    "category": "location-services",
    "path": "location-services/naver-maps.json"
  },
  "location": {
    "category": "location-services",
    "path": "location-services/location.json"
  },
  "japanese-postal-code-lookup": {
    "category": "location-services",
    "path": "location-services/japanese-postal-code-lookup.json"
  },
  "mcp-openweathermap": {
    "category": "location-services",
    "path": "location-services/mcp-openweathermap.json",
    "validated": false,
    "tools": {}
  },
  "national-weather-service": {
    "category": "location-services",
    "path": "location-services/national-weather-service.json"
  },
  "geo": {
    "category": "location-services",
    "path": "location-services/geo.json"
  },
  "ip-address-lookup": {
    "category": "location-services",
    "path": "location-services/ip-address-lookup.json"
  },
  "ordnance-survey-national-geographic-database": {
    "category": "location-services",
    "path": "location-services/ordnance-survey-national-geographic-database.json"
  },
  "jweather-mcp-server": {
    "category": "location-services",
    "path": "location-services/jweather-mcp-server.json"
  },
  "knmi-weather-mcp": {
    "category": "location-services",
    "path": "location-services/knmi-weather-mcp.json"
  },
  "dnf-gold-price-&-weather": {
    "category": "location-services",
    "path": "location-services/dnf-gold-price---weather.json"
  },
  "gis-mcp": {
    "category": "location-services",
    "path": "location-services/gis-mcp.json"
  },
  "japan-weather": {
    "category": "location-services",
    "path": "location-services/japan-weather.json"
  },
  "amap-navigator": {
    "category": "location-services",
    "path": "location-services/amap-navigator.json"
  },
  "whereami-(ip-geolocation)": {
    "category": "location-services",
    "path": "location-services/whereami--ip-geolocation.json"
  },
  "openweathermap-(weekly-weather)": {
    "category": "location-services",
    "path": "location-services/openweathermap--weekly-weather.json"
  },
  "street-view": {
    "category": "location-services",
    "path": "location-services/street-view.json"
  },
  "instagram-engagement-mcp": {
    "category": "marketing",
    "path": "marketing/instagram-engagement-mcp.json",
    "validated": true,
    "tools": {
      "analyze_post_comments": {
        "name": "analyze_post_comments",
        "description": "Analyze comments on an Instagram post to identify sentiment, themes, and potential leads"
      },
      "compare_accounts": {
        "name": "compare_accounts",
        "description": "Compare engagement metrics across different Instagram accounts"
      },
      "extract_demographics": {
        "name": "extract_demographics",
        "description": "Extract demographic insights from users engaged with a post or account"
      },
      "identify_leads": {
        "name": "identify_leads",
        "description": "Identify potential leads based on engagement patterns"
      },
      "generate_engagement_report": {
        "name": "generate_engagement_report",
        "description": "Generate a comprehensive engagement report for an Instagram account"
      }
    }
  },
  "meta-ads-mcp": {
    "category": "marketing",
    "path": "marketing/meta-ads-mcp.json"
  },
  "@feedmob/jampp-reporting": {
    "category": "marketing",
    "path": "marketing/feedmob-jampp-reporting.json",
    "validated": true,
    "tools": {
      "get_campaign_spend": {
        "name": "get_campaign_spend",
        "description": "Get the spend per campaign for a particular time range from Jampp Reporting API"
      },
      "get_campaign_daily_spend": {
        "name": "get_campaign_daily_spend",
        "description": "Get the daily spend per campaign for a particular time range from Jampp Reporting API"
      }
    }
  },
  "osp-marketing-tools": {
    "category": "marketing",
    "path": "marketing/osp-marketing-tools.json"
  },
  "@felores/placid-mcp-server": {
    "category": "marketing",
    "path": "marketing/felores-placid-mcp-server.json",
    "validated": true,
    "tools": {
      "placid_list_templates": {
        "name": "placid_list_templates",
        "description": "Get a list of available Placid templates with optional filtering. Each template includes its title, ID, preview image URL, available layers, and tags."
      },
      "placid_generate_image": {
        "name": "placid_generate_image",
        "description": "Generate an image using a template and provided assets"
      },
      "placid_generate_video": {
        "name": "placid_generate_video",
        "description": "Generate a video using one or more templates and provided assets. Every 10 seconds of video uses 10 credits."
      }
    }
  },
  "facebook-ads-library": {
    "category": "marketing",
    "path": "marketing/facebook-ads-library.json"
  },
  "mcp-metricool": {
    "category": "marketing",
    "path": "marketing/mcp-metricool.json"
  },
  "@feedmob/singular-reporting": {
    "category": "marketing",
    "path": "marketing/feedmob-singular-reporting.json",
    "validated": true,
    "tools": {
      "create_report": {
        "name": "create_report",
        "description": "Getting reporting data from Singular via generates an asynchronous report query"
      },
      "get_singular_report": {
        "name": "get_singular_report",
        "description": "Get the complete report from Singular. Checks status and automatically downloads the CSV report data when ready."
      }
    }
  },
  "@marketplaceadpros/amazon-ads-mcp-server": {
    "category": "marketing",
    "path": "marketing/marketplaceadpros-amazon-ads-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "mailchimp": {
    "category": "marketing",
    "path": "marketing/mailchimp.json"
  },
  "blog-publisher": {
    "category": "marketing",
    "path": "marketing/blog-publisher.json"
  },
  "@feedmob/kayzen-reporting": {
    "category": "marketing",
    "path": "marketing/feedmob-kayzen-reporting.json",
    "validated": true,
    "tools": {
      "list_reports": {
        "name": "list_reports",
        "description": "Get a list of all the existing reports from Kayzen Reporting API"
      },
      "get_report_results": {
        "name": "get_report_results",
        "description": "Get the results of a report from Kayzen Reporting API"
      }
    }
  },
  "facebook-ads": {
    "category": "marketing",
    "path": "marketing/facebook-ads.json"
  },
  "typefully": {
    "category": "marketing",
    "path": "marketing/typefully.json"
  },
  "google-ads": {
    "category": "marketing",
    "path": "marketing/google-ads.json"
  },
  "linkedin": {
    "category": "marketing",
    "path": "marketing/linkedin.json"
  },
  "@hiyorineko/mcp-rollbar-server": {
    "category": "monitoring",
    "path": "monitoring/hiyorineko-mcp-rollbar-server.json",
    "validated": true,
    "tools": {
      "rollbar_list_items": {
        "name": "rollbar_list_items",
        "description": "List items (errors) from Rollbar"
      },
      "rollbar_get_item": {
        "name": "rollbar_get_item",
        "description": "Get a specific item (error) from Rollbar using the internal item ID maintained by Rollbar's system."
      },
      "rollbar_get_item_by_occurrence_uuid": {
        "name": "rollbar_get_item_by_occurrence_uuid",
        "description": "Get a specific item (error) from Rollbar using an occurrence UUID. The UUID must be from an occurrence that belongs to the item."
      },
      "rollbar_get_item_by_counter": {
        "name": "rollbar_get_item_by_counter",
        "description": "Get a specific item by project counter from Rollbar. The counter is the visible ID that appears in the Rollbar UI."
      },
      "rollbar_list_occurrences": {
        "name": "rollbar_list_occurrences",
        "description": "List occurrences of errors from Rollbar"
      },
      "rollbar_get_occurrence": {
        "name": "rollbar_get_occurrence",
        "description": "Get a specific occurrence of an error from Rollbar"
      },
      "rollbar_list_projects": {
        "name": "rollbar_list_projects",
        "description": "List projects from Rollbar"
      },
      "rollbar_get_project": {
        "name": "rollbar_get_project",
        "description": "Get a specific project from Rollbar"
      },
      "rollbar_list_environments": {
        "name": "rollbar_list_environments",
        "description": "List environments from Rollbar"
      },
      "rollbar_list_users": {
        "name": "rollbar_list_users",
        "description": "List users from Rollbar"
      },
      "rollbar_get_user": {
        "name": "rollbar_get_user",
        "description": "Get a specific user from Rollbar"
      },
      "rollbar_list_deploys": {
        "name": "rollbar_list_deploys",
        "description": "List deploys from Rollbar"
      },
      "rollbar_get_deploy": {
        "name": "rollbar_get_deploy",
        "description": "Get a specific deploy from Rollbar"
      }
    }
  },
  "json-logs": {
    "category": "monitoring",
    "path": "monitoring/json-logs.json"
  },
  "cloudwatch-logs": {
    "category": "monitoring",
    "path": "monitoring/cloudwatch-logs.json"
  },
  "log-analyzer-with-cloudwatch-logs": {
    "category": "monitoring",
    "path": "monitoring/log-analyzer-with-cloudwatch-logs.json"
  },
  "system-monitor": {
    "category": "monitoring",
    "path": "monitoring/system-monitor.json"
  },
  "@kajirita2002/honeycomb-mcp-server": {
    "category": "monitoring",
    "path": "monitoring/kajirita2002-honeycomb-mcp-server.json",
    "validated": true,
    "tools": {
      "honeycomb_auth": {
        "name": "honeycomb_auth",
        "description": "API Keys have various scopes permissions and belong to a specific Team or Environment. Use this to validate authentication for a key, to determine what authorizations have been granted to a key, and to determine the Team and Environment that a key belongs to."
      },
      "honeycomb_datasets_list": {
        "name": "honeycomb_datasets_list",
        "description": "List all datasets in the environment. A Dataset represents a collection of related events that come from the same source, or are related to the same source."
      },
      "honeycomb_dataset_get": {
        "name": "honeycomb_dataset_get",
        "description": "Get information about a specific dataset. A Dataset represents a collection of related events that come from the same source, or are related to the same source."
      },
      "honeycomb_columns_list": {
        "name": "honeycomb_columns_list",
        "description": "List all columns in a dataset. Columns are fields in the events you send to Honeycomb."
      },
      "honeycomb_query_create": {
        "name": "honeycomb_query_create",
        "description": "Create a query from a specification. DOES NOT run the query to retrieve results."
      },
      "honeycomb_query_get": {
        "name": "honeycomb_query_get",
        "description": "Get information about a specific query. Returns the query specification, not the query results."
      },
      "honeycomb_query_result_create": {
        "name": "honeycomb_query_result_create",
        "description": "Run a previously created query and return a query result ID that can be used to retrieve the results."
      },
      "honeycomb_query_result_get": {
        "name": "honeycomb_query_result_get",
        "description": "Get query results for a previously executed query. The response body will be a JSON object with 'complete': true and the results populated once the query is complete."
      },
      "honeycomb_dataset_definitions_list": {
        "name": "honeycomb_dataset_definitions_list",
        "description": "List dataset definitions with pagination. Dataset definitions describe the fields with special meaning in the Dataset. Honeycomb automatically creates these Dataset definition fields when the Dataset is created."
      },
      "honeycomb_boards_list": {
        "name": "honeycomb_boards_list",
        "description": "List all boards. Boards are a place to pin and save useful queries and graphs you want to retain for later reuse and reference."
      },
      "honeycomb_board_get": {
        "name": "honeycomb_board_get",
        "description": "Get information about a specific board. Boards are a place to pin and save useful queries and graphs you want to retain for later reuse and reference."
      }
    }
  },
  "victorialogs": {
    "category": "monitoring",
    "path": "monitoring/victorialogs.json"
  },
  "mackerel": {
    "category": "monitoring",
    "path": "monitoring/mackerel.json"
  },
  "gigapipe": {
    "category": "monitoring",
    "path": "monitoring/gigapipe.json"
  },
  "mcp-solarwinds": {
    "category": "monitoring",
    "path": "monitoring/mcp-solarwinds.json",
    "validated": true,
    "tools": {
      "search_logs": {
        "name": "search_logs",
        "description": "Search SolarWinds Observability logs with optional filtering"
      },
      "visualize_logs": {
        "name": "visualize_logs",
        "description": "Generate a histogram visualization of log events"
      }
    }
  },
  "@dynatrace-oss/dynatrace-mcp-server": {
    "category": "monitoring",
    "path": "monitoring/dynatrace-oss-dynatrace-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "mcp-ntopng": {
    "category": "monitoring",
    "path": "monitoring/mcp-ntopng.json"
  },
  "@winor30/mcp-server-datadog": {
    "category": "monitoring",
    "path": "monitoring/winor30-mcp-server-datadog.json",
    "validated": false,
    "tools": {}
  },
  "prometheus": {
    "category": "monitoring",
    "path": "monitoring/prometheus.json"
  },
  "metoro-kubernetes-observability": {
    "category": "monitoring",
    "path": "monitoring/metoro-kubernetes-observability.json"
  },
  "last9-observability": {
    "category": "monitoring",
    "path": "monitoring/last9-observability.json"
  },
  "victoriametrics": {
    "category": "monitoring",
    "path": "monitoring/victoriametrics.json"
  },
  "logstash": {
    "category": "monitoring",
    "path": "monitoring/logstash.json"
  },
  "mcp-sentry": {
    "category": "monitoring",
    "path": "monitoring/mcp-sentry.json"
  },
  "variance-log": {
    "category": "monitoring",
    "path": "monitoring/variance-log.json"
  },
  "grafana": {
    "category": "monitoring",
    "path": "monitoring/grafana.json"
  },
  "aws-cloudwatch": {
    "category": "monitoring",
    "path": "monitoring/aws-cloudwatch.json"
  },
  "new-relic-logs": {
    "category": "monitoring",
    "path": "monitoring/new-relic-logs.json"
  },
  "tailscale-network-monitor": {
    "category": "monitoring",
    "path": "monitoring/tailscale-network-monitor.json"
  },
  "system-info": {
    "category": "monitoring",
    "path": "monitoring/system-info.json"
  },
  "jmx-management": {
    "category": "monitoring",
    "path": "monitoring/jmx-management.json"
  },
  "agentic-(system-monitoring-&-rag)": {
    "category": "monitoring",
    "path": "monitoring/agentic--system-monitoring---rag.json"
  },
  "isitdown": {
    "category": "monitoring",
    "path": "monitoring/isitdown.json"
  },
  "ayd": {
    "category": "monitoring",
    "path": "monitoring/ayd.json"
  },
  "observe": {
    "category": "monitoring",
    "path": "monitoring/observe.json"
  },
  "sentry-issues-mcp": {
    "category": "monitoring",
    "path": "monitoring/sentry-issues-mcp.json",
    "validated": true,
    "tools": {
      "get_single_event": {
        "name": "get_single_event",
        "description": "get issue event by inputting sentry issue event url or sentry issue event id"
      },
      "get_project_events": {
        "name": "get_project_events",
        "description": "get issue events by inputting sentry organization id or slug and sentry project name or slug"
      }
    }
  },
  "mcp-server-aliyun-observability": {
    "category": "monitoring",
    "path": "monitoring/mcp-server-aliyun-observability.json"
  },
  "mcp-sentry-custom": {
    "category": "monitoring",
    "path": "monitoring/mcp-sentry-custom.json"
  },
  "perses-monitoring": {
    "category": "monitoring",
    "path": "monitoring/perses-monitoring.json"
  },
  "logfire-mcp": {
    "category": "monitoring",
    "path": "monitoring/logfire-mcp.json"
  },
  "memory-usage-dashboard": {
    "category": "monitoring",
    "path": "monitoring/memory-usage-dashboard.json"
  },
  "go-pprof-analyzer": {
    "category": "monitoring",
    "path": "monitoring/go-pprof-analyzer.json"
  },
  "kubernetes-monitoring": {
    "category": "monitoring",
    "path": "monitoring/kubernetes-monitoring.json"
  },
  "pubmed-searcher": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmed-searcher.json"
  },
  "pubmed-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmed-search.json"
  },
  "pubmed-medical-literature-research": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmed-medical-literature-research.json"
  },
  "mcp-data-extractor": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-data-extractor.json",
    "validated": true,
    "tools": {
      "extract_data": {
        "name": "extract_data",
        "description": "Extract data content (e.g. i18n translations) from source code to a JSON file. IMPORTANT: When encountering files with data such as i18n content embedded in code, use this tool directly instead of reading the file content first. This tool will programmatically extract all translations into a structured JSON file, preserving nested objects, arrays, template variables, and formatting. This helps keep translations as configuration and prevents filling up the AI context window with translation content. By default, the source file will be replaced with \"MIGRATED TO <target absolute path>\" and a warning message after successful extraction, making it easy to track where the data was moved to. This behaviour can be disabled by setting the DISABLE_SOURCE_REPLACEMENT environment variable to 'true'. The warning message can be customized by setting the WARNING_MESSAGE environment variable."
      },
      "extract_svg": {
        "name": "extract_svg",
        "description": "Extract SVG components from React/TypeScript/JavaScript files into individual .svg files. This tool will preserve the SVG structure and attributes while removing React-specific code. By default, the source file will be replaced with \"MIGRATED TO <target absolute path>\" and a warning message after successful extraction, making it easy to track where the SVGs were moved to. This behaviour can be disabled by setting the DISABLE_SOURCE_REPLACEMENT environment variable to 'true'. The warning message can be customized by setting the WARNING_MESSAGE environment variable."
      }
    }
  },
  "gpt-researcher": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/gpt-researcher.json"
  },
  "inbound-lead-generation": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/inbound-lead-generation.json"
  },
  "scraperis-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/scraperis-mcp.json",
    "validated": true,
    "tools": {
      "scrape": {
        "name": "scrape",
        "description": "Scrape a single webpage with advanced options for content extraction. \nAlways returns both markdown content and visual screenshot for rich context. \nSupports various formats including markdown, HTML, screenshots, JSON, and quick. \nThe prompt should include the website URL and what data you want to extract. \nFor example: 'Get me the top 10 products from producthunt.com' or \n'Extract all article titles and authors from techcrunch.com/news'"
      }
    }
  },
  "perplexity-web-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/perplexity-web-search.json"
  },
  "google-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/google-search.json"
  },
  "youtube": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube.json"
  },
  "hermes-search-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/hermes-search-mcp.json",
    "validated": true,
    "tools": {
      "search-documents": {
        "name": "search-documents",
        "description": "Search documents in Azure Cognitive Search index"
      },
      "index-content": {
        "name": "index-content",
        "description": "Index or update documents in Azure Cognitive Search"
      },
      "delete-index": {
        "name": "delete-index",
        "description": "Delete the Azure Cognitive Search index"
      }
    }
  },
  "agentql-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/agentql-mcp.json",
    "validated": true,
    "tools": {
      "extract-web-data": {
        "name": "extract-web-data",
        "description": "Extracts structured data as JSON from a web page given a URL using a Natural Language description of the data."
      }
    }
  },
  "pickapicon-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pickapicon-mcp.json",
    "validated": true,
    "tools": {
      "get_icon_repos": {
        "name": "get_icon_repos",
        "description": "get all icon repo NAME"
      },
      "get_icons_by_desc_and_prefix": {
        "name": "get_icons_by_desc_and_prefix",
        "description": "get icons by desc and prefix (LIKE AS ant-design)"
      },
      "get_icon_detail_by_prefix_and_name": {
        "name": "get_icon_detail_by_prefix_and_name",
        "description": "get icon detail by prefix and svg name"
      }
    }
  },
  "oxylabs-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/oxylabs-mcp.json"
  },
  "tavily-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/tavily-search.json"
  },
  "bytedance-hot-news": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/bytedance-hot-news.json"
  },
  "@adenot/mcp-google-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/adenot-mcp-google-search.json",
    "validated": true,
    "tools": {
      "search": {
        "name": "search",
        "description": "Perform a web search query"
      }
    }
  },
  "markdown-web-crawl": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/markdown-web-crawl.json"
  },
  "octagon-deep-research-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/octagon-deep-research-mcp.json",
    "validated": true,
    "tools": {
      "octagon-deep-research-agent": {
        "name": "octagon-deep-research-agent",
        "description": "A specialized agent for deep research and comprehensive analysis across any topic or domain. Capabilities: Multi-source data aggregation, web scraping, academic research synthesis, competitive analysis, market intelligence, technical analysis, policy research, trend analysis, and comprehensive report generation. Best for: Any research question requiring comprehensive, multi-source analysis and synthesis. Example queries: 'Research the current state of quantum computing development and commercial applications', 'Analyze the competitive landscape in the electric vehicle market focusing on battery technology and supply chains', 'Investigate recent developments in AI regulation across different countries and their potential impact', 'Research sustainable agriculture practices and their adoption rates globally', 'Analyze the gig economy's impact on traditional employment models', 'Study the evolution of remote work policies post-pandemic and their effectiveness', 'Research breakthrough medical treatments for Alzheimer's disease in the last 3 years', 'Investigate cybersecurity threats in IoT devices and mitigation strategies', 'Analyze renewable energy adoption trends and policy drivers worldwide', 'Research the impact of social media algorithms on information consumption patterns'."
      }
    }
  },
  "fastdomaincheck": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/fastdomaincheck.json"
  },
  "claude-deep-research": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/claude-deep-research.json"
  },
  "youtube-subtitles": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-subtitles.json"
  },
  "@humansean/mcp-bocha": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/humansean-mcp-bocha.json",
    "validated": true,
    "tools": {
      "mcp-bocha_search": {
        "name": "mcp-bocha_search",
        "description": "Search the web for information"
      }
    }
  },
  "searxng-simple-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/searxng-simple-mcp.json"
  },
  "backlinks-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/backlinks-mcp.json"
  },
  "@cyanheads/pubmed-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/cyanheads-pubmed-mcp-server.json",
    "validated": true,
    "tools": {
      "fetch_pubmed_content": {
        "name": "fetch_pubmed_content",
        "description": "Fetches detailed information from PubMed using NCBI EFetch. Can be used with a direct list of PMIDs or with queryKey/webEnv from an ESearch history entry. Supports pagination (retstart, retmax) when using history. Available 'detailLevel' options: 'abstract_plus' (parsed title, abstract, authors, journal, keywords, DOI, optional MeSH/grant info), 'full_xml' (JSON representation of the PubMedArticle XML structure), 'medline_text' (MEDLINE format), or 'citation_data' (minimal data for citations). Returns a JSON object containing results, any PMIDs not found (if applicable), and EFetch details."
      },
      "generate_pubmed_chart": {
        "name": "generate_pubmed_chart",
        "description": "Generates a customizable chart (PNG) from structured data. Supports 'bar', 'line', 'scatter', 'pie', 'doughnut', 'bubble', 'radar', and 'polarArea' plots. Requires data values and field mappings for axes. Optional parameters allow for titles and dimensions. Internally uses Chart.js and chartjs-node-canvas to produce a Base64-encoded PNG image."
      },
      "get_pubmed_article_connections": {
        "name": "get_pubmed_article_connections",
        "description": "Finds articles related to a source PubMed ID (PMID) or retrieves formatted citations for it. Supports finding similar articles, articles that cite the source, articles referenced by the source (via NCBI ELink), or fetching data to generate citations in various styles (RIS, BibTeX, APA, MLA via NCBI EFetch and server-side formatting). Returns a JSON object detailing the connections or formatted citations."
      },
      "pubmed_research_agent": {
        "name": "pubmed_research_agent",
        "description": "Generates a standardized JSON research plan outline from component details you provide. It accepts granular inputs for all research phases (conception, data collection, analysis, dissemination, cross-cutting concerns). If `include_detailed_prompts_for_agent` is true, the output plan will embed instructive prompts and detailed guidance notes to aid the research agent. The tool's primary function is to organize and structure your rough ideas into a formal, machine-readable plan. This plan is intended for further processing; as the research agent, you should then utilize your full suite of tools (e.g., file manipulation, `get_pubmed_article_connections` for literature/data search via PMID) to execute the outlined research, tailored to the user's request."
      },
      "search_pubmed_articles": {
        "name": "search_pubmed_articles",
        "description": "Searches PubMed for articles using a query term and optional filters (max results, sort, date range, publication types). Uses NCBI ESearch to find PMIDs and ESummary (optional) for brief summaries. Returns a JSON object with search parameters, ESearch term, result counts, PMIDs, optional summaries (PMID, title, authors, source, dates), and E-utility URLs."
      }
    }
  },
  "crawlab": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/crawlab.json"
  },
  "perplexity-research": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/perplexity-research.json"
  },
  "pubmed-smithery": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmed-smithery.json"
  },
  "@rebers/4o-mini-search-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/rebers-4o-mini-search-mcp.json",
    "validated": false,
    "tools": {}
  },
  "nexus-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/nexus-mcp.json",
    "validated": false,
    "tools": {}
  },
  "newshub": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/newshub.json"
  },
  "searxng": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/searxng.json"
  },
  "search1api-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/search1api-mcp.json",
    "validated": true,
    "tools": {
      "search": {
        "name": "search",
        "description": "Web search tool"
      },
      "news": {
        "name": "news",
        "description": "News search tool"
      },
      "crawl": {
        "name": "crawl",
        "description": "Extract content from URL"
      },
      "sitemap": {
        "name": "sitemap",
        "description": "Get all related links from a URL"
      },
      "reasoning": {
        "name": "reasoning",
        "description": "Deep thinking and complex problem solving"
      },
      "trending": {
        "name": "trending",
        "description": "Get trending topics from popular platforms"
      }
    }
  },
  "typesense-candidate-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/typesense-candidate-search.json"
  },
  "aer-mcp-(american-economic-association-journals)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/aer-mcp--american-economic-association-journals.json"
  },
  "readability-(fetch-&-parse)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/readability--fetch---parse.json"
  },
  "torobjo-(iranian-price-comparison)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/torobjo--iranian-price-comparison.json"
  },
  "n8n-assistant": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/n8n-assistant.json"
  },
  "documentation-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/documentation-search.json"
  },
  "wordware": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/wordware.json"
  },
  "pubmedmcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmedmcp.json"
  },
  "zenn": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/zenn.json"
  },
  "exa-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/exa-search.json"
  },
  "ebay": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ebay.json"
  },
  "serper-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/serper-mcp-server.json"
  },
  "youtube-summarizer": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-summarizer.json"
  },
  "paperpal": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/paperpal.json"
  },
  "vectara-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/vectara-mcp.json"
  },
  "orion-vision-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/orion-vision-mcp.json",
    "validated": true,
    "tools": {
      "analyze-document": {
        "name": "analyze-document",
        "description": "Analyzes a document using Azure Form Recognizer and returns structured data"
      },
      "extract-form-data": {
        "name": "extract-form-data",
        "description": "Extracts structured data from forms using Azure Form Recognizer"
      }
    }
  },
  "youtube-dlp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-dlp-server.json"
  },
  "@suthio/brave-deep-research-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/suthio-brave-deep-research-mcp.json",
    "validated": false,
    "tools": {}
  },
  "searxng-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/searxng-search.json"
  },
  "memex-(firecrawl-&-voyage)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/memex--firecrawl---voyage.json"
  },
  "reference-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/reference-mcp.json"
  },
  "academic-paper-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/academic-paper-search.json"
  },
  "pdfsearch": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pdfsearch.json"
  },
  "youtube-transcript-extractor": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-transcript-extractor.json"
  },
  "docfork": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/docfork.json",
    "validated": true,
    "tools": {
      "get-library-docs": {
        "name": "get-library-docs",
        "description": "Retrieves up-to-date documentation and code examples for any library. This tool automatically searches for the library by name and fetches its documentation.\n\nUsage:\n1. Provide the author and library name pair (e.g., \"vercel/next.js\", \"shadcn-ui/ui\", \"vuejs/docs\")\n2. Specify a topic to focus the documentation on (e.g., \"dynamic\", \"routing\", \"authentication\")\n\nThe tool will:\n1. Automatically find and select the most relevant library based on the provided name\n2. Fetch comprehensive documentation for the selected library\n3. Return relevant sections focused on the specified topic\n\nResponse includes:\n- Library selection explanation\n- Comprehensive documentation with code examples\n- Focused content if a topic was specified"
      }
    }
  },
  "exa-web-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/exa-web-search.json"
  },
  "ticketmaster-live-events": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ticketmaster-live-events.json"
  },
  "mcp-hn": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-hn.json"
  },
  "news-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/news-mcp-server.json",
    "validated": true,
    "tools": {
      "get-latest-news": {
        "name": "get-latest-news",
        "description": "Fetch the latest news. Optionally, filter by country code (e.g. us, in, au), language (e.g. ne, en, fr) or word (e.g. pizza, JohnDoe) for more tailored news."
      },
      "get-news-sources": {
        "name": "get-news-sources",
        "description": "Fetch available news sources. Optionally, filter by country code (e.g. us, in, au) or language (e.g. ne, en, fr) for more tailored output."
      },
      "get-latest-crypto-news": {
        "name": "get-latest-crypto-news",
        "description": "Fetch the latest cryptocurrency news. Optionally, filter by specific coin (e.g. btc, eth,usdt,bnb), language (e.g. ne, en, fr) or tag (e.g. blockchain, liquidity, scam) for more tailored updates."
      }
    }
  },
  "one-search-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/one-search-mcp.json",
    "validated": true,
    "tools": {
      "one_search": {
        "name": "one_search",
        "description": "Search and retrieve content from web pages. Returns SERP results by default (url, title, description)."
      },
      "one_extract": {
        "name": "one_extract",
        "description": "Extract structured information from web pages using LLM. Supports both cloud AI and self-hosted LLM extraction."
      },
      "one_scrape": {
        "name": "one_scrape",
        "description": "Scrape a single webpage with advanced options for content extraction. Supports various formats including markdown, HTML, and screenshots. Can execute custom actions like clicking or scrolling before scraping."
      },
      "one_map": {
        "name": "one_map",
        "description": "Discover URLs from a starting point. Can use both sitemap.xml and HTML link discovery."
      }
    }
  },
  "pubmed-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmed-mcp-server.json"
  },
  "brave-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/brave-search.json"
  },
  "higress-ai-search-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/higress-ai-search-mcp-server.json"
  },
  "mcp-server-webcrawl": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-webcrawl.json"
  },
  "pdf-processor": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pdf-processor.json"
  },
  "mcp-search-linkup": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-search-linkup.json"
  },
  "mcp-google-cse": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-google-cse.json"
  },
  "gnews": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/gnews.json"
  },
  "linkd-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/linkd-mcp.json",
    "validated": true,
    "tools": {
      "search_for_users": {
        "name": "search_for_users",
        "description": "Search for users on Linkd using filters like query, school, and match threshold."
      },
      "search_for_companies": {
        "name": "search_for_companies",
        "description": "Search for companies on Linkd using filters like query and match threshold."
      },
      "enrich_linkedin": {
        "name": "enrich_linkedin",
        "description": "Retrieves detailed profile information for a specific LinkedIn URL. Each successful lookup costs 1 credit."
      },
      "retrieve_contacts": {
        "name": "retrieve_contacts",
        "description": "Retrieves email addresses and phone numbers for a LinkedIn profile. Each lookup costs 1 credit."
      },
      "scrape_linkedin": {
        "name": "scrape_linkedin",
        "description": "Retrieves detailed profile data and posts with comments from a LinkedIn profile URL using RapidAPI. Each request costs 2 credits."
      },
      "initiate_deep_research": {
        "name": "initiate_deep_research",
        "description": "Initiate a deep research job that combines multiple search variations with optional email enrichment. Each result costs 1 credit."
      },
      "check_deep_research_status": {
        "name": "check_deep_research_status",
        "description": "Check the status of an ongoing deep research job."
      }
    }
  },
  "mcp-simple-pubmed": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-simple-pubmed.json"
  },
  "typesense": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/typesense.json"
  },
  "insightslibrary": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/insightslibrary.json"
  },
  "enrichb2b": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/enrichb2b.json"
  },
  "mcp-server-pacman": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-pacman.json"
  },
  "twitter-noauth": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/twitter-noauth.json"
  },
  "mcp-server-dumplingai": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-dumplingai.json",
    "validated": true,
    "tools": {
      "get-youtube-transcript": {
        "name": "get-youtube-transcript",
        "description": "Extract transcripts from YouTube videos with optional parameters for timestamps and language preferences."
      },
      "search": {
        "name": "search",
        "description": "Perform Google web searches with customizable parameters."
      },
      "get-autocomplete": {
        "name": "get-autocomplete",
        "description": "Retrieve Google autocomplete suggestions for a query."
      },
      "search-maps": {
        "name": "search-maps",
        "description": "Search Google Maps for locations and businesses."
      },
      "search-places": {
        "name": "search-places",
        "description": "Search for places with detailed business information."
      },
      "search-news": {
        "name": "search-news",
        "description": "Search for news articles across multiple sources."
      },
      "get-google-reviews": {
        "name": "get-google-reviews",
        "description": "Retrieve Google reviews for businesses or places."
      },
      "scrape": {
        "name": "scrape",
        "description": "Extract and parse content from any web page."
      },
      "crawl": {
        "name": "crawl",
        "description": "Recursively crawl websites and extract content."
      },
      "extract": {
        "name": "extract",
        "description": "Extract structured data from web pages using AI-powered instructions."
      },
      "screenshot": {
        "name": "screenshot",
        "description": "Capture screenshots of web pages with customizable settings."
      },
      "doc-to-text": {
        "name": "doc-to-text",
        "description": "Convert various document formats to plain text."
      },
      "convert-to-pdf": {
        "name": "convert-to-pdf",
        "description": "Convert various file formats to PDF."
      },
      "merge-pdfs": {
        "name": "merge-pdfs",
        "description": "Combine multiple PDF files into a single document."
      },
      "trim-video": {
        "name": "trim-video",
        "description": "Trim videos to a specific duration."
      },
      "extract-document": {
        "name": "extract-document",
        "description": "Extract structured data from documents based on a prompt."
      },
      "extract-image": {
        "name": "extract-image",
        "description": "Extract structured data from images based on a prompt."
      },
      "extract-audio": {
        "name": "extract-audio",
        "description": "Extract structured data from audio files based on a prompt."
      },
      "extract-video": {
        "name": "extract-video",
        "description": "Extract structured data from videos based on a prompt."
      },
      "read-pdf-metadata": {
        "name": "read-pdf-metadata",
        "description": "Extract metadata from PDF files."
      },
      "write-pdf-metadata": {
        "name": "write-pdf-metadata",
        "description": "Write metadata to PDF files."
      },
      "generate-agent-completion": {
        "name": "generate-agent-completion",
        "description": "Generate AI text completions with customizable parameters."
      },
      "search-knowledge-base": {
        "name": "search-knowledge-base",
        "description": "Search a knowledge base for relevant information."
      },
      "add-to-knowledge-base": {
        "name": "add-to-knowledge-base",
        "description": "Add new text resources to a knowledge base."
      },
      "generate-ai-image": {
        "name": "generate-ai-image",
        "description": "Generate AI images from text prompts."
      },
      "run-js-code": {
        "name": "run-js-code",
        "description": "Execute JavaScript code in a sandbox."
      },
      "run-python-code": {
        "name": "run-python-code",
        "description": "Execute Python code in a sandbox."
      }
    }
  },
  "bocha-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/bocha-search.json"
  },
  "opensearch-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/opensearch-mcp-server.json"
  },
  "twitter-timeline": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/twitter-timeline.json"
  },
  "google-search-console": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/google-search-console.json"
  },
  "tavily": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/tavily.json"
  },
  "web-browser-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/web-browser-mcp-server.json"
  },
  "kagi-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kagi-search.json"
  },
  "azure-ai-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/azure-ai-search.json"
  },
  "mcp-duckduckgo-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-duckduckgo-search.json",
    "validated": false,
    "tools": {}
  },
  "minima-(local-rag)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/minima--local-rag.json"
  },
  "medium-accelerator": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/medium-accelerator.json"
  },
  "pytorch-documentation-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pytorch-documentation-search.json"
  },
  "mcp-tavily": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-tavily.json"
  },
  "academic-author-network": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/academic-author-network.json"
  },
  "mcp-server-reddit": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-reddit.json"
  },
  "space-frontiers-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/space-frontiers-search.json"
  },
  "mcp-simple-arxiv": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-simple-arxiv.json"
  },
  "better-fetch-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/better-fetch-mcp.json",
    "validated": true,
    "tools": {
      "fetch_website_nested": {
        "name": "fetch_website_nested",
        "description": "Fetch website content with nested URL crawling and convert to clean markdown"
      },
      "fetch_website_single": {
        "name": "fetch_website_single",
        "description": "Fetch content from a single webpage and convert to clean markdown"
      }
    }
  },
  "elastic-semantic-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/elastic-semantic-search.json"
  },
  "web-scraper-&-duckduckgo-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/web-scraper---duckduckgo-search.json"
  },
  "arxiv-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/arxiv-mcp-server.json"
  },
  "local-code-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/local-code-search.json"
  },
  "domain-tools-(whois-+-dns)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/domain-tools--whois---dns.json"
  },
  "duckduckgo-web-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/duckduckgo-web-search.json"
  },
  "@mcptools/mcp-tavily": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcptools-mcp-tavily.json",
    "validated": true,
    "tools": {
      "search": {
        "name": "search",
        "description": "Perform a basic web search using Tavily API. Returns search results including title, content and URL."
      },
      "searchContext": {
        "name": "searchContext",
        "description": "Perform a context-aware web search using Tavily API. Optimized for retrieving contextually relevant results."
      },
      "searchQNA": {
        "name": "searchQNA",
        "description": "Perform a question-answering search using Tavily API. Best suited for direct questions that need specific answers."
      },
      "extract": {
        "name": "extract",
        "description": "Extract and process content from a list of URLs using Tavily API. Can handle up to 20 URLs at once."
      }
    }
  },
  "vertex-ai-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/vertex-ai-search.json"
  },
  "ddg-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ddg-mcp.json"
  },
  "imdb": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/imdb.json"
  },
  "youtube-playlist-transcripts": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-playlist-transcripts.json"
  },
  "ddg-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ddg-mcp-server.json"
  },
  "bing-webmaster-tools": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/bing-webmaster-tools.json"
  },
  "perplexity": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/perplexity.json"
  },
  "pubmed": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pubmed.json"
  },
  "mcp-omnisearch": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-omnisearch.json",
    "validated": true,
    "tools": {
      "tavily_search": {
        "name": "tavily_search",
        "description": "Search the web using Tavily Search API. Best for factual queries requiring reliable sources and citations. Supports domain filtering through API parameters (include_domains/exclude_domains). Provides high-quality results for technical, scientific, and academic topics. Use when you need verified information with strong citation support."
      },
      "brave_search": {
        "name": "brave_search",
        "description": "Privacy-focused search engine with good coverage of technical topics. Features native support for search operators (site:, filetype:, intitle:, inurl:, before:, after:, and exact phrases). Best for technical documentation, developer resources, and privacy-sensitive queries."
      },
      "kagi_search": {
        "name": "kagi_search",
        "description": "High-quality search results with minimal advertising influence, focused on authoritative sources. Supports search operators in query string (site:, -site:, filetype:, intitle:, inurl:, before:, after:, and exact phrases). Features strong privacy protection and access to specialized knowledge indexes. Best for research, technical documentation, and finding high-quality content without SEO manipulation."
      },
      "perplexity_search": {
        "name": "perplexity_search",
        "description": "AI-powered response generation combining real-time web search with advanced language models. Best for complex queries requiring reasoning and synthesis across multiple sources. Features contextual memory for follow-up questions."
      },
      "kagi_fastgpt_search": {
        "name": "kagi_fastgpt_search",
        "description": "Quick AI-generated answers with citations, optimized for rapid response (900ms typical start time). Runs full search underneath for enriched answers."
      },
      "jina_reader_process": {
        "name": "jina_reader_process",
        "description": "Convert any URL to clean, LLM-friendly text using Jina Reader API"
      },
      "kagi_summarizer_process": {
        "name": "kagi_summarizer_process",
        "description": "Instantly summarizes content of any type and length from URLs. Supports pages, videos, and podcasts with transcripts. Best for quick comprehension of long-form content and multimedia resources."
      },
      "tavily_extract_process": {
        "name": "tavily_extract_process",
        "description": "Extract web page content from single or multiple URLs using Tavily Extract. Efficiently converts web content into clean, processable text with configurable extraction depth and optional image extraction. Returns both combined and individual URL content. Best for content analysis, data collection, and research."
      },
      "firecrawl_scrape_process": {
        "name": "firecrawl_scrape_process",
        "description": "Extract clean, LLM-ready data from single URLs with enhanced formatting options using Firecrawl. Efficiently converts web content into markdown, plain text, or structured data with configurable extraction options. Best for content analysis, data collection, and AI training data preparation."
      },
      "firecrawl_crawl_process": {
        "name": "firecrawl_crawl_process",
        "description": "Deep crawling of all accessible subpages on a website with configurable depth limits using Firecrawl. Efficiently discovers and extracts content from multiple pages within a domain. Best for comprehensive site analysis, content indexing, and data collection from entire websites."
      },
      "firecrawl_map_process": {
        "name": "firecrawl_map_process",
        "description": "Fast URL collection from websites for comprehensive site mapping using Firecrawl. Efficiently discovers all accessible URLs within a domain without extracting content. Best for site auditing, URL discovery, and preparing for targeted content extraction."
      },
      "firecrawl_extract_process": {
        "name": "firecrawl_extract_process",
        "description": "Structured data extraction with AI using natural language prompts via Firecrawl. Extracts specific information from web pages based on custom extraction instructions. Best for targeted data collection, information extraction, and converting unstructured web content into structured data."
      },
      "firecrawl_actions_process": {
        "name": "firecrawl_actions_process",
        "description": "Support for page interactions (clicking, scrolling, etc.) before extraction for dynamic content using Firecrawl. Enables extraction from JavaScript-heavy sites, single-page applications, and content behind user interactions. Best for accessing content that requires navigation, form filling, or other interactions."
      },
      "jina_grounding_enhance": {
        "name": "jina_grounding_enhance",
        "description": "Real-time fact verification against web knowledge. Reduces hallucinations and improves content integrity through statement verification."
      },
      "kagi_enrichment_enhance": {
        "name": "kagi_enrichment_enhance",
        "description": "Provides supplementary content from specialized indexes (Teclis for web, TinyGem for news). Ideal for discovering non-mainstream results and enriching content with specialized knowledge."
      }
    }
  },
  "youtube-semantic-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-semantic-search.json"
  },
  "context7": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/context7.json"
  },
  "search-engines-proxy": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/search-engines-proxy.json"
  },
  "cryo-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/cryo-mcp.json"
  },
  "twikit": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/twikit.json"
  },
  "agora-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/agora-mcp.json"
  },
  "newsnow-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/newsnow-mcp-server.json",
    "validated": true,
    "tools": {
      "get_hotest_latest_news": {
        "name": "get_hotest_latest_news",
        "description": "get hotest or latest news from source by {id}, return {count: 10} news."
      }
    }
  },
  "@hannesrudolph/mcp-ragdocs": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/hannesrudolph-mcp-ragdocs.json",
    "validated": false,
    "tools": {}
  },
  "search-analytics-(google-search-console-&-analytics-4)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/search-analytics--google-search-console---analytics-4.json"
  },
  "mcp-server-docy": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-docy.json"
  },
  "papersearch-(arxiv)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/papersearch--arxiv.json"
  },
  "youtube-transcript": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-transcript.json"
  },
  "perplexity-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/perplexity-mcp.json"
  },
  "mcp-private-github-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-private-github-search.json",
    "validated": true,
    "tools": {
      "getFileContents": {
        "name": "getFileContents",
        "description": "Get the contents of a specific file in the configured repository (MOCK/MOCK)."
      },
      "searchFiles": {
        "name": "searchFiles",
        "description": "Search for files within the configured repository (MOCK/MOCK)."
      },
      "searchIssues": {
        "name": "searchIssues",
        "description": "Search for issues within the configured repository (MOCK/MOCK)."
      },
      "getCommitHistory": {
        "name": "getCommitHistory",
        "description": "Get commit history for the configured repository (MOCK/MOCK) within the last X days, focusing on actual file changes and diffs."
      }
    }
  },
  "outscraper": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/outscraper.json"
  },
  "writer-blog-search-(substack-&-medium)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/writer-blog-search--substack---medium.json"
  },
  "scientific-paper-analyzer-(gemini)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/scientific-paper-analyzer--gemini.json"
  },
  "mcp-tavily-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-tavily-search.json",
    "validated": true,
    "tools": {
      "tavily_search": {
        "name": "tavily_search",
        "description": "Search the web using Tavily Search API, optimized for high-quality, factual results"
      },
      "tavily_get_search_context": {
        "name": "tavily_get_search_context",
        "description": "Generate context for RAG applications using Tavily search"
      },
      "tavily_qna_search": {
        "name": "tavily_qna_search",
        "description": "Get direct answers to questions using Tavily search"
      }
    }
  },
  "wordware-research": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/wordware-research.json"
  },
  "github-todo-scanner": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/github-todo-scanner.json"
  },
  "scholarly-(arxiv)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/scholarly--arxiv.json"
  },
  "jfk-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/jfk-mcp.json",
    "validated": true,
    "tools": {
      "jfk-text-search": {
        "name": "jfk-text-search",
        "description": "Perform a text search on JFK files using a query string and optional metadata filters. Should only use 1 word for the query, since it does an exact match. NARA release dates between 2017-2025"
      },
      "jfk-vector-search": {
        "name": "jfk-vector-search",
        "description": "Perform a vector search on JFK files using a query string and optional metadata filters (excluding comments). NARA release dates between 2017-2025"
      },
      "jfk-metadata-search": {
        "name": "jfk-metadata-search",
        "description": "Perform a metadata search on JFK files using detailed metadata filters. NARA release dates between 2017-2025"
      },
      "jfk-get-page-text": {
        "name": "jfk-get-page-text",
        "description": "Retrieve text content for specific pages of a JFK document"
      },
      "jfk-get-page-png": {
        "name": "jfk-get-page-png",
        "description": "Retrieve PNG images for specific pages of a JFK document"
      }
    }
  },
  "nih-reporter": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/nih-reporter.json"
  },
  "o'reilly-content-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/o-reilly-content-search.json"
  },
  "mcp-grep": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-grep.json"
  },
  "linkedin-data-api": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/linkedin-data-api.json"
  },
  "bing-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/bing-search.json"
  },
  "mcp-openapi": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-openapi.json"
  },
  "@search-intent/mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/search-intent-mcp.json",
    "validated": true,
    "tools": {
      "search_intent_analysis": {
        "name": "search_intent_analysis",
        "description": "A tool for analyzing search intent and user behavior.\n\nFeatures:\n- Analyze search query intent\n- Identify relevant topic categories\n- Provide search suggestions\n- Offer reference links\n\nExamples:\n\"iphone 15\" → Product research/purchase intent\n\"python tutorial\" → Learning intent\n\nResponse format:\n- query: Original search term\n- intent: Search intention\n- categories: Related categories\n- suggestions: Related search terms\n- references: Reference links"
      }
    }
  },
  "semantic-scholar": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/semantic-scholar.json"
  },
  "serpapi-google-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/serpapi-google-search.json"
  },
  "scrapeless-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/scrapeless-mcp-server.json",
    "validated": true,
    "tools": {
      "google-search": {
        "name": "google-search",
        "description": "Fetch Google Search Results"
      },
      "google-flights-search": {
        "name": "google-flights-search",
        "description": "Search for flights using Google Flights via Scrapeless API"
      }
    }
  },
  "dappier-(real-time-data-search)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/dappier--real-time-data-search.json"
  },
  "@tongxiao/common-search-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/tongxiao-common-search-mcp-server.json",
    "validated": true,
    "tools": {
      "common_search": {
        "name": "common_search",
        "description": "标准搜索接口提供增强的网络开放域的实时搜索能力，通过大模型优化与多数据源融合的技术，查询干净、准确、多样、高质量的结果。"
      }
    }
  },
  "mcp-perplexity-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-perplexity-search.json",
    "validated": true,
    "tools": {
      "chat_completion": {
        "name": "chat_completion",
        "description": "Generate chat completions using the Perplexity API"
      }
    }
  },
  "clinicaltrialsgov-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/clinicaltrialsgov-mcp-server.json",
    "validated": true,
    "tools": {
      "clinicaltrials_get_study": {
        "name": "clinicaltrials_get_study",
        "description": "Retrieves detailed information for a single clinical study by its NCT number."
      },
      "clinicaltrials_list_studies": {
        "name": "clinicaltrials_list_studies",
        "description": "Searches for clinical studies using a combination of query terms and filters. Supports pagination."
      }
    }
  },
  "mcp-jinaai-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-jinaai-search.json",
    "validated": true,
    "tools": {
      "search": {
        "name": "search",
        "description": "Search the web and get clean, LLM-friendly content using Jina.ai Reader. Returns top 5 results with URLs and clean content."
      }
    }
  },
  "hugging-face-hub-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/hugging-face-hub-search.json"
  },
  "web-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/web-search.json"
  },
  "document-processing-and-youtube-content-extraction": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/document-processing-and-youtube-content-extraction.json"
  },
  "google-custom-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/google-custom-search.json"
  },
  "web-search-and-semantic-similarity": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/web-search-and-semantic-similarity.json"
  },
  "nasa-cmr-(common-metadata-repository)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/nasa-cmr--common-metadata-repository.json"
  },
  "ai-agent-marketplace-index": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ai-agent-marketplace-index.json"
  },
  "websearch-tools": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/websearch-tools.json"
  },
  "goodnews": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/goodnews.json"
  },
  "@kazuph/mcp-pocket": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kazuph-mcp-pocket.json",
    "validated": true,
    "tools": {
      "pocket_get_articles": {
        "name": "pocket_get_articles",
        "description": "Fetches the latest unread articles from Pocket API. Returns up to 20 articles by default. You can specify the number of articles to fetch (1-20) using the count parameter. Returns the article ID, title, URL, and excerpt for each article."
      },
      "pocket_mark_as_read": {
        "name": "pocket_mark_as_read",
        "description": "Marks a specific Pocket article as read (archived) using its item ID."
      }
    }
  },
  "openai-websearch-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/openai-websearch-mcp.json"
  },
  "kv-extractor-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kv-extractor-mcp-server.json"
  },
  "youtube-transcripts": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-transcripts.json"
  },
  "reddit-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/reddit-mcp.json"
  },
  "domain-tools": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/domain-tools.json"
  },
  "baidu-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/baidu-mcp-server.json"
  },
  "box": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/box.json"
  },
  "rapidocr-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/rapidocr-mcp.json"
  },
  "jina-ai-web-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/jina-ai-web-search.json"
  },
  "openapi_mcp_server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/openapi_mcp_server.json"
  },
  "video-digest": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/video-digest.json"
  },
  "pdf-extraction": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pdf-extraction.json"
  },
  "arxiv": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/arxiv.json"
  },
  "duckduckgo-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/duckduckgo-mcp-server.json"
  },
  "perplexity-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/perplexity-search.json"
  },
  "jina-ai-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/jina-ai-mcp-server.json",
    "validated": true,
    "tools": {
      "read_webpage": {
        "name": "read_webpage",
        "description": "Extract content from a webpage in a format optimized for LLMs"
      },
      "search_web": {
        "name": "search_web",
        "description": "Search the web using Jina AI's search API"
      },
      "fact_check": {
        "name": "fact_check",
        "description": "Fact-check a statement using Jina AI's grounding engine"
      }
    }
  },
  "puremd-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/puremd-mcp.json",
    "validated": true,
    "tools": {
      "unblock-url": {
        "name": "unblock-url",
        "description": ""
      },
      "search-web": {
        "name": "search-web",
        "description": ""
      }
    }
  },
  "naver-openapi": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/naver-openapi.json"
  },
  "crawl4ai-web-crawler": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/crawl4ai-web-crawler.json"
  },
  "youtube-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-search.json"
  },
  "geeknews": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/geeknews.json"
  },
  "mcp-server-gsc": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-gsc.json",
    "validated": true,
    "tools": {
      "list_sites": {
        "name": "list_sites",
        "description": "List all sites in Google Search Console"
      },
      "search_analytics": {
        "name": "search_analytics",
        "description": "Get search performance data from Google Search Console"
      },
      "index_inspect": {
        "name": "index_inspect",
        "description": "Inspect a URL to see if it is indexed or can be indexed"
      },
      "list_sitemaps": {
        "name": "list_sitemaps",
        "description": "List sitemaps for a site in Google Search Console"
      },
      "get_sitemap": {
        "name": "get_sitemap",
        "description": "Get a sitemap for a site in Google Search Console"
      },
      "submit_sitemap": {
        "name": "submit_sitemap",
        "description": "Submit a sitemap for a site in Google Search Console"
      }
    }
  },
  "mcp-server-everything-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-everything-search.json"
  },
  "docs2prompt": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/docs2prompt.json"
  },
  "documentation-retrieval-(python-libraries)": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/documentation-retrieval--python-libraries.json"
  },
  "duckduckgo-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/duckduckgo-search.json"
  },
  "naver-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/naver-search.json"
  },
  "meilisearch": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/meilisearch.json"
  },
  "meilisearch-hybrid-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/meilisearch-hybrid-search.json"
  },
  "serper-search-scrape-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/serper-search-scrape-mcp-server.json",
    "validated": true,
    "tools": {
      "google_search": {
        "name": "google_search",
        "description": "Tool to perform web searches via Serper API and retrieve rich results. It is able to retrieve organic search results, people also ask, related searches, and knowledge graph."
      },
      "scrape": {
        "name": "scrape",
        "description": "Tool to scrape a webpage and retrieve the text and, optionally, the markdown content. It will retrieve also the JSON-LD metadata and the head metadata."
      }
    }
  },
  "deep-research": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/deep-research.json"
  },
  "gemini-deepsearch-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/gemini-deepsearch-mcp.json"
  },
  "youtube-transcript-downloader": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-transcript-downloader.json"
  },
  "reddit-extractor": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/reddit-extractor.json"
  },
  "quran-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/quran-search.json"
  },
  "hackernews-api": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/hackernews-api.json"
  },
  "fetchserp-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/fetchserp-mcp-server.json",
    "validated": true,
    "tools": {
      "get_backlinks": {
        "name": "get_backlinks",
        "description": "Get backlinks for a given domain"
      },
      "get_domain_emails": {
        "name": "get_domain_emails",
        "description": "Retrieve emails from a given domain"
      },
      "get_domain_info": {
        "name": "get_domain_info",
        "description": "Get domain info including DNS records, WHOIS data, SSL certificates, and technology stack"
      },
      "get_keywords_search_volume": {
        "name": "get_keywords_search_volume",
        "description": "Get search volume for given keywords"
      },
      "get_keywords_suggestions": {
        "name": "get_keywords_suggestions",
        "description": "Get keyword suggestions based on a url or a list of keywords"
      },
      "get_long_tail_keywords": {
        "name": "get_long_tail_keywords",
        "description": "Generate long-tail keywords for a given keyword"
      },
      "get_moz_analysis": {
        "name": "get_moz_analysis",
        "description": "Get Moz domain analysis data"
      },
      "check_page_indexation": {
        "name": "check_page_indexation",
        "description": "Check if a domain is indexed for a given keyword"
      },
      "get_domain_ranking": {
        "name": "get_domain_ranking",
        "description": "Get domain ranking for a given keyword"
      },
      "scrape_webpage": {
        "name": "scrape_webpage",
        "description": "Scrape a web page without JS"
      },
      "scrape_domain": {
        "name": "scrape_domain",
        "description": "Scrape a domain"
      },
      "scrape_webpage_js": {
        "name": "scrape_webpage_js",
        "description": "Scrape a web page with custom JS"
      },
      "scrape_webpage_js_proxy": {
        "name": "scrape_webpage_js_proxy",
        "description": "Scrape a web page with JS and proxy"
      },
      "get_serp_results": {
        "name": "get_serp_results",
        "description": "Get search engine results"
      },
      "get_serp_html": {
        "name": "get_serp_html",
        "description": "Get search engine results with HTML content"
      },
      "get_serp_ai_mode": {
        "name": "get_serp_ai_mode",
        "description": "Get SERP with AI Overview and AI Mode response. Returns AI overview and AI mode response for the query. Less reliable than the 2-step process but returns results in under 30 seconds."
      },
      "get_serp_text": {
        "name": "get_serp_text",
        "description": "Get search engine results with text content"
      },
      "get_user_info": {
        "name": "get_user_info",
        "description": "Get user information including API credit"
      },
      "get_webpage_ai_analysis": {
        "name": "get_webpage_ai_analysis",
        "description": "Analyze a web page with AI"
      },
      "get_webpage_seo_analysis": {
        "name": "get_webpage_seo_analysis",
        "description": "Get SEO analysis for a given url"
      }
    }
  },
  "pride-archive-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/pride-archive-search.json"
  },
  "tiktok-video-discovery": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/tiktok-video-discovery.json"
  },
  "@unifuncs/ufn-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/unifuncs-ufn-mcp-server.json",
    "validated": true,
    "tools": {
      "web-search": {
        "name": "web-search",
        "description": ""
      },
      "web-reader": {
        "name": "web-reader",
        "description": ""
      }
    }
  },
  "solr-vector-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/solr-vector-search.json"
  },
  "tavily-extract": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/tavily-extract.json"
  },
  "youtube-data-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/youtube-data-mcp-server.json",
    "validated": true,
    "tools": {
      "getVideoDetails": {
        "name": "getVideoDetails",
        "description": "Get detailed information about multiple YouTube videos. Returns comprehensive data including video metadata, statistics, and content details. Use this when you need complete information about specific videos."
      },
      "searchVideos": {
        "name": "searchVideos",
        "description": "Searches for videos based on a query string. Returns a list of videos matching the search criteria, including titles, descriptions, and metadata. Use this when you need to find videos related to specific topics or keywords."
      },
      "getTranscripts": {
        "name": "getTranscripts",
        "description": "Retrieves transcripts for multiple videos. Returns the text content of videos' captions, useful for accessibility and content analysis. Use this when you need the spoken content of multiple videos."
      },
      "getRelatedVideos": {
        "name": "getRelatedVideos",
        "description": "Retrieves related videos for a specific video. Returns a list of videos that are similar or related to the specified video, based on YouTube's recommendation algorithm. Use this when you want to discover content similar to a particular video."
      },
      "getChannelStatistics": {
        "name": "getChannelStatistics",
        "description": "Retrieves statistics for multiple channels. Returns detailed metrics including subscriber count, view count, and video count for each channel. Use this when you need to analyze the performance and reach of multiple YouTube channels."
      },
      "getChannelTopVideos": {
        "name": "getChannelTopVideos",
        "description": "Retrieves the top videos from a specific channel. Returns a list of the most viewed or popular videos from the channel, based on view count. Use this when you want to identify the most successful content from a channel."
      },
      "getVideoEngagementRatio": {
        "name": "getVideoEngagementRatio",
        "description": "Calculates the engagement ratio for multiple videos. Returns metrics such as view count, like count, comment count, and the calculated engagement ratio for each video. Use this when you want to measure the audience interaction with videos."
      },
      "getTrendingVideos": {
        "name": "getTrendingVideos",
        "description": "Retrieves trending videos based on region and category. Returns a list of videos that are currently popular in the specified region and category. Use this when you want to discover what's trending in specific areas or categories. Available category IDs: 1 (Film & Animation), 2 (Autos & Vehicles), 10 (Music), 15 (Pets & Animals), 17 (Sports), 18 (Short Movies), 19 (Travel & Events), 20 (Gaming), 21 (Videoblogging), 22 (People & Blogs), 23 (Comedy), 24 (Entertainment), 25 (News & Politics), 26 (Howto & Style), 27 (Education), 28 (Science & Technology), 29 (Nonprofits & Activism), 30 (Movies), 31 (Anime/Animation), 32 (Action/Adventure), 33 (Classics), 34 (Comedy), 35 (Documentary), 36 (Drama), 37 (Family), 38 (Foreign), 39 (Horror), 40 (Sci-Fi/Fantasy), 41 (Thriller), 42 (Shorts), 43 (Shows), 44 (Trailers)."
      },
      "compareVideos": {
        "name": "compareVideos",
        "description": "Compares multiple videos based on their statistics. Returns a comparison of view counts, like counts, comment counts, and other metrics for the specified videos. Use this when you want to analyze the performance of multiple videos side by side."
      }
    }
  },
  "mcp-package-version": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-package-version.json",
    "validated": true,
    "tools": {
      "check_npm_versions": {
        "name": "check_npm_versions",
        "description": "Check latest stable versions for npm packages"
      },
      "check_python_versions": {
        "name": "check_python_versions",
        "description": "Check latest stable versions for Python packages"
      },
      "check_pyproject_versions": {
        "name": "check_pyproject_versions",
        "description": "Check latest stable versions for Python packages in pyproject.toml"
      },
      "check_maven_versions": {
        "name": "check_maven_versions",
        "description": "Check latest stable versions for Java packages in pom.xml"
      },
      "check_gradle_versions": {
        "name": "check_gradle_versions",
        "description": "Check latest stable versions for Java packages in build.gradle"
      },
      "check_go_versions": {
        "name": "check_go_versions",
        "description": "Check latest stable versions for Go packages in go.mod"
      },
      "check_bedrock_models": {
        "name": "check_bedrock_models",
        "description": "Search, list, and get information about Amazon Bedrock models"
      },
      "get_latest_bedrock_model": {
        "name": "get_latest_bedrock_model",
        "description": "Get the latest Claude Sonnet model from Amazon Bedrock (best for coding tasks)"
      },
      "check_docker_tags": {
        "name": "check_docker_tags",
        "description": "Check available tags for Docker container images from Docker Hub, GitHub Container Registry, or custom registries"
      },
      "check_swift_versions": {
        "name": "check_swift_versions",
        "description": "Check latest stable versions for Swift packages in Package.swift"
      },
      "check_github_actions": {
        "name": "check_github_actions",
        "description": "Check latest versions for GitHub Actions"
      }
    }
  },
  "document-crawler-&-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/document-crawler---search.json"
  },
  "mcp-searxng": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-searxng.json"
  },
  "bilibili-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/bilibili-search.json"
  },
  "mcp-maigret": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-maigret.json",
    "validated": true,
    "tools": {
      "search_username": {
        "name": "search_username",
        "description": "Search for a username across social networks and sites"
      },
      "parse_url": {
        "name": "parse_url",
        "description": "Parse a URL to extract information and search for associated usernames"
      }
    }
  },
  "python-documentation-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/python-documentation-search.json"
  },
  "biorxiv": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/biorxiv.json"
  },
  "web3-career": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/web3-career.json"
  },
  "technical-documentation-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/technical-documentation-search.json"
  },
  "@kevinwatt/mcp-server-searxng": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kevinwatt-mcp-server-searxng.json",
    "validated": true,
    "tools": {
      "web_search": {
        "name": "web_search",
        "description": "Performs a web search using SearXNG, ideal for general queries, news, articles and online content. Supports multiple search categories, languages, time ranges and safe search filtering. Returns relevant results from multiple search engines combined."
      }
    }
  },
  "crawl4ai-rag": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/crawl4ai-rag.json"
  },
  "ollama-deep-researcher": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/ollama-deep-researcher.json"
  },
  "serper-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/serper-search.json"
  },
  "oci-registry": {
    "category": "security",
    "path": "security/oci-registry.json"
  },
  "osv.dev-security-analyzer": {
    "category": "security",
    "path": "security/osv-dev-security-analyzer.json"
  },
  "nuclei": {
    "category": "security",
    "path": "security/nuclei.json"
  },
  "chronicle-security-operations": {
    "category": "security",
    "path": "security/chronicle-security-operations.json"
  },
  "mitmproxy": {
    "category": "security",
    "path": "security/mitmproxy.json"
  },
  "virustotal": {
    "category": "security",
    "path": "security/virustotal.json"
  },
  "zeropath": {
    "category": "security",
    "path": "security/zeropath.json"
  },
  "vulnerability-intelligence": {
    "category": "security",
    "path": "security/vulnerability-intelligence.json"
  },
  "trivy-security-scanner": {
    "category": "security",
    "path": "security/trivy-security-scanner.json"
  },
  "microsoft-security-copilot": {
    "category": "security",
    "path": "security/microsoft-security-copilot.json"
  },
  "@burtthecoder/mcp-shodan": {
    "category": "security",
    "path": "security/burtthecoder-mcp-shodan.json",
    "validated": true,
    "tools": {
      "ip_lookup": {
        "name": "ip_lookup",
        "description": "Retrieve comprehensive information about an IP address, including geolocation, open ports, running services, SSL certificates, hostnames, and cloud provider details if available. Returns service banners and HTTP server information when present."
      },
      "shodan_search": {
        "name": "shodan_search",
        "description": "Search Shodan's database of internet-connected devices. Returns detailed information about matching devices including services, vulnerabilities, and geographic distribution. Supports advanced search filters and returns country-based statistics."
      },
      "cve_lookup": {
        "name": "cve_lookup",
        "description": "Query detailed vulnerability information from Shodan's CVEDB. Returns comprehensive CVE details including CVSS scores (v2/v3), EPSS probability and ranking, KEV status, proposed mitigations, ransomware associations, and affected products (CPEs)."
      },
      "dns_lookup": {
        "name": "dns_lookup",
        "description": "Resolve domain names to IP addresses using Shodan's DNS service. Supports batch resolution of multiple hostnames in a single query. Returns IP addresses mapped to their corresponding hostnames."
      },
      "cpe_lookup": {
        "name": "cpe_lookup",
        "description": "Search for Common Platform Enumeration (CPE) entries by product name in Shodan's CVEDB. Supports pagination and can return either full CPE details or just the total count. Useful for identifying specific versions and configurations of software and hardware."
      },
      "cves_by_product": {
        "name": "cves_by_product",
        "description": "Search for vulnerabilities affecting specific products or CPEs. Supports filtering by KEV status, sorting by EPSS score, date ranges, and pagination. Can search by product name or CPE 2.3 identifier. Returns detailed vulnerability information including severity scores and impact assessments."
      },
      "reverse_dns_lookup": {
        "name": "reverse_dns_lookup",
        "description": "Perform reverse DNS lookups to find hostnames associated with IP addresses. Supports batch lookups of multiple IP addresses in a single query. Returns all known hostnames for each IP address, with clear indication when no hostnames are found."
      }
    }
  },
  "netbird": {
    "category": "security",
    "path": "security/netbird.json"
  },
  "osv-database-api": {
    "category": "security",
    "path": "security/osv-database-api.json"
  },
  "openfga": {
    "category": "security",
    "path": "security/openfga.json"
  },
  "microsoft-entra-id": {
    "category": "security",
    "path": "security/microsoft-entra-id.json"
  },
  "mcp-nvd": {
    "category": "security",
    "path": "security/mcp-nvd.json"
  },
  "osint-toolkit": {
    "category": "security",
    "path": "security/osint-toolkit.json"
  },
  "wazuh": {
    "category": "security",
    "path": "security/wazuh.json"
  },
  "enkryptai": {
    "category": "security",
    "path": "security/enkryptai.json"
  },
  "apktool": {
    "category": "security",
    "path": "security/apktool.json"
  },
  "argus": {
    "category": "security",
    "path": "security/argus.json"
  },
  "@usegrant/mcp": {
    "category": "security",
    "path": "security/usegrant-mcp.json",
    "validated": true,
    "tools": {
      "list_providers": {
        "name": "list_providers",
        "description": "List all providers"
      },
      "create_provider": {
        "name": "create_provider",
        "description": "Create a new provider"
      },
      "get_provider": {
        "name": "get_provider",
        "description": "Get a provider by ID"
      },
      "delete_provider": {
        "name": "delete_provider",
        "description": "Delete a provider"
      },
      "list_clients": {
        "name": "list_clients",
        "description": "List all clients"
      },
      "create_client": {
        "name": "create_client",
        "description": "Create a new client for a provider"
      },
      "get_client": {
        "name": "get_client",
        "description": "Get client details by provider and client ID"
      },
      "delete_client": {
        "name": "delete_client",
        "description": "Delete a client from a provider"
      },
      "list_domains": {
        "name": "list_domains",
        "description": "List all domains for a provider"
      },
      "add_domain": {
        "name": "add_domain",
        "description": "Add a domain to a provider"
      },
      "get_domain": {
        "name": "get_domain",
        "description": "Get a domain by provider and domain ID"
      },
      "delete_domain": {
        "name": "delete_domain",
        "description": "Delete a domain from a provider"
      },
      "verify_domain": {
        "name": "verify_domain",
        "description": "Verify a domain for a provider"
      },
      "create_access_token": {
        "name": "create_access_token",
        "description": "Create a new access token for a client"
      },
      "list_tenants": {
        "name": "list_tenants",
        "description": "List all tenants"
      },
      "create_tenant": {
        "name": "create_tenant",
        "description": "Create a new tenant"
      },
      "get_tenant": {
        "name": "get_tenant",
        "description": "Get a tenant by ID"
      },
      "delete_tenant": {
        "name": "delete_tenant",
        "description": "Delete a tenant"
      },
      "list_tenant_providers": {
        "name": "list_tenant_providers",
        "description": "List all providers for a tenant"
      },
      "create_tenant_provider": {
        "name": "create_tenant_provider",
        "description": "Create a new provider for a tenant"
      },
      "get_tenant_provider": {
        "name": "get_tenant_provider",
        "description": "Get a provider for a tenant"
      },
      "delete_tenant_provider": {
        "name": "delete_tenant_provider",
        "description": "Delete a provider for a tenant"
      },
      "list_tenant_provider_policies": {
        "name": "list_tenant_provider_policies",
        "description": "List all policies for a tenant provider"
      },
      "create_tenant_provider_policy": {
        "name": "create_tenant_provider_policy",
        "description": "Create a new policy for a tenant provider"
      },
      "get_tenant_provider_policy": {
        "name": "get_tenant_provider_policy",
        "description": "Get a policy for a tenant provider"
      },
      "delete_tenant_provider_policy": {
        "name": "delete_tenant_provider_policy",
        "description": "Delete a policy for a tenant provider"
      }
    }
  },
  "joern-(code-analysis)": {
    "category": "security",
    "path": "security/joern--code-analysis.json"
  },
  "codeql": {
    "category": "security",
    "path": "security/codeql.json"
  },
  "wireshark": {
    "category": "security",
    "path": "security/wireshark.json"
  },
  "crypto": {
    "category": "security",
    "path": "security/crypto.json"
  },
  "kali-linux-security-tools": {
    "category": "security",
    "path": "security/kali-linux-security-tools.json"
  },
  "sd-elements": {
    "category": "security",
    "path": "security/sd-elements.json"
  },
  "metasploit-framework": {
    "category": "security",
    "path": "security/metasploit-framework.json"
  },
  "sbom-generator-(trivy)": {
    "category": "security",
    "path": "security/sbom-generator--trivy.json"
  },
  "nmap-network-scanner": {
    "category": "security",
    "path": "security/nmap-network-scanner.json"
  },
  "pinner": {
    "category": "security",
    "path": "security/pinner.json"
  },
  "defectdojo-mcp": {
    "category": "security",
    "path": "security/defectdojo-mcp.json"
  },
  "kali-security-tools": {
    "category": "security",
    "path": "security/kali-security-tools.json"
  },
  "@pangeacyber/mcp-server": {
    "category": "security",
    "path": "security/pangeacyber-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "keyfactor-command": {
    "category": "security",
    "path": "security/keyfactor-command.json"
  },
  "keycloak-mcp": {
    "category": "security",
    "path": "security/keycloak-mcp.json",
    "validated": true,
    "tools": {
      "create-user": {
        "name": "create-user",
        "description": "Create a new user in a specific realm"
      },
      "delete-user": {
        "name": "delete-user",
        "description": "Delete a user from a specific realm"
      },
      "list-realms": {
        "name": "list-realms",
        "description": "List all available realms"
      },
      "list-users": {
        "name": "list-users",
        "description": "List users in a specific realm"
      },
      "assign-client-role-to-user": {
        "name": "assign-client-role-to-user",
        "description": "Assign a client role to a user"
      },
      "add-user-to-group": {
        "name": "add-user-to-group",
        "description": "Add a user to a group"
      },
      "list-clients": {
        "name": "list-clients",
        "description": "List clients in a specific realm"
      },
      "list-groups": {
        "name": "list-groups",
        "description": "List groups in a specific realm"
      },
      "list-client-roles": {
        "name": "list-client-roles",
        "description": "List roles in a specific client"
      }
    }
  },
  "pfsense": {
    "category": "security",
    "path": "security/pfsense.json"
  },
  "isms": {
    "category": "security",
    "path": "security/isms.json"
  },
  "netwrix-access-analyzer": {
    "category": "security",
    "path": "security/netwrix-access-analyzer.json"
  },
  "devici": {
    "category": "security",
    "path": "security/devici.json"
  },
  "epss-(exploit-prediction-scoring-system)": {
    "category": "security",
    "path": "security/epss--exploit-prediction-scoring-system.json"
  },
  "zoomeye": {
    "category": "security",
    "path": "security/zoomeye.json"
  },
  "joe-sandbox-cloud": {
    "category": "security",
    "path": "security/joe-sandbox-cloud.json"
  },
  "windows-security-hardening": {
    "category": "security",
    "path": "security/windows-security-hardening.json"
  },
  "zeek": {
    "category": "security",
    "path": "security/zeek.json"
  },
  "offensive-security-toolkit": {
    "category": "security",
    "path": "security/offensive-security-toolkit.json"
  },
  "plexus": {
    "category": "security",
    "path": "security/plexus.json"
  },
  "pentest-tools": {
    "category": "security",
    "path": "security/pentest-tools.json"
  },
  "santa-binary-authorization": {
    "category": "security",
    "path": "security/santa-binary-authorization.json"
  },
  "keycloak-model-context-protocol": {
    "category": "security",
    "path": "security/keycloak-model-context-protocol.json",
    "validated": true,
    "tools": {
      "create-user": {
        "name": "create-user",
        "description": "Create a new user in a specific realm"
      },
      "delete-user": {
        "name": "delete-user",
        "description": "Delete a user from a specific realm"
      },
      "list-realms": {
        "name": "list-realms",
        "description": "List all available realms"
      },
      "list-users": {
        "name": "list-users",
        "description": "List users in a specific realm"
      }
    }
  },
  "semgrep": {
    "category": "security",
    "path": "security/semgrep.json"
  },
  "illumio": {
    "category": "security",
    "path": "security/illumio.json"
  },
  "yaraflux": {
    "category": "security",
    "path": "security/yaraflux.json"
  },
  "kali-linux-penetration-testing-tools": {
    "category": "security",
    "path": "security/kali-linux-penetration-testing-tools.json"
  },
  "headless-ida-pro": {
    "category": "security",
    "path": "security/headless-ida-pro.json"
  },
  "smcp-proxy-(oidc)": {
    "category": "security",
    "path": "security/smcp-proxy--oidc.json"
  },
  "triagemcp-(pe-file-analysis)": {
    "category": "security",
    "path": "security/triagemcp--pe-file-analysis.json"
  },
  "asn-lookup": {
    "category": "security",
    "path": "security/asn-lookup.json"
  },
  "cisco-ise": {
    "category": "security",
    "path": "security/cisco-ise.json"
  },
  "osv-vulnerability-database": {
    "category": "security",
    "path": "security/osv-vulnerability-database.json"
  },
  "clamav-virus-scanner": {
    "category": "security",
    "path": "security/clamav-virus-scanner.json"
  },
  "command-security-layer": {
    "category": "security",
    "path": "security/command-security-layer.json"
  },
  "lanalyzer": {
    "category": "security",
    "path": "security/lanalyzer.json"
  },
  "bloodhound": {
    "category": "security",
    "path": "security/bloodhound.json"
  },
  "aws-ireveal": {
    "category": "security",
    "path": "security/aws-ireveal.json"
  },
  "1password": {
    "category": "security",
    "path": "security/1password.json"
  },
  "querypie-database-access-control": {
    "category": "security",
    "path": "security/querypie-database-access-control.json"
  },
  "external-recon": {
    "category": "security",
    "path": "security/external-recon.json"
  },
  "myssl": {
    "category": "security",
    "path": "security/myssl.json"
  },
  "hydra-penetration-testing-toolkit": {
    "category": "security",
    "path": "security/hydra-penetration-testing-toolkit.json"
  },
  "@burtthecoder/mcp-virustotal": {
    "category": "security",
    "path": "security/burtthecoder-mcp-virustotal.json",
    "validated": true,
    "tools": {
      "get_url_report": {
        "name": "get_url_report",
        "description": "Get a comprehensive URL analysis report including security scan results and key relationships (communicating files, contacted domains/IPs, downloaded files, redirects, threat actors). Returns both the basic security analysis and automatically fetched relationship data."
      },
      "get_url_relationship": {
        "name": "get_url_relationship",
        "description": "Query a specific relationship type for a URL with pagination support. Choose from 17 relationship types including analyses, communicating files, contacted domains/IPs, downloaded files, graphs, referrers, redirects, and threat actors. Useful for detailed investigation of specific relationship types."
      },
      "get_file_report": {
        "name": "get_file_report",
        "description": "Get a comprehensive file analysis report using its hash (MD5/SHA-1/SHA-256). Includes detection results, file properties, and key relationships (behaviors, dropped files, network connections, embedded content, threat actors). Returns both the basic analysis and automatically fetched relationship data."
      },
      "get_file_relationship": {
        "name": "get_file_relationship",
        "description": "Query a specific relationship type for a file with pagination support. Choose from 41 relationship types including behaviors, network connections, dropped files, embedded content, execution chains, and threat actors. Useful for detailed investigation of specific relationship types."
      },
      "get_ip_report": {
        "name": "get_ip_report",
        "description": "Get a comprehensive IP address analysis report including geolocation, reputation data, and key relationships (communicating files, historical certificates/WHOIS, resolutions). Returns both the basic analysis and automatically fetched relationship data."
      },
      "get_ip_relationship": {
        "name": "get_ip_relationship",
        "description": "Query a specific relationship type for an IP address with pagination support. Choose from 12 relationship types including communicating files, historical SSL certificates, WHOIS records, resolutions, and threat actors. Useful for detailed investigation of specific relationship types."
      },
      "get_domain_report": {
        "name": "get_domain_report",
        "description": "Get a comprehensive domain analysis report including DNS records, WHOIS data, and key relationships (SSL certificates, subdomains, historical data). Optionally specify which relationships to include in the report. Returns both the basic analysis and relationship data."
      }
    }
  },
  "@binalyze/air-mcp": {
    "category": "security",
    "path": "security/binalyze-air-mcp.json",
    "validated": true,
    "tools": {
      "list_assets": {
        "name": "list_assets",
        "description": "List all assets in the system"
      },
      "get_asset_by_id": {
        "name": "get_asset_by_id",
        "description": "Get detailed information about a specific asset by its ID"
      },
      "get_asset_tasks_by_id": {
        "name": "get_asset_tasks_by_id",
        "description": "Get all tasks associated with a specific asset by its ID"
      },
      "list_acquisition_profiles": {
        "name": "list_acquisition_profiles",
        "description": "List all acquisition profiles in the system"
      },
      "assign_acquisition_task": {
        "name": "assign_acquisition_task",
        "description": "Assign an evidence acquisition task to specific endpoints"
      },
      "get_acquisition_profile_by_id": {
        "name": "get_acquisition_profile_by_id",
        "description": "Get details of a specific acquisition profile by its ID"
      },
      "assign_image_acquisition_task": {
        "name": "assign_image_acquisition_task",
        "description": "Assign a disk image acquisition task to specific endpoints and volumes"
      },
      "create_acquisition_profile": {
        "name": "create_acquisition_profile",
        "description": "Create a new acquisition profile"
      },
      "assign_reboot_task": {
        "name": "assign_reboot_task",
        "description": "Assign a reboot task to specific endpoints"
      },
      "assign_shutdown_task": {
        "name": "assign_shutdown_task",
        "description": "Assign a shutdown task to specific endpoints"
      },
      "assign_isolation_task": {
        "name": "assign_isolation_task",
        "description": "Assign an isolation task to specific endpoints"
      },
      "assign_log_retrieval_task": {
        "name": "assign_log_retrieval_task",
        "description": "Assign a log retrieval task to specific endpoints"
      },
      "assign_version_update_task": {
        "name": "assign_version_update_task",
        "description": "Assign a version update task to specific endpoints"
      },
      "list_organizations": {
        "name": "list_organizations",
        "description": "List all organizations in the system"
      },
      "list_cases": {
        "name": "list_cases",
        "description": "List all cases in the system"
      },
      "list_policies": {
        "name": "list_policies",
        "description": "List all policies in the system"
      },
      "list_tasks": {
        "name": "list_tasks",
        "description": "List all tasks in the system"
      },
      "list_triage_rules": {
        "name": "list_triage_rules",
        "description": "List all triage rules in the system"
      },
      "list_users": {
        "name": "list_users",
        "description": "List all users in the system"
      },
      "list_drone_analyzers": {
        "name": "list_drone_analyzers",
        "description": "List all drone analyzers in the system"
      },
      "export_audit_logs": {
        "name": "export_audit_logs",
        "description": "Initiate an export of audit logs from the AIR system"
      },
      "list_audit_logs": {
        "name": "list_audit_logs",
        "description": "List audit logs from the AIR system"
      },
      "uninstall_assets": {
        "name": "uninstall_assets",
        "description": "Uninstall specific assets based on filters without purging data. Requires specifying `filter.includedEndpointIds`."
      },
      "purge_and_uninstall_assets": {
        "name": "purge_and_uninstall_assets",
        "description": "Purge data and uninstall specific assets based on filters. Requires specifying `filter.includedEndpointIds`."
      },
      "add_tags_to_assets": {
        "name": "add_tags_to_assets",
        "description": "Add tags to specific assets based on filters. Requires specifying `filter.includedEndpointIds` and `tags`."
      },
      "remove_tags_from_assets": {
        "name": "remove_tags_from_assets",
        "description": "Remove tags from specific assets based on filters. Requires specifying `filter.includedEndpointIds` and `tags`."
      },
      "create_auto_asset_tag": {
        "name": "create_auto_asset_tag",
        "description": "Create a new rule to automatically tag assets based on specified conditions for Linux, Windows, and macOS."
      },
      "update_auto_asset_tag": {
        "name": "update_auto_asset_tag",
        "description": "Update an existing auto asset tag rule."
      },
      "get_auto_asset_tag_by_id": {
        "name": "get_auto_asset_tag_by_id",
        "description": "Get details of a specific auto asset tag rule by its ID"
      },
      "delete_auto_asset_tag_by_id": {
        "name": "delete_auto_asset_tag_by_id",
        "description": "Delete a specific auto asset tag rule by its ID"
      },
      "list_auto_asset_tags": {
        "name": "list_auto_asset_tags",
        "description": "List all auto asset tag rules in the system."
      },
      "start_tagging": {
        "name": "start_tagging",
        "description": "Start the auto asset tagging process for assets matching filter criteria."
      },
      "acquire_baseline": {
        "name": "acquire_baseline",
        "description": "Assign a baseline acquisition task to specific endpoints"
      },
      "compare_baseline": {
        "name": "compare_baseline",
        "description": "Compare baseline acquisition tasks for a specific endpoint"
      },
      "get_comparison_report": {
        "name": "get_comparison_report",
        "description": "Get comparison result report for a specific endpoint and task"
      },
      "list_acquisition_artifacts": {
        "name": "list_acquisition_artifacts",
        "description": "List all acquisition artifacts available for evidence collection"
      },
      "list_e_discovery_patterns": {
        "name": "list_e_discovery_patterns",
        "description": "List all e-discovery patterns for file type detection"
      },
      "create_policy": {
        "name": "create_policy",
        "description": "Create a new policy with specific storage and compression settings"
      },
      "update_policy": {
        "name": "update_policy",
        "description": "Update an existing policy with specific storage and filter settings"
      },
      "get_policy_by_id": {
        "name": "get_policy_by_id",
        "description": "Get detailed information about a specific policy by its ID"
      },
      "update_policy_priorities": {
        "name": "update_policy_priorities",
        "description": "Update the priority order of policies"
      },
      "get_policy_match_stats": {
        "name": "get_policy_match_stats",
        "description": "Get statistics on how many endpoints match each policy based on filter criteria"
      },
      "delete_policy_by_id": {
        "name": "delete_policy_by_id",
        "description": "Delete a specific policy by its ID"
      },
      "get_task_assignments_by_id": {
        "name": "get_task_assignments_by_id",
        "description": "Get all assignments associated with a specific task by its ID"
      },
      "cancel_task_assignment": {
        "name": "cancel_task_assignment",
        "description": "Cancel a task assignment by its ID"
      },
      "delete_task_assignment": {
        "name": "delete_task_assignment",
        "description": "Delete a specific task assignment by its ID"
      },
      "get_task_by_id": {
        "name": "get_task_by_id",
        "description": "Get detailed information about a specific task by its ID"
      },
      "cancel_task_by_id": {
        "name": "cancel_task_by_id",
        "description": "Cancel a specific task by its ID"
      },
      "delete_task_by_id": {
        "name": "delete_task_by_id",
        "description": "Delete a specific task by its ID"
      },
      "list_triage_tags": {
        "name": "list_triage_tags",
        "description": "List all triage rule tags in the system"
      },
      "create_triage_tag": {
        "name": "create_triage_tag",
        "description": "Create a new triage rule tag"
      },
      "create_triage_rule": {
        "name": "create_triage_rule",
        "description": "Create a new triage rule"
      },
      "update_triage_rule": {
        "name": "update_triage_rule",
        "description": "Update an existing triage rule by ID"
      },
      "delete_triage_rule": {
        "name": "delete_triage_rule",
        "description": "Delete an existing triage rule by ID"
      },
      "get_triage_rule_by_id": {
        "name": "get_triage_rule_by_id",
        "description": "Get a specific triage rule by its ID"
      },
      "validate_triage_rule": {
        "name": "validate_triage_rule",
        "description": "Validate a triage rule syntax without creating it"
      },
      "assign_triage_task": {
        "name": "assign_triage_task",
        "description": "Assign a triage task to endpoints based on filter criteria"
      },
      "add_note_to_case": {
        "name": "add_note_to_case",
        "description": "Add a note to a specific case by its ID"
      },
      "update_note_in_case": {
        "name": "update_note_in_case",
        "description": "Update an existing note in a specific case"
      },
      "delete_note_from_case": {
        "name": "delete_note_from_case",
        "description": "Delete a note from a case by its ID"
      },
      "export_cases": {
        "name": "export_cases",
        "description": "Export cases data from the system"
      },
      "export_case_notes": {
        "name": "export_case_notes",
        "description": "Export notes for a specific case by its ID"
      },
      "export_case_endpoints": {
        "name": "export_case_endpoints",
        "description": "Export endpoints for a specific case by its ID"
      },
      "export_case_activities": {
        "name": "export_case_activities",
        "description": "Export activities for a specific case by its ID"
      },
      "create_case": {
        "name": "create_case",
        "description": "Create a new case in the system"
      },
      "update_case": {
        "name": "update_case",
        "description": "Update an existing case by ID"
      },
      "get_case_by_id": {
        "name": "get_case_by_id",
        "description": "Get detailed information about a specific case by its ID"
      },
      "close_case_by_id": {
        "name": "close_case_by_id",
        "description": "Close a case by its ID"
      },
      "open_case_by_id": {
        "name": "open_case_by_id",
        "description": "Open a previously closed case by its ID"
      },
      "archive_case_by_id": {
        "name": "archive_case_by_id",
        "description": "Archive a case by its ID"
      },
      "change_case_owner": {
        "name": "change_case_owner",
        "description": "Change the owner of a case"
      },
      "check_case_name": {
        "name": "check_case_name",
        "description": "Check if a case name is already in use"
      },
      "get_case_activities": {
        "name": "get_case_activities",
        "description": "Get activity history for a specific case by its ID"
      },
      "get_case_endpoints": {
        "name": "get_case_endpoints",
        "description": "Get all endpoints associated with a specific case by its ID"
      },
      "get_case_tasks_by_id": {
        "name": "get_case_tasks_by_id",
        "description": "Get all tasks associated with a specific case by its ID"
      },
      "get_case_users": {
        "name": "get_case_users",
        "description": "Get all users associated with a specific case by its ID"
      },
      "remove_endpoints_from_case": {
        "name": "remove_endpoints_from_case",
        "description": "Remove endpoints from a case based on specified filters"
      },
      "remove_task_assignment_from_case": {
        "name": "remove_task_assignment_from_case",
        "description": "Remove a specific task assignment from a case"
      },
      "import_task_assignments_to_case": {
        "name": "import_task_assignments_to_case",
        "description": "Import task assignments to a specific case"
      },
      "list_repositories": {
        "name": "list_repositories",
        "description": "List all evidence repositories in the system"
      },
      "get_repository_by_id": {
        "name": "get_repository_by_id",
        "description": "Get detailed information about a specific evidence repository by its ID"
      },
      "create_smb_repository": {
        "name": "create_smb_repository",
        "description": "Create a new SMB evidence repository"
      },
      "update_smb_repository": {
        "name": "update_smb_repository",
        "description": "Update an existing SMB repository by ID"
      },
      "create_sftp_repository": {
        "name": "create_sftp_repository",
        "description": "Create a new SFTP evidence repository"
      },
      "update_sftp_repository": {
        "name": "update_sftp_repository",
        "description": "Update an existing SFTP repository"
      },
      "create_ftps_repository": {
        "name": "create_ftps_repository",
        "description": "Create a new FTPS evidence repository"
      },
      "update_ftps_repository": {
        "name": "update_ftps_repository",
        "description": "Update an existing FTPS evidence repository"
      },
      "validate_ftps_repository": {
        "name": "validate_ftps_repository",
        "description": "Validate FTPS repository configuration without creating it"
      },
      "create_azure_storage_repository": {
        "name": "create_azure_storage_repository",
        "description": "Create a new Azure Storage repository"
      },
      "update_azure_storage_repository": {
        "name": "update_azure_storage_repository",
        "description": "Update an existing Azure Storage repository"
      },
      "validate_azure_storage_repository": {
        "name": "validate_azure_storage_repository",
        "description": "Validate an Azure Storage repository configuration"
      },
      "create_amazon_s3_repository": {
        "name": "create_amazon_s3_repository",
        "description": "Create a new Amazon S3 repository for evidence storage"
      },
      "update_amazon_s3_repository": {
        "name": "update_amazon_s3_repository",
        "description": "Update an existing Amazon S3 repository"
      },
      "validate_amazon_s3_repository": {
        "name": "validate_amazon_s3_repository",
        "description": "Validate Amazon S3 repository configuration"
      },
      "delete_repository": {
        "name": "delete_repository",
        "description": "Delete an evidence repository by its ID"
      },
      "download_case_ppc": {
        "name": "download_case_ppc",
        "description": "Download a PPC file for a specific endpoint and task"
      },
      "download_task_report": {
        "name": "download_task_report",
        "description": "Download a task report for a specific endpoint and task"
      },
      "get_report_file_info": {
        "name": "get_report_file_info",
        "description": "Get information about a PPC file for a specific endpoint and task"
      },
      "get_organization_users": {
        "name": "get_organization_users",
        "description": "Get users for a specific organization by its ID"
      },
      "assign_users_to_organization": {
        "name": "assign_users_to_organization",
        "description": "Assign users to a specific organization"
      },
      "remove_user_from_organization": {
        "name": "remove_user_from_organization",
        "description": "Remove a user from an organization"
      },
      "create_organization": {
        "name": "create_organization",
        "description": "Create a new organization"
      },
      "update_organization_by_id": {
        "name": "update_organization_by_id",
        "description": "Update an existing organization by ID"
      },
      "get_organization_by_id": {
        "name": "get_organization_by_id",
        "description": "Get detailed information about a specific organization by its ID"
      },
      "check_organization_name_exists": {
        "name": "check_organization_name_exists",
        "description": "Check if an organization name already exists in the system"
      },
      "get_shareable_deployment_info": {
        "name": "get_shareable_deployment_info",
        "description": "Get shareable deployment information using a deployment token"
      },
      "update_organization_shareable_deployment": {
        "name": "update_organization_shareable_deployment",
        "description": "Update an organization's shareable deployment settings"
      },
      "update_organization_deployment_token": {
        "name": "update_organization_deployment_token",
        "description": "Update the deployment token for a specific organization"
      },
      "delete_organization": {
        "name": "delete_organization",
        "description": "Delete an organization by its ID"
      },
      "add_tags_to_organization": {
        "name": "add_tags_to_organization",
        "description": "Add tags to an organization"
      },
      "delete_tags_from_organization": {
        "name": "delete_tags_from_organization",
        "description": "Delete specific tags from an organization"
      },
      "get_user_by_id": {
        "name": "get_user_by_id",
        "description": "Get detailed information about a specific user by their ID"
      },
      "call_webhook": {
        "name": "call_webhook",
        "description": "Call a webhook with the specified parameters"
      },
      "post_webhook": {
        "name": "post_webhook",
        "description": "Post data to a webhook"
      },
      "get_task_assignments": {
        "name": "get_task_assignments",
        "description": "Get all assignments for a specific task by its ID"
      },
      "update_banner_message": {
        "name": "update_banner_message",
        "description": "Update the system banner message settings"
      }
    }
  },
  "memprocfs": {
    "category": "security",
    "path": "security/memprocfs.json"
  },
  "mcp-panther": {
    "category": "security",
    "path": "security/mcp-panther.json"
  },
  "viso-trust": {
    "category": "security",
    "path": "security/viso-trust.json"
  },
  "mythic": {
    "category": "security",
    "path": "security/mythic.json"
  },
  "aws-security-inspector": {
    "category": "security",
    "path": "security/aws-security-inspector.json"
  },
  "cve-search": {
    "category": "security",
    "path": "security/cve-search.json"
  },
  "volatility-3-memory-forensics": {
    "category": "security",
    "path": "security/volatility-3-memory-forensics.json"
  },
  "xss-vulnerability-tester": {
    "category": "security",
    "path": "security/xss-vulnerability-tester.json"
  },
  "nmap-scanner": {
    "category": "security",
    "path": "security/nmap-scanner.json"
  },
  "malloryai-intelligence": {
    "category": "security",
    "path": "security/malloryai-intelligence.json"
  },
  "roadrecon-analyzer": {
    "category": "security",
    "path": "security/roadrecon-analyzer.json"
  },
  "baidu-content-safety": {
    "category": "security",
    "path": "security/baidu-content-safety.json"
  },
  "nvd-(national-vulnerability-database)": {
    "category": "security",
    "path": "security/nvd--national-vulnerability-database.json"
  },
  "microsoft-sentinel": {
    "category": "security",
    "path": "security/microsoft-sentinel.json"
  },
  "phalcon-(blocksec-transaction-analysis)": {
    "category": "security",
    "path": "security/phalcon--blocksec-transaction-analysis.json"
  },
  "nhl": {
    "category": "sports",
    "path": "sports/nhl.json"
  },
  "college-football-data": {
    "category": "sports",
    "path": "sports/college-football-data.json"
  },
  "chess.com-api": {
    "category": "sports",
    "path": "sports/chess-com-api.json"
  },
  "firstcycling": {
    "category": "sports",
    "path": "sports/firstcycling.json"
  },
  "fpl-mcp": {
    "category": "sports",
    "path": "sports/fpl-mcp.json"
  },
  "spurs-blog-(pounding-the-rock)": {
    "category": "sports",
    "path": "sports/spurs-blog--pounding-the-rock.json"
  },
  "nba-stats": {
    "category": "sports",
    "path": "sports/nba-stats.json"
  },
  "api-football": {
    "category": "sports",
    "path": "sports/api-football.json"
  },
  "strava": {
    "category": "sports",
    "path": "sports/strava.json"
  },
  "surf-(stormglass)": {
    "category": "sports",
    "path": "sports/surf--stormglass.json"
  },
  "the-odds-api": {
    "category": "sports",
    "path": "sports/the-odds-api.json"
  },
  "nba-player-stats": {
    "category": "sports",
    "path": "sports/nba-player-stats.json"
  },
  "atlassian-sprint": {
    "category": "support-service-management",
    "path": "support-service-management/atlassian-sprint.json"
  },
  "servicenow": {
    "category": "support-service-management",
    "path": "support-service-management/servicenow.json"
  },
  "@makeplane/plane-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/makeplane-plane-mcp-server.json",
    "validated": true,
    "tools": {
      "list_issue_types": {
        "name": "list_issue_types",
        "description": "Get all issue types for a specific project"
      },
      "get_issue_type": {
        "name": "get_issue_type",
        "description": "Get details of a specific issue type"
      },
      "create_issue_type": {
        "name": "create_issue_type",
        "description": "Create a new issue type in a project"
      },
      "update_issue_type": {
        "name": "update_issue_type",
        "description": "Update an existing issue type"
      },
      "delete_issue_type": {
        "name": "delete_issue_type",
        "description": "Delete an issue type"
      },
      "list_states": {
        "name": "list_states",
        "description": "Get all states for a specific project"
      },
      "get_state": {
        "name": "get_state",
        "description": "Get details of a specific state"
      },
      "create_state": {
        "name": "create_state",
        "description": "Create a new state in a project"
      },
      "update_state": {
        "name": "update_state",
        "description": "Update an existing state"
      },
      "delete_state": {
        "name": "delete_state",
        "description": "Delete a state"
      },
      "list_labels": {
        "name": "list_labels",
        "description": "Get all labels for a specific project"
      },
      "get_label": {
        "name": "get_label",
        "description": "Get details of a specific label"
      },
      "create_label": {
        "name": "create_label",
        "description": "Create a new label in a project"
      },
      "update_label": {
        "name": "update_label",
        "description": "Update an existing label"
      },
      "delete_label": {
        "name": "delete_label",
        "description": "Delete a label"
      },
      "get_user": {
        "name": "get_user",
        "description": "Get the current user's information"
      },
      "get_workspace_members": {
        "name": "get_workspace_members",
        "description": "Get all members in the current workspace"
      },
      "get_projects": {
        "name": "get_projects",
        "description": "Get all projects for the current user"
      },
      "create_project": {
        "name": "create_project",
        "description": "Create a new project"
      },
      "list_modules": {
        "name": "list_modules",
        "description": "Get all modules for a specific project"
      },
      "get_module": {
        "name": "get_module",
        "description": "Get details of a specific module"
      },
      "create_module": {
        "name": "create_module",
        "description": "Create a new module in a project"
      },
      "update_module": {
        "name": "update_module",
        "description": "Update an existing module"
      },
      "delete_module": {
        "name": "delete_module",
        "description": "Delete a module"
      },
      "list_module_issues": {
        "name": "list_module_issues",
        "description": "Get all issues for a specific module"
      },
      "add_module_issues": {
        "name": "add_module_issues",
        "description": "Add issues to a module. Assign module to issues."
      },
      "delete_module_issue": {
        "name": "delete_module_issue",
        "description": "Remove an issue from a module. Unassign module from issue."
      },
      "get_issue_using_readable_identifier": {
        "name": "get_issue_using_readable_identifier",
        "description": "Get all issues for a specific project. When issue identifier is provided something like FIRST-123, ABC-123, etc. For FIRST-123, project_identifier is FIRST and issue_identifier is 123"
      },
      "get_issue_comments": {
        "name": "get_issue_comments",
        "description": "Get all comments for a specific issue. This requests project_id and issue_id as uuid parameters. If you have a readable identifier, you can use the get_issue_using_readable_identifier tool to get the issue_id and project_id"
      },
      "add_issue_comment": {
        "name": "add_issue_comment",
        "description": "Add a comment to a specific issue. This requests project_id and issue_id as uuid parameters. If you have a readable identifier, you can use the get_issue_using_readable_identifier tool to get the issue_id and project_id"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create an issue. This requests project_id as uuid parameter. If you have a readable identifier for project, you can use the get_projects tool to get the project_id from it"
      },
      "update_issue": {
        "name": "update_issue",
        "description": "Update an issue. This requests project_id and issue_id as uuid parameters. If you have a readable identifier, you can use the get_issue_using_readable_identifier tool to get the issue_id and project_id"
      },
      "list_cycles": {
        "name": "list_cycles",
        "description": "Get all cycles for a specific project"
      },
      "get_cycle": {
        "name": "get_cycle",
        "description": "Get details of a specific cycle"
      },
      "create_cycle": {
        "name": "create_cycle",
        "description": "Create a new cycle in a project"
      },
      "update_cycle": {
        "name": "update_cycle",
        "description": "Update an existing cycle"
      },
      "delete_cycle": {
        "name": "delete_cycle",
        "description": "Delete a cycle"
      },
      "transfer_cycle_issues": {
        "name": "transfer_cycle_issues",
        "description": "Transfer issues from one cycle to another"
      },
      "list_cycle_issues": {
        "name": "list_cycle_issues",
        "description": "Get all issues for a specific cycle"
      },
      "add_cycle_issues": {
        "name": "add_cycle_issues",
        "description": "Add issues to a cycle"
      },
      "delete_cycle_issue": {
        "name": "delete_cycle_issue",
        "description": "Remove an issue from a cycle"
      },
      "get_issue_worklogs": {
        "name": "get_issue_worklogs",
        "description": "Get all worklogs for a specific issue"
      },
      "get_total_worklogs": {
        "name": "get_total_worklogs",
        "description": "Get total logged time for a project"
      },
      "create_worklog": {
        "name": "create_worklog",
        "description": "Create a new worklog for an issue"
      },
      "update_worklog": {
        "name": "update_worklog",
        "description": "Update an existing worklog"
      },
      "delete_worklog": {
        "name": "delete_worklog",
        "description": "Delete a worklog"
      }
    }
  },
  "smart-customer-support": {
    "category": "support-service-management",
    "path": "support-service-management/smart-customer-support.json"
  },
  "shortcut": {
    "category": "support-service-management",
    "path": "support-service-management/shortcut.json"
  },
  "mcp-atlassian": {
    "category": "support-service-management",
    "path": "support-service-management/mcp-atlassian.json"
  },
  "jira": {
    "category": "support-service-management",
    "path": "support-service-management/jira.json"
  },
  "jira-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/jira-mcp.json",
    "validated": true,
    "tools": {
      "jql_search": {
        "name": "jql_search",
        "description": "Perform enhanced JQL search in Jira"
      },
      "get_issue": {
        "name": "get_issue",
        "description": "Retrieve details about an issue by its ID or key."
      }
    }
  },
  "feishu-project-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/feishu-project-mcp.json",
    "validated": false,
    "tools": {}
  },
  "clickup": {
    "category": "support-service-management",
    "path": "support-service-management/clickup.json"
  },
  "teamretro-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/teamretro-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "hh-jira-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/hh-jira-mcp-server.json"
  },
  "@shortcut/mcp": {
    "category": "support-service-management",
    "path": "support-service-management/shortcut-mcp.json",
    "validated": true,
    "tools": {
      "get-current-user": {
        "name": "get-current-user",
        "description": "Get the current user"
      },
      "list-members": {
        "name": "list-members",
        "description": "Get all members"
      },
      "get-story-branch-name": {
        "name": "get-story-branch-name",
        "description": "Get a valid branch name for a specific story."
      },
      "get-story": {
        "name": "get-story",
        "description": "Get a Shortcut story by public ID"
      },
      "search-stories": {
        "name": "search-stories",
        "description": "Find Shortcut stories."
      },
      "create-story": {
        "name": "create-story",
        "description": "Create a new Shortcut story. \nName is required, and either a Team or Workflow must be specified:\n- If only Team is specified, we will use the default workflow for that team.\n- If Workflow is specified, it will be used regardless of Team.\nThe story will be added to the default state for the workflow.\n"
      },
      "update-story": {
        "name": "update-story",
        "description": "Update an existing Shortcut story. Only provide fields you want to update. The story public ID will always be included in updates."
      },
      "assign-current-user-as-owner": {
        "name": "assign-current-user-as-owner",
        "description": "Assign the current user as the owner of a story"
      },
      "unassign-current-user-as-owner": {
        "name": "unassign-current-user-as-owner",
        "description": "Unassign the current user as the owner of a story"
      },
      "create-story-comment": {
        "name": "create-story-comment",
        "description": "Create a comment on a story"
      },
      "add-task-to-story": {
        "name": "add-task-to-story",
        "description": "Add a task to a story"
      },
      "add-relation-to-story": {
        "name": "add-relation-to-story",
        "description": "Add a story relationship to a story"
      },
      "update-task": {
        "name": "update-task",
        "description": "Update a task in a story"
      },
      "add-external-link-to-story": {
        "name": "add-external-link-to-story",
        "description": "Add an external link to a Shortcut story"
      },
      "remove-external-link-from-story": {
        "name": "remove-external-link-from-story",
        "description": "Remove an external link from a Shortcut story"
      },
      "get-stories-by-external-link": {
        "name": "get-stories-by-external-link",
        "description": "Find all stories that contain a specific external link"
      },
      "set-story-external-links": {
        "name": "set-story-external-links",
        "description": "Replace all external links on a story with a new set of links"
      },
      "get-iteration-stories": {
        "name": "get-iteration-stories",
        "description": "Get stories in a specific iteration by iteration public ID"
      },
      "get-iteration": {
        "name": "get-iteration",
        "description": "Get a Shortcut iteration by public ID"
      },
      "search-iterations": {
        "name": "search-iterations",
        "description": "Find Shortcut iterations."
      },
      "create-iteration": {
        "name": "create-iteration",
        "description": "Create a new Shortcut iteration"
      },
      "get-active-iterations": {
        "name": "get-active-iterations",
        "description": "Get the active Shortcut iterations for the current user based on their team memberships"
      },
      "get-upcoming-iterations": {
        "name": "get-upcoming-iterations",
        "description": "Get the upcoming Shortcut iterations for the current user based on their team memberships"
      },
      "get-epic": {
        "name": "get-epic",
        "description": "Get a Shortcut epic by public ID"
      },
      "search-epics": {
        "name": "search-epics",
        "description": "Find Shortcut epics."
      },
      "create-epic": {
        "name": "create-epic",
        "description": "Create a new Shortcut epic."
      },
      "get-objective": {
        "name": "get-objective",
        "description": "Get a Shortcut objective by public ID"
      },
      "search-objectives": {
        "name": "search-objectives",
        "description": "Find Shortcut objectives."
      },
      "get-team": {
        "name": "get-team",
        "description": "Get a Shortcut team by public ID"
      },
      "list-teams": {
        "name": "list-teams",
        "description": "List all Shortcut teams"
      },
      "get-workflow": {
        "name": "get-workflow",
        "description": "Get a Shortcut workflow by public ID"
      },
      "list-workflows": {
        "name": "list-workflows",
        "description": "List all Shortcut workflows"
      }
    }
  },
  "mcp-server-linearapp": {
    "category": "support-service-management",
    "path": "support-service-management/mcp-server-linearapp.json",
    "validated": true,
    "tools": {
      "linear_create_issue": {
        "name": "linear_create_issue",
        "description": "Create a new Linear issue"
      },
      "linear_update_issue": {
        "name": "linear_update_issue",
        "description": "Update an existing Linear issue"
      },
      "linear_search_issues": {
        "name": "linear_search_issues",
        "description": "Search issues in Linear with flexible filtering"
      },
      "linear_get_user_issues": {
        "name": "linear_get_user_issues",
        "description": "Get issues assigned to a user"
      },
      "linear_add_comment": {
        "name": "linear_add_comment",
        "description": "Add a comment to a Linear issue"
      },
      "linear_get_teams": {
        "name": "linear_get_teams",
        "description": "Get teams in the organization"
      },
      "linear_get_projects": {
        "name": "linear_get_projects",
        "description": "Get projects in the organization"
      },
      "linear_get_project_issues": {
        "name": "linear_get_project_issues",
        "description": "Get issues for a specific project"
      },
      "linear_get_team_issues": {
        "name": "linear_get_team_issues",
        "description": "Get issues for a specific team"
      },
      "linear_get_viewer": {
        "name": "linear_get_viewer",
        "description": "Get information about the authenticated user"
      },
      "linear_get_project": {
        "name": "linear_get_project",
        "description": "Get details about a specific project"
      },
      "linear_get_team": {
        "name": "linear_get_team",
        "description": "Get details about a specific team"
      },
      "linear_get_labels": {
        "name": "linear_get_labels",
        "description": "Get labels from Linear, optionally filtered by team"
      },
      "linear_create_label": {
        "name": "linear_create_label",
        "description": "Create a new label in Linear"
      },
      "linear_update_label": {
        "name": "linear_update_label",
        "description": "Update an existing label in Linear"
      },
      "linear_add_attachment": {
        "name": "linear_add_attachment",
        "description": "Add an attachment to an issue in Linear"
      },
      "linear_get_attachments": {
        "name": "linear_get_attachments",
        "description": "Get attachments for an issue in Linear"
      },
      "linear_link_issues": {
        "name": "linear_link_issues",
        "description": "Create a relationship between issues in Linear"
      },
      "linear_get_issue_relations": {
        "name": "linear_get_issue_relations",
        "description": "Get relationships for an issue in Linear"
      }
    }
  },
  "freshdesk-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/freshdesk-mcp.json"
  },
  "@makingchatbots/genesys-cloud-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/makingchatbots-genesys-cloud-mcp-server.json",
    "validated": true,
    "tools": {
      "search_queues": {
        "name": "search_queues",
        "description": "Searches for routing queues based on their name, allowing for wildcard searches. Returns a paginated list of matching queues, including their Name, ID, Description (if available), and Member Count (if available). Also provides pagination details like current page, page size, total results found, and total pages available. Useful for finding specific queue IDs, checking queue configurations, or listing available queues."
      },
      "sample_conversations_by_queue": {
        "name": "sample_conversations_by_queue",
        "description": "Retrieves conversation analytics for a specific queue between two dates, returning a representative sample of conversation IDs. Useful for reporting, investigation, or summarisation."
      },
      "query_queue_volumes": {
        "name": "query_queue_volumes",
        "description": "Returns a breakdown of how many conversations occurred in each specified queue between two dates. Useful for comparing workload across queues."
      },
      "voice_call_quality": {
        "name": "voice_call_quality",
        "description": "Retrieves voice call quality metrics for one or more conversations by ID. This tool specifically focuses on voice interactions and returns the minimum Mean Opinion Score (MOS) observed in each conversation, helping identify degraded or poor-quality voice calls."
      },
      "conversation_sentiment": {
        "name": "conversation_sentiment",
        "description": "Retrieves sentiment analysis scores for one or more conversations. Sentiment is evaluated based on customer phrases, categorized as positive, neutral, or negative. The result includes both a numeric sentiment score (-100 to 100) and an interpreted sentiment label."
      },
      "conversation_topics": {
        "name": "conversation_topics",
        "description": "Retrieves Speech and Text Analytics topics detected for a specific conversation. Topics represent business-level intents (e.g. cancellation, billing enquiry) inferred from recognised phrases in the customer-agent interaction."
      },
      "search_voice_conversations": {
        "name": "search_voice_conversations",
        "description": "Searches for voice conversations within a specified time window, optionally filtering by phone number. Returns a paginated list of conversation metadata for use in further analysis or tool calls."
      },
      "conversation_transcript": {
        "name": "conversation_transcript",
        "description": "Retrieves a structured transcript of the conversation, including speaker labels, utterance timestamps, and sentiment annotations where available. The transcript is formatted as a time-aligned list of utterances attributed to each participant (e.g., customer or agent)"
      }
    }
  },
  "zendesk": {
    "category": "support-service-management",
    "path": "support-service-management/zendesk.json"
  },
  "freshservice-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/freshservice-mcp.json"
  },
  "@parassolanki/jira-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/parassolanki-jira-mcp-server.json",
    "validated": true,
    "tools": {
      "list_projects": {
        "name": "list_projects",
        "description": "List projects from Jira"
      },
      "list_boards": {
        "name": "list_boards",
        "description": "List boards from a project"
      },
      "list_sprints_from_board": {
        "name": "list_sprints_from_board",
        "description": "List sprints from a board"
      },
      "list_issues_from_sprint": {
        "name": "list_issues_from_sprint",
        "description": "List issues from a sprint"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create an issue in Jira"
      }
    }
  },
  "rootly-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/rootly-mcp-server.json"
  },
  "mcp-linear": {
    "category": "support-service-management",
    "path": "support-service-management/mcp-linear.json",
    "validated": true,
    "tools": {
      "create_issue": {
        "name": "create_issue",
        "description": "Creates a new Linear issue with specified details. Use this to create tickets for tasks, bugs, or feature requests. Returns the created issue's identifier and URL. Required fields are title and teamId, with optional description, priority (0-4, where 0 is no priority and 1 is urgent), and status."
      },
      "update_issue": {
        "name": "update_issue",
        "description": "Updates an existing Linear issue's properties. Use this to modify issue details like title, description, priority, or status. Requires the issue ID and accepts any combination of updatable fields. Returns the updated issue's identifier and URL."
      },
      "search_issues": {
        "name": "search_issues",
        "description": "Searches Linear issues using flexible criteria. Supports filtering by any combination of: title/description text, team, status, assignee, labels, priority (1=urgent, 2=high, 3=normal, 4=low), and estimate. Returns up to 10 issues by default (configurable via limit)."
      },
      "get_user_issues": {
        "name": "get_user_issues",
        "description": "Retrieves issues assigned to a specific user or the authenticated user if no userId is provided. Returns issues sorted by last updated, including priority, status, and other metadata. Useful for finding a user's workload or tracking assigned tasks."
      },
      "add_comment": {
        "name": "add_comment",
        "description": "Adds a comment to an existing Linear issue. Supports markdown formatting in the comment body. Can optionally specify a custom user name and avatar for the comment. Returns the created comment's details including its URL."
      }
    }
  },
  "connectwise-manage-api": {
    "category": "support-service-management",
    "path": "support-service-management/connectwise-manage-api.json"
  },
  "@cristip73/mcp-server-asana": {
    "category": "support-service-management",
    "path": "support-service-management/cristip73-mcp-server-asana.json",
    "validated": true,
    "tools": {
      "asana_list_workspaces": {
        "name": "asana_list_workspaces",
        "description": "List all available workspaces in Asana. If DEFAULT_WORKSPACE_ID is set, only returns that workspace."
      },
      "asana_search_projects": {
        "name": "asana_search_projects",
        "description": "Search for projects in Asana using name pattern matching"
      },
      "asana_get_project": {
        "name": "asana_get_project",
        "description": "Get detailed information about a specific project"
      },
      "asana_get_project_task_counts": {
        "name": "asana_get_project_task_counts",
        "description": "Get the number of tasks in a project"
      },
      "asana_get_project_sections": {
        "name": "asana_get_project_sections",
        "description": "Get sections in a project"
      },
      "asana_create_section_for_project": {
        "name": "asana_create_section_for_project",
        "description": "Create a new section in a project"
      },
      "asana_create_project": {
        "name": "asana_create_project",
        "description": "Create a new project in a workspace"
      },
      "asana_update_project": {
        "name": "asana_update_project",
        "description": "Update details of an existing project"
      },
      "asana_reorder_sections": {
        "name": "asana_reorder_sections",
        "description": "Reorder a section within a project by specifying its position relative to another section"
      },
      "asana_get_project_status": {
        "name": "asana_get_project_status",
        "description": "Get a project status update"
      },
      "asana_get_project_statuses": {
        "name": "asana_get_project_statuses",
        "description": "Get all status updates for a project"
      },
      "asana_create_project_status": {
        "name": "asana_create_project_status",
        "description": "Create a new status update for a project"
      },
      "asana_delete_project_status": {
        "name": "asana_delete_project_status",
        "description": "Delete a project status update"
      },
      "asana_search_tasks": {
        "name": "asana_search_tasks",
        "description": "Search tasks in a workspace with advanced filtering options"
      },
      "asana_get_task": {
        "name": "asana_get_task",
        "description": "Get detailed information about a specific task"
      },
      "asana_create_task": {
        "name": "asana_create_task",
        "description": "Create a new task in a project"
      },
      "asana_update_task": {
        "name": "asana_update_task",
        "description": "Update an existing task's details"
      },
      "asana_create_subtask": {
        "name": "asana_create_subtask",
        "description": "Create a new subtask for an existing task"
      },
      "asana_get_multiple_tasks_by_gid": {
        "name": "asana_get_multiple_tasks_by_gid",
        "description": "Get detailed information about multiple tasks by their GIDs (maximum 25 tasks)"
      },
      "asana_add_task_to_section": {
        "name": "asana_add_task_to_section",
        "description": "Add a task to a specific section in a project"
      },
      "asana_get_tasks_for_section": {
        "name": "asana_get_tasks_for_section",
        "description": "Get all tasks from a specific section in a project"
      },
      "asana_get_project_hierarchy": {
        "name": "asana_get_project_hierarchy",
        "description": "Get the complete hierarchical structure of an Asana project, including its sections, tasks, and subtasks. Supports both manual and automatic pagination.\n\nPAGINATION GUIDE:\n1. Get all data at once: Use auto_paginate=true\n2. Manual pagination: First request with limit=N, then use the returned 'next_offset' tokens in subsequent requests\n3. Tips for large projects: Specify only needed fields, set include_subtasks=false if subtasks aren't needed\n\nEXAMPLES:\n- For all data: {project_id:\"123\", auto_paginate:true}\n- For first page: {project_id:\"123\", limit:10}\n- For next page: {project_id:\"123\", limit:10, offset:\"eyJ0a...\"}\n- For deep subtasks: {project_id:\"123\", include_subtasks:true, max_subtask_depth:3}\nNote: offset must be a token from previous response (section.pagination_info.next_offset)"
      },
      "asana_get_subtasks_for_task": {
        "name": "asana_get_subtasks_for_task",
        "description": "Get the list of subtasks for a specific task"
      },
      "asana_get_tasks_for_project": {
        "name": "asana_get_tasks_for_project",
        "description": "Get all tasks from a specific project with pagination support"
      },
      "asana_get_tasks_for_tag": {
        "name": "asana_get_tasks_for_tag",
        "description": "Get tasks for a specific tag"
      },
      "asana_get_tags_for_workspace": {
        "name": "asana_get_tags_for_workspace",
        "description": "Get tags in a workspace"
      },
      "asana_add_tags_to_task": {
        "name": "asana_add_tags_to_task",
        "description": "Add one or more tags to a task for categorization purposes"
      },
      "asana_add_task_dependencies": {
        "name": "asana_add_task_dependencies",
        "description": "Set dependencies for a task"
      },
      "asana_add_task_dependents": {
        "name": "asana_add_task_dependents",
        "description": "Set dependents for a task (tasks that depend on this task)"
      },
      "asana_set_parent_for_task": {
        "name": "asana_set_parent_for_task",
        "description": "Set the parent of a task and position the subtask within the other subtasks of that parent"
      },
      "asana_add_followers_to_task": {
        "name": "asana_add_followers_to_task",
        "description": "Add followers to a task"
      },
      "asana_get_task_stories": {
        "name": "asana_get_task_stories",
        "description": "Get comments and stories for a specific task"
      },
      "asana_create_task_story": {
        "name": "asana_create_task_story",
        "description": "Create a comment or story on a task"
      },
      "asana_get_teams_for_user": {
        "name": "asana_get_teams_for_user",
        "description": "Get teams to which the user has access"
      },
      "asana_get_teams_for_workspace": {
        "name": "asana_get_teams_for_workspace",
        "description": "Get teams in a workspace"
      },
      "asana_add_members_for_project": {
        "name": "asana_add_members_for_project",
        "description": "Add members to a project"
      },
      "asana_add_followers_for_project": {
        "name": "asana_add_followers_for_project",
        "description": "Add followers to a project"
      },
      "asana_list_workspace_users": {
        "name": "asana_list_workspace_users",
        "description": "Get users in a workspace"
      },
      "asana_get_attachments_for_object": {
        "name": "asana_get_attachments_for_object",
        "description": "List attachments for an object (task, project, etc)"
      },
      "asana_upload_attachment_for_object": {
        "name": "asana_upload_attachment_for_object",
        "description": "Upload a local file as attachment to an object"
      },
      "asana_download_attachment": {
        "name": "asana_download_attachment",
        "description": "Download an attachment locally"
      }
    }
  },
  "devrev-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/devrev-mcp.json"
  },
  "devrev": {
    "category": "support-service-management",
    "path": "support-service-management/devrev.json"
  },
  "jenkins": {
    "category": "support-service-management",
    "path": "support-service-management/jenkins.json"
  },
  "pagerduty_mcp_server": {
    "category": "support-service-management",
    "path": "support-service-management/pagerduty_mcp_server.json"
  },
  "pearl": {
    "category": "support-service-management",
    "path": "support-service-management/pearl.json"
  },
  "personal-jira-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/personal-jira-mcp.json"
  },
  "taiga": {
    "category": "support-service-management",
    "path": "support-service-management/taiga.json"
  },
  "clickup-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/clickup-mcp-server.json",
    "validated": true,
    "tools": {
      "get_workspace_seats": {
        "name": "get_workspace_seats",
        "description": "Get information about seats (user licenses) in a ClickUp workspace. Returns details about seat allocation and availability."
      },
      "get_workspaces": {
        "name": "get_workspaces",
        "description": "Get a list of all ClickUp workspaces accessible to the authenticated user. Returns workspace IDs, names, and metadata."
      },
      "get_tasks": {
        "name": "get_tasks",
        "description": "Get tasks from a ClickUp list. Returns task details including name, description, assignees, and status."
      },
      "get_task_details": {
        "name": "get_task_details",
        "description": "Get detailed information about a specific ClickUp task. Returns comprehensive task data including description, assignees, status, and dates."
      },
      "create_task": {
        "name": "create_task",
        "description": "Create a new task in a ClickUp list with specified properties like name, description, assignees, status, and dates."
      },
      "update_task": {
        "name": "update_task",
        "description": "Update an existing ClickUp task's properties including name, description, assignees, status, and dates."
      },
      "get_lists": {
        "name": "get_lists",
        "description": "Get lists from a ClickUp folder or space. Returns list details including name and content."
      },
      "create_folder": {
        "name": "create_folder",
        "description": "Create a new folder in a ClickUp space with the specified name."
      },
      "update_folder": {
        "name": "update_folder",
        "description": "Update an existing ClickUp folder's name."
      },
      "delete_folder": {
        "name": "delete_folder",
        "description": "Delete a folder from ClickUp. Removes the folder and its contents."
      },
      "get_folderless_lists": {
        "name": "get_folderless_lists",
        "description": "Get lists that are not in any folder within a ClickUp space."
      },
      "create_list": {
        "name": "create_list",
        "description": "Create a new list in a ClickUp folder or space with the specified name."
      },
      "create_folderless_list": {
        "name": "create_folderless_list",
        "description": "Create a new list directly in a ClickUp space without placing it in a folder."
      },
      "get_list": {
        "name": "get_list",
        "description": "Get details about a specific ClickUp list including its name and content."
      },
      "update_list": {
        "name": "update_list",
        "description": "Update an existing ClickUp list's name."
      },
      "delete_list": {
        "name": "delete_list",
        "description": "Delete a list from ClickUp. Removes the list and its tasks."
      },
      "add_task_to_list": {
        "name": "add_task_to_list",
        "description": "Add an existing task to a ClickUp list."
      },
      "remove_task_from_list": {
        "name": "remove_task_from_list",
        "description": "Remove a task from a ClickUp list without deleting the task."
      },
      "create_list_from_template_in_folder": {
        "name": "create_list_from_template_in_folder",
        "description": "Create a new list in a ClickUp folder using an existing template."
      },
      "create_list_from_template_in_space": {
        "name": "create_list_from_template_in_space",
        "description": "Create a new list in a ClickUp space using an existing template."
      },
      "get_doc_content": {
        "name": "get_doc_content",
        "description": "Get the content of a specific ClickUp doc. Returns combined content from all pages in the doc."
      },
      "search_docs": {
        "name": "search_docs",
        "description": "Search for docs in a ClickUp workspace using a query string. Returns matching docs with their metadata."
      },
      "get_docs_from_workspace": {
        "name": "get_docs_from_workspace",
        "description": "Get all docs from a ClickUp workspace. Supports pagination and filtering for deleted/archived docs."
      },
      "get_doc_pages": {
        "name": "get_doc_pages",
        "description": "Get the pages of a specific ClickUp doc. Returns page content in the requested format (markdown or plain text)."
      },
      "get_spaces": {
        "name": "get_spaces",
        "description": "Get spaces from a ClickUp workspace. Returns space details including name, settings, and features."
      },
      "get_space": {
        "name": "get_space",
        "description": "Get details about a specific ClickUp space. Returns space name, settings, features, and metadata."
      },
      "create_checklist": {
        "name": "create_checklist",
        "description": "Create a new checklist in a ClickUp task. Returns the created checklist details."
      },
      "update_checklist": {
        "name": "update_checklist",
        "description": "Update an existing ClickUp checklist's name."
      },
      "delete_checklist": {
        "name": "delete_checklist",
        "description": "Delete a checklist from a ClickUp task. Removes the checklist and all its items."
      },
      "create_checklist_item": {
        "name": "create_checklist_item",
        "description": "Create a new item in a ClickUp checklist. Supports optional assignee and resolved status."
      },
      "update_checklist_item": {
        "name": "update_checklist_item",
        "description": "Update an existing ClickUp checklist item's properties including name, assignee, and resolved status."
      },
      "delete_checklist_item": {
        "name": "delete_checklist_item",
        "description": "Delete an item from a ClickUp checklist."
      },
      "get_task_comments": {
        "name": "get_task_comments",
        "description": "Get comments for a ClickUp task. Returns comment details including text, author, and timestamps."
      },
      "create_task_comment": {
        "name": "create_task_comment",
        "description": "Create a new comment on a ClickUp task. Supports optional assignee and notification settings."
      },
      "get_chat_view_comments": {
        "name": "get_chat_view_comments",
        "description": "Get comments for a ClickUp chat view. Returns comment details with pagination support."
      },
      "create_chat_view_comment": {
        "name": "create_chat_view_comment",
        "description": "Create a new comment in a ClickUp chat view. Supports notification settings."
      },
      "get_list_comments": {
        "name": "get_list_comments",
        "description": "Get comments for a ClickUp list. Returns comment details with pagination support."
      },
      "create_list_comment": {
        "name": "create_list_comment",
        "description": "Create a new comment on a ClickUp list. Supports optional assignee and notification settings."
      },
      "update_comment": {
        "name": "update_comment",
        "description": "Update an existing ClickUp comment's properties including text, assignee, and resolved status."
      },
      "delete_comment": {
        "name": "delete_comment",
        "description": "Delete a comment from ClickUp."
      },
      "get_threaded_comments": {
        "name": "get_threaded_comments",
        "description": "Get threaded comments (replies) for a parent comment. Returns comment details with pagination support."
      },
      "create_threaded_comment": {
        "name": "create_threaded_comment",
        "description": "Create a new threaded comment (reply) to a parent comment. Supports notification settings."
      }
    }
  },
  "linear": {
    "category": "support-service-management",
    "path": "support-service-management/linear.json"
  },
  "servicenow-itsm": {
    "category": "support-service-management",
    "path": "support-service-management/servicenow-itsm.json"
  },
  "advocu-mcp-server": {
    "category": "support-service-management",
    "path": "support-service-management/advocu-mcp-server.json",
    "validated": true,
    "tools": {
      "submit_content_creation": {
        "name": "submit_content_creation",
        "description": "Submit a content creation activity draft"
      },
      "submit_public_speaking": {
        "name": "submit_public_speaking",
        "description": "Submit a public speaking activity draft"
      },
      "submit_workshop": {
        "name": "submit_workshop",
        "description": "Submit a workshop activity draft"
      },
      "submit_mentoring": {
        "name": "submit_mentoring",
        "description": "Submit a mentoring activity draft"
      },
      "submit_product_feedback": {
        "name": "submit_product_feedback",
        "description": "Submit a product feedback activity draft"
      },
      "submit_googler_interaction": {
        "name": "submit_googler_interaction",
        "description": "Submit an interaction with Googlers activity draft"
      },
      "submit_story": {
        "name": "submit_story",
        "description": "Submit a story activity draft"
      }
    }
  },
  "testrail-mcp": {
    "category": "support-service-management",
    "path": "support-service-management/testrail-mcp.json"
  },
  "@mcp-devtools/jira": {
    "category": "support-service-management",
    "path": "support-service-management/mcp-devtools-jira.json",
    "validated": true,
    "tools": {
      "execute_jql": {
        "name": "execute_jql",
        "description": ""
      },
      "get_only_ticket_name_and_description": {
        "name": "get_only_ticket_name_and_description",
        "description": ""
      },
      "get_ticket": {
        "name": "get_ticket",
        "description": ""
      },
      "read_ticket": {
        "name": "read_ticket",
        "description": ""
      },
      "get_task": {
        "name": "get_task",
        "description": ""
      },
      "read_task": {
        "name": "read_task",
        "description": ""
      },
      "create_ticket": {
        "name": "create_ticket",
        "description": ""
      },
      "list_projects": {
        "name": "list_projects",
        "description": ""
      },
      "delete_ticket": {
        "name": "delete_ticket",
        "description": ""
      },
      "edit_ticket": {
        "name": "edit_ticket",
        "description": ""
      },
      "get_all_statuses": {
        "name": "get_all_statuses",
        "description": ""
      },
      "assign_ticket": {
        "name": "assign_ticket",
        "description": ""
      },
      "query_assignable": {
        "name": "query_assignable",
        "description": ""
      },
      "add_attachment_from_public_url": {
        "name": "add_attachment_from_public_url",
        "description": ""
      },
      "add_attachment_from_confluence": {
        "name": "add_attachment_from_confluence",
        "description": ""
      }
    }
  },
  "deepl-mcp-server": {
    "category": "translation-services",
    "path": "translation-services/deepl-mcp-server.json",
    "validated": true,
    "tools": {
      "get-source-languages": {
        "name": "get-source-languages",
        "description": "Get list of available source languages for translation"
      },
      "get-target-languages": {
        "name": "get-target-languages",
        "description": "Get list of available target languages for translation"
      },
      "translate-text": {
        "name": "translate-text",
        "description": "Translate text to a target language using DeepL API"
      },
      "get-writing-styles-and-tones": {
        "name": "get-writing-styles-and-tones",
        "description": "Get list of available writing styles and tones for rephrasing"
      },
      "rephrase-text": {
        "name": "rephrase-text",
        "description": "Rephrase text in the same language using DeepL API"
      }
    }
  },
  "youtube-translate": {
    "category": "translation-services",
    "path": "translation-services/youtube-translate.json"
  },
  "polyglot-translation": {
    "category": "translation-services",
    "path": "translation-services/polyglot-translation.json"
  },
  "simplelocalize": {
    "category": "translation-services",
    "path": "translation-services/simplelocalize.json"
  },
  "@translated/lara-mcp": {
    "category": "translation-services",
    "path": "translation-services/translated-lara-mcp.json",
    "validated": true,
    "tools": {
      "translate": {
        "name": "translate",
        "description": "Translate text between languages with support for language detection, context-aware translations and translation memories using Lara Translate."
      },
      "create_memory": {
        "name": "create_memory",
        "description": "Create a translation memory with a custom name in your Lara Translate account. Translation memories store pairs of source and target text segments (translation units) for reuse in future translations."
      },
      "delete_memory": {
        "name": "delete_memory",
        "description": "Deletes a translation memory from your Lara Translate account."
      },
      "update_memory": {
        "name": "update_memory",
        "description": "Updates a translation memory in your Lara Translate account."
      },
      "add_translation": {
        "name": "add_translation",
        "description": "Adds a translation to a translation memory in your Lara Translate account."
      },
      "delete_translation": {
        "name": "delete_translation",
        "description": "Deletes a translation from a translation memory from your Lara Translate account."
      },
      "import_tmx": {
        "name": "import_tmx",
        "description": "Imports a TMX file into a translation memory in your Lara Translate account."
      },
      "check_import_status": {
        "name": "check_import_status",
        "description": "Checks the status of a TMX file import job in your Lara Translate account."
      },
      "list_memories": {
        "name": "list_memories",
        "description": "Lists all translation memories in your Lara Translate account."
      },
      "list_languages": {
        "name": "list_languages",
        "description": "Lists all supported languages in your Lara Translate account."
      }
    }
  },
  "@variflight-ai/variflight-mcp": {
    "category": "travel-transportation",
    "path": "travel-transportation/variflight-ai-variflight-mcp.json",
    "validated": true,
    "tools": {
      "searchFlightsByDepArr": {
        "name": "searchFlightsByDepArr",
        "description": "Search for flights between airports or cities by date. For cities with multiple airports, use depcity and arrcity parameters; otherwise use dep and arr parameters. Date must be in YYYY-MM-DD format. For today's date, use the getTodayDate tool. All airport/city codes must be valid IATA 3-letter codes (e.g.BJS for city of Beijing, PEK for Beijing Capital Airport)."
      },
      "searchFlightsByNumber": {
        "name": "searchFlightsByNumber",
        "description": "Search flights by flight number and date. Flight number should include airline code (e.g. MU2157, CZ3969).  dep and arr are optional, keep empty if you don't know them. Date format: YYYY-MM-DD. IMPORTANT: For today's date, you MUST use getTodayDate tool instead of hardcoding any date. Airport codes (optional) should be IATA 3-letter codes. "
      },
      "getFlightTransferInfo": {
        "name": "getFlightTransferInfo",
        "description": "Get flight transfer info by departure city and arrival city and departure date. Date format: YYYY-MM-DD. IMPORTANT: For today's date, you MUST use getTodayDate tool instead of hardcoding any date. Airport codes should be IATA 3-letter codes. "
      },
      "flightHappinessIndex": {
        "name": "flightHappinessIndex",
        "description": "using this tool when you need information related to following topics: Detailed flight comparisons (punctuality, amenities, cabin specs),Health safety protocols for air travel,Baggage allowance verification,Environmental impact assessments,Aircraft configuration visualization,Comfort-focused trip planning (seat dimensions, entertainment, food). etc."
      },
      "getRealtimeLocationByAnum": {
        "name": "getRealtimeLocationByAnum",
        "description": "Get flight realtime location by aircraft number. aircraft number should be Aircraft registration numberlike B2021, B2022, B2023, etc. if aircraft number is unknown, you shuold try to request it using searchFlightsByNumber tool"
      },
      "getTodayDate": {
        "name": "getTodayDate",
        "description": "Get today's date in local timezone (YYYY-MM-DD format). Use this tool whenever you need today's date - NEVER hardcode dates."
      },
      "getFutureWeatherByAirport": {
        "name": "getFutureWeatherByAirport",
        "description": "Get airport future weather for 3days (today、tomorrow、the day after tomorrow) by airport IATA 3-letter code. Airport codes should be IATA 3-letter codes (e.g. PEK for Beijing, SHA for Shanghai, CAN for Guangzhou, HFE for Hefei)."
      },
      "searchFlightItineraries": {
        "name": "searchFlightItineraries",
        "description": "Search for purchasable flight options and the lowest price using the departure city three-letter code, arrival city three-letter code, and departure date. (e.g. BJS for Beijing, SHA for Shanghai, CAN for Guangzhou, HFE for Hefei)."
      }
    }
  },
  "vilnius-transport": {
    "category": "travel-transportation",
    "path": "travel-transportation/vilnius-transport.json"
  },
  "tripadvisor-vacation-planner": {
    "category": "travel-transportation",
    "path": "travel-transportation/tripadvisor-vacation-planner.json"
  },
  "hkopenai.hk_transportation_mcp_server": {
    "category": "travel-transportation",
    "path": "travel-transportation/hkopenai-hk_transportation_mcp_server.json"
  },
  "@gongrzhe/server-travelplanner-mcp": {
    "category": "travel-transportation",
    "path": "travel-transportation/gongrzhe-server-travelplanner-mcp.json",
    "validated": true,
    "tools": {
      "create_itinerary": {
        "name": "create_itinerary",
        "description": "Creates a personalized travel itinerary based on user preferences"
      },
      "optimize_itinerary": {
        "name": "optimize_itinerary",
        "description": "Optimizes an existing itinerary based on specified criteria"
      },
      "search_attractions": {
        "name": "search_attractions",
        "description": "Searches for attractions and points of interest in a specified location"
      },
      "get_transport_options": {
        "name": "get_transport_options",
        "description": "Retrieves available transportation options between two points"
      },
      "get_accommodations": {
        "name": "get_accommodations",
        "description": "Searches for accommodation options in a specified location"
      }
    }
  },
  "transport-nsw": {
    "category": "travel-transportation",
    "path": "travel-transportation/transport-nsw.json"
  },
  "hong-kong-bus": {
    "category": "travel-transportation",
    "path": "travel-transportation/hong-kong-bus.json"
  },
  "google-flights": {
    "category": "travel-transportation",
    "path": "travel-transportation/google-flights.json"
  },
  "caltrain-mcp": {
    "category": "travel-transportation",
    "path": "travel-transportation/caltrain-mcp.json"
  },
  "georgia-511": {
    "category": "travel-transportation",
    "path": "travel-transportation/georgia-511.json"
  },
  "tripadvisor": {
    "category": "travel-transportation",
    "path": "travel-transportation/tripadvisor.json"
  },
  "@mfukushim/map-traveler-mcp": {
    "category": "travel-transportation",
    "path": "travel-transportation/mfukushim-map-traveler-mcp.json",
    "validated": true,
    "tools": {
      "get_traveler_view_info": {
        "name": "get_traveler_view_info",
        "description": "Get the address of the current traveler's location and information on nearby facilities,view snapshot"
      },
      "get_traveler_location": {
        "name": "get_traveler_location",
        "description": "Get the address of the current traveler's location"
      },
      "tips": {
        "name": "tips",
        "description": "Inform you of recommended actions for your device"
      },
      "get_setting": {
        "name": "get_setting",
        "description": "Get current setting"
      },
      "get_traveler_info": {
        "name": "get_traveler_info",
        "description": "get a traveler's setting.For example, traveler's name, the language traveler speak, Personality and speaking habits, etc."
      },
      "set_traveler_info": {
        "name": "set_traveler_info",
        "description": "set a traveler's setting.For example, traveler's name, the language traveler speak, Personality and speaking habits, etc."
      },
      "start_traveler_journey": {
        "name": "start_traveler_journey",
        "description": "Start the traveler's journey to destination"
      },
      "stop_traveler_journey": {
        "name": "stop_traveler_journey",
        "description": "Stop the traveler's journey"
      }
    }
  },
  "flights-mcp": {
    "category": "travel-transportation",
    "path": "travel-transportation/flights-mcp.json"
  },
  "lumbretravel-mcp": {
    "category": "travel-transportation",
    "path": "travel-transportation/lumbretravel-mcp.json",
    "validated": true,
    "tools": {
      "get_program": {
        "name": "get_program",
        "description": "Obtiene un programa de viajes por ID"
      },
      "get_programs_by_name": {
        "name": "get_programs_by_name",
        "description": "Busca programas de viajes por nombre"
      },
      "get_programs_by_date_range": {
        "name": "get_programs_by_date_range",
        "description": "Obtiene programas de viajes por rango de fechas"
      },
      "daily_activities": {
        "name": "daily_activities",
        "description": "Obtiene las actividades diarias"
      },
      "season_summary": {
        "name": "season_summary",
        "description": "Obtiene un resumen de pasajeros a lo largo de una temporada.  Esta tool es muy útil para obtener el total de pasajeros de una temporada y ver como se distribuye por agencias."
      },
      "create_program": {
        "name": "create_program",
        "description": "Crea un nuevo programa de viajes.  Antes de crear un nuevo programa se debe preguntar al si quiere que primero se busque el programa a ver si existe. Si no se especifica la fecha de inicio o fin del programa, no la asumas, pide al usuario que la especifique. Si no se especifica el ID de la agencia, pide al usuario que la especifique."
      },
      "update_program": {
        "name": "update_program",
        "description": "Actualiza un programa de viajes en LumbreTravel"
      },
      "delete_program": {
        "name": "delete_program",
        "description": "Elimina un programa de viajes"
      },
      "reactivate_program": {
        "name": "reactivate_program",
        "description": "Reactiva un programa de viajes"
      },
      "list_agencies": {
        "name": "list_agencies",
        "description": "Obtiene todas las agencias disponibles para asociar a un programa de viajes"
      },
      "list_services": {
        "name": "list_services",
        "description": "Obtiene todos los servicios disponibles para asociar a una actividad en un programa de viajes"
      },
      "list_hotels": {
        "name": "list_hotels",
        "description": "Obtiene todos los hoteles disponibles para asociar a una actividad en un programa de viajes"
      },
      "list_leaders": {
        "name": "list_leaders",
        "description": "Obtiene todos los guías disponibles para asociar a una actividad en un programa de viajes"
      },
      "list_vehicles": {
        "name": "list_vehicles",
        "description": "Obtiene todos los vehículos disponibles para asociar a una actividad en un programa de viajes"
      },
      "list_includes": {
        "name": "list_includes",
        "description": "Obtiene todos los incluye o extras disponibles para asociar a una actividad en un programa de viajes"
      },
      "list_service_languages": {
        "name": "list_service_languages",
        "description": "Obtiene todos los idiomas para asociar a una actividad en un programa de viajes.  Estos idiomas solo se pueden usar para asociar a un servicio."
      },
      "list_providers": {
        "name": "list_providers",
        "description": "Obtiene todos los proveedores disponibles"
      },
      "get_passengers_by_fullname": {
        "name": "get_passengers_by_fullname",
        "description": "Obtiene pasajeros por nombre completo"
      },
      "get_passengers_by_email": {
        "name": "get_passengers_by_email",
        "description": "Obtiene pasajeros por email"
      },
      "create_passengers": {
        "name": "create_passengers",
        "description": "Crea pasajeros, usa esta tool cuando el asistente recibe los datos de los pasajeros como parte del pedido del usuario"
      },
      "update_passengers": {
        "name": "update_passengers",
        "description": "Edita pasajeros teniendo en cuenta que se conoce el ID del pasajero."
      },
      "delete_passengers": {
        "name": "delete_passengers",
        "description": "Elimina pasajeros teniendo en cuenta que se conoce el ID del pasajero"
      },
      "delete_passenger": {
        "name": "delete_passenger",
        "description": "Elimina un pasajero teniendo en cuenta que se conoce su ID"
      },
      "reactivate_passenger": {
        "name": "reactivate_passenger",
        "description": "Reactiva un pasajero teniendo en cuenta que se conoce su ID"
      },
      "add_passengers_to_program": {
        "name": "add_passengers_to_program",
        "description": "Agrega pasajeros a un programa."
      },
      "add_activities": {
        "name": "add_activities",
        "description": "Crea actividades asociadas a un programa.  Es importante que los servicios, hoteles, guías, vehículos y extras ya existan"
      },
      "update_activities": {
        "name": "update_activities",
        "description": "Actualizar múltiples actividades asociadas a un programa"
      },
      "delete_activities": {
        "name": "delete_activities",
        "description": "Eliminar múltiples actividades asociadas a un programa"
      },
      "create_agency": {
        "name": "create_agency",
        "description": "Crear una agencia.  Antes de crear una nueva agencia se debe preguntar al si quiere que primero se busque la agencia a ver si existe"
      },
      "update_agency": {
        "name": "update_agency",
        "description": "Actualizar una agencia"
      },
      "delete_agency": {
        "name": "delete_agency",
        "description": "Eliminar una agencia.  La agencia eliminada no se puede usar para asociarle programas"
      },
      "reactivate_agency": {
        "name": "reactivate_agency",
        "description": "Reactivar una agencia"
      },
      "get_agency_by_name": {
        "name": "get_agency_by_name",
        "description": "Obtener una agencia por nombre, retorna la agencia encontrada."
      },
      "create_hotel": {
        "name": "create_hotel",
        "description": "Antes de crear un nuevo hotel se debe preguntar al si quiere que primero se busque el hotel a ver si existe."
      },
      "update_hotel": {
        "name": "update_hotel",
        "description": "Actualizar un hotel"
      },
      "delete_hotel": {
        "name": "delete_hotel",
        "description": "Eliminar un hotel"
      },
      "reactivate_hotel": {
        "name": "reactivate_hotel",
        "description": "Reactivar un hotel"
      },
      "get_hotel_by_name": {
        "name": "get_hotel_by_name",
        "description": "Buscar hoteles por su nombre, retorna la lista de hoteles encontrados."
      },
      "create_leader": {
        "name": "create_leader",
        "description": "Crear un guía."
      },
      "update_leader": {
        "name": "update_leader",
        "description": "Actualizar un guía"
      },
      "delete_leader": {
        "name": "delete_leader",
        "description": "Eliminar un guía"
      },
      "reactivate_leader": {
        "name": "reactivate_leader",
        "description": "Reactivar un guía"
      },
      "get_leader_by_name": {
        "name": "get_leader_by_name",
        "description": "Buscar guías por su nombre."
      },
      "create_vehicle": {
        "name": "create_vehicle",
        "description": "Crear un vehículo."
      },
      "update_vehicle": {
        "name": "update_vehicle",
        "description": "Actualizar un vehículo."
      },
      "delete_vehicle": {
        "name": "delete_vehicle",
        "description": "Eliminar un vehículo."
      },
      "reactivate_vehicle": {
        "name": "reactivate_vehicle",
        "description": "Reactivar un vehículo."
      },
      "get_vehicle_by_name": {
        "name": "get_vehicle_by_name",
        "description": "Buscar vehículos por su nombre, retorna la lista de vehículos encontrados."
      },
      "create_include": {
        "name": "create_include",
        "description": "Crear un extra o incluído."
      },
      "update_include": {
        "name": "update_include",
        "description": "Actualizar un extra o incluído."
      },
      "delete_include": {
        "name": "delete_include",
        "description": "Eliminar un extra o incluído"
      },
      "reactivate_include": {
        "name": "reactivate_include",
        "description": "Reactivar un extra o incluído"
      },
      "get_includes_by_name": {
        "name": "get_includes_by_name",
        "description": "Buscar extras o incluídos por su nombre"
      },
      "create_service_language": {
        "name": "create_service_language",
        "description": "Crear un idioma de servicio."
      },
      "update_service_language": {
        "name": "update_service_language",
        "description": "Actualizar un idioma de servicio."
      },
      "delete_service_language": {
        "name": "delete_service_language",
        "description": "Eliminar un idioma de servicio."
      },
      "reactivate_service_language": {
        "name": "reactivate_service_language",
        "description": "Reactivar un idioma de servicio."
      },
      "get_service_language_by_name": {
        "name": "get_service_language_by_name",
        "description": "Buscar idiomas de servicio por su nombre."
      },
      "create_provider": {
        "name": "create_provider",
        "description": "Crear un proveedor."
      },
      "update_provider": {
        "name": "update_provider",
        "description": "Actualizar un proveedor."
      },
      "delete_provider": {
        "name": "delete_provider",
        "description": "Eliminar un proveedor."
      },
      "reactivate_provider": {
        "name": "reactivate_provider",
        "description": "Reactivar un proveedor."
      },
      "get_provider_by_name": {
        "name": "get_provider_by_name",
        "description": "Buscar proveedores por su nombre"
      },
      "create_service": {
        "name": "create_service",
        "description": "Crear un servicio"
      },
      "update_service": {
        "name": "update_service",
        "description": "Actualizar un servicio"
      },
      "delete_service": {
        "name": "delete_service",
        "description": "Eliminar un servicio"
      },
      "reactivate_service": {
        "name": "reactivate_service",
        "description": "Reactivar un servicio"
      },
      "get_services_by_name": {
        "name": "get_services_by_name",
        "description": "Buscar servicios por su nombre, retorna la lista de servicios encontrados."
      }
    }
  },
  "sncf-train-journey-planner": {
    "category": "travel-transportation",
    "path": "travel-transportation/sncf-train-journey-planner.json"
  },
  "find-flights-(duffel)": {
    "category": "travel-transportation",
    "path": "travel-transportation/find-flights--duffel.json"
  },
  "@missionsquad/mcp-github": {
    "category": "version-control",
    "path": "version-control/missionsquad-mcp-github.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitHub repository"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitHub repositories"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitHub repository in your account"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitHub repository"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitHub repository in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitHub repository"
      },
      "create_pull_request": {
        "name": "create_pull_request",
        "description": "Create a new pull request in a GitHub repository"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitHub repository to your account or specified organization"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitHub repository"
      },
      "list_commits": {
        "name": "list_commits",
        "description": "Get list of commits of a branch in a GitHub repository"
      },
      "list_issues": {
        "name": "list_issues",
        "description": "List issues in a GitHub repository with filtering options"
      },
      "update_issue": {
        "name": "update_issue",
        "description": "Update an existing issue in a GitHub repository"
      },
      "add_issue_comment": {
        "name": "add_issue_comment",
        "description": "Add a comment to an existing issue"
      },
      "search_code": {
        "name": "search_code",
        "description": "Search for code across GitHub repositories"
      },
      "search_issues": {
        "name": "search_issues",
        "description": "Search for issues and pull requests across GitHub repositories"
      },
      "search_users": {
        "name": "search_users",
        "description": "Search for users on GitHub"
      },
      "get_issue": {
        "name": "get_issue",
        "description": "Get details of a specific issue in a GitHub repository."
      },
      "create_release": {
        "name": "create_release",
        "description": "Create a new release in a GitHub repository"
      },
      "list_releases": {
        "name": "list_releases",
        "description": "List releases for a GitHub repository"
      },
      "delete_release": {
        "name": "delete_release",
        "description": "Delete a release from a GitHub repository"
      },
      "get_release_asset": {
        "name": "get_release_asset",
        "description": "Get a release asset from a GitHub repository"
      },
      "upload_release_asset": {
        "name": "upload_release_asset",
        "description": "Upload an asset to a GitHub release"
      },
      "create_tag": {
        "name": "create_tag",
        "description": "Create a new tag in a GitHub repository"
      },
      "create_pull_request_review": {
        "name": "create_pull_request_review",
        "description": "Create a review for a pull request"
      },
      "submit_pull_request_review": {
        "name": "submit_pull_request_review",
        "description": "Submit a pull request review (approve, request changes, or comment)"
      },
      "dismiss_pull_request_review": {
        "name": "dismiss_pull_request_review",
        "description": "Dismiss a pull request review"
      },
      "create_commit_status": {
        "name": "create_commit_status",
        "description": "Create a status for a commit (build passed/failed, etc.)"
      },
      "get_commit_statuses": {
        "name": "get_commit_statuses",
        "description": "Get statuses for a commit"
      },
      "get_combined_status": {
        "name": "get_combined_status",
        "description": "Get the combined status for a commit"
      },
      "get_rate_limit": {
        "name": "get_rate_limit",
        "description": "Check the current rate limit status"
      },
      "create_gist": {
        "name": "create_gist",
        "description": "Create a new gist"
      },
      "list_gists": {
        "name": "list_gists",
        "description": "List gists for the authenticated user"
      },
      "get_gist": {
        "name": "get_gist",
        "description": "Get a specific gist"
      },
      "list_projects": {
        "name": "list_projects",
        "description": "List projects for a repository"
      },
      "create_project": {
        "name": "create_project",
        "description": "Create a new project for a repository"
      },
      "list_project_columns": {
        "name": "list_project_columns",
        "description": "List columns for a project"
      },
      "create_project_column": {
        "name": "create_project_column",
        "description": "Create a new column for a project"
      },
      "create_project_card": {
        "name": "create_project_card",
        "description": "Create a new card in a project column"
      },
      "list_org_packages": {
        "name": "list_org_packages",
        "description": "List packages for an organization"
      },
      "list_user_packages": {
        "name": "list_user_packages",
        "description": "List packages for a user"
      },
      "list_repo_packages": {
        "name": "list_repo_packages",
        "description": "List packages for a repository"
      },
      "get_org_package": {
        "name": "get_org_package",
        "description": "Get a package for an organization"
      },
      "get_user_package": {
        "name": "get_user_package",
        "description": "Get a package for a user"
      },
      "get_repo_package": {
        "name": "get_repo_package",
        "description": "Get a package for a repository"
      },
      "get_pull_request_diff": {
        "name": "get_pull_request_diff",
        "description": "Get the diff for a pull request"
      }
    }
  },
  "github-repos-manager-mcp": {
    "category": "version-control",
    "path": "version-control/github-repos-manager-mcp.json",
    "validated": false,
    "tools": {}
  },
  "github-repository-explorer": {
    "category": "version-control",
    "path": "version-control/github-repository-explorer.json"
  },
  "github-pr-reviewer-(notion)": {
    "category": "version-control",
    "path": "version-control/github-pr-reviewer--notion.json"
  },
  "git-pr": {
    "category": "version-control",
    "path": "version-control/git-pr.json"
  },
  "git-summary": {
    "category": "version-control",
    "path": "version-control/git-summary.json"
  },
  "gitlab-code-review": {
    "category": "version-control",
    "path": "version-control/gitlab-code-review.json"
  },
  "github-graphql-api": {
    "category": "version-control",
    "path": "version-control/github-graphql-api.json"
  },
  "flux-gitops": {
    "category": "version-control",
    "path": "version-control/flux-gitops.json"
  },
  "@yoda.digital/gitlab-mcp-server": {
    "category": "version-control",
    "path": "version-control/yoda-digital-gitlab-mcp-server.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitLab project"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitLab projects"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitLab project"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitLab project"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitLab project in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitLab project"
      },
      "create_merge_request": {
        "name": "create_merge_request",
        "description": "Create a new merge request in a GitLab project"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitLab project to your account or specified namespace"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitLab project"
      },
      "list_group_projects": {
        "name": "list_group_projects",
        "description": "List all projects (repositories) within a specific GitLab group"
      },
      "get_project_events": {
        "name": "get_project_events",
        "description": "Get recent events/activities for a GitLab project"
      },
      "list_commits": {
        "name": "list_commits",
        "description": "Get commit history for a GitLab project"
      },
      "list_issues": {
        "name": "list_issues",
        "description": "Get issues for a GitLab project"
      },
      "list_merge_requests": {
        "name": "list_merge_requests",
        "description": "Get merge requests for a GitLab project"
      },
      "list_project_wiki_pages": {
        "name": "list_project_wiki_pages",
        "description": "List all wiki pages for a GitLab project"
      },
      "get_project_wiki_page": {
        "name": "get_project_wiki_page",
        "description": "Get a specific wiki page for a GitLab project"
      },
      "create_project_wiki_page": {
        "name": "create_project_wiki_page",
        "description": "Create a new wiki page for a GitLab project"
      },
      "edit_project_wiki_page": {
        "name": "edit_project_wiki_page",
        "description": "Edit an existing wiki page for a GitLab project"
      },
      "delete_project_wiki_page": {
        "name": "delete_project_wiki_page",
        "description": "Delete a wiki page from a GitLab project"
      },
      "upload_project_wiki_attachment": {
        "name": "upload_project_wiki_attachment",
        "description": "Upload an attachment to a GitLab project wiki"
      },
      "list_group_wiki_pages": {
        "name": "list_group_wiki_pages",
        "description": "List all wiki pages for a GitLab group"
      },
      "get_group_wiki_page": {
        "name": "get_group_wiki_page",
        "description": "Get a specific wiki page for a GitLab group"
      },
      "create_group_wiki_page": {
        "name": "create_group_wiki_page",
        "description": "Create a new wiki page for a GitLab group"
      },
      "edit_group_wiki_page": {
        "name": "edit_group_wiki_page",
        "description": "Edit an existing wiki page for a GitLab group"
      },
      "delete_group_wiki_page": {
        "name": "delete_group_wiki_page",
        "description": "Delete a wiki page from a GitLab group"
      },
      "upload_group_wiki_attachment": {
        "name": "upload_group_wiki_attachment",
        "description": "Upload an attachment to a GitLab group wiki"
      },
      "list_project_members": {
        "name": "list_project_members",
        "description": "List all members of a GitLab project (including inherited members)"
      },
      "list_group_members": {
        "name": "list_group_members",
        "description": "List all members of a GitLab group (including inherited members)"
      },
      "list_issue_notes": {
        "name": "list_issue_notes",
        "description": "Fetch all comments and system notes for a GitLab issue"
      },
      "list_issue_discussions": {
        "name": "list_issue_discussions",
        "description": "Fetch all discussions (threaded comments) for a GitLab issue"
      }
    }
  },
  "git-mcp": {
    "category": "version-control",
    "path": "version-control/git-mcp.json"
  },
  "git-pr-description-generator": {
    "category": "version-control",
    "path": "version-control/git-pr-description-generator.json"
  },
  "github-repo-mcp": {
    "category": "version-control",
    "path": "version-control/github-repo-mcp.json",
    "validated": true,
    "tools": {
      "getRepoAllDirectories": {
        "name": "getRepoAllDirectories",
        "description": ""
      },
      "getRepoDirectories": {
        "name": "getRepoDirectories",
        "description": ""
      },
      "getRepoFile": {
        "name": "getRepoFile",
        "description": ""
      }
    }
  },
  "github-chat-mcp": {
    "category": "version-control",
    "path": "version-control/github-chat-mcp.json"
  },
  "mcp-github-projects": {
    "category": "version-control",
    "path": "version-control/mcp-github-projects.json"
  },
  "github-explorer": {
    "category": "version-control",
    "path": "version-control/github-explorer.json"
  },
  "pygithub": {
    "category": "version-control",
    "path": "version-control/pygithub.json"
  },
  "mcp-server-diff-python": {
    "category": "version-control",
    "path": "version-control/mcp-server-diff-python.json"
  },
  "git": {
    "category": "version-control",
    "path": "version-control/git.json"
  },
  "@nexus2520/bitbucket-mcp-server": {
    "category": "version-control",
    "path": "version-control/nexus2520-bitbucket-mcp-server.json",
    "validated": true,
    "tools": {
      "get_pull_request": {
        "name": "get_pull_request",
        "description": "Get details of a Bitbucket pull request including merge commit information"
      },
      "list_pull_requests": {
        "name": "list_pull_requests",
        "description": "List pull requests for a repository with optional filters"
      },
      "create_pull_request": {
        "name": "create_pull_request",
        "description": "Create a new pull request"
      },
      "update_pull_request": {
        "name": "update_pull_request",
        "description": "Update an existing pull request"
      },
      "add_comment": {
        "name": "add_comment",
        "description": "Add a comment to a pull request. Supports: 1) General PR comments, 2) Replies to existing comments, 3) Inline comments on specific code lines (using line_number OR code_snippet), 4) Code suggestions for single or multi-line replacements. For inline comments, you can either provide exact line_number or use code_snippet to auto-detect the line."
      },
      "merge_pull_request": {
        "name": "merge_pull_request",
        "description": "Merge a pull request"
      },
      "list_branches": {
        "name": "list_branches",
        "description": "List branches in a repository"
      },
      "delete_branch": {
        "name": "delete_branch",
        "description": "Delete a branch"
      },
      "get_pull_request_diff": {
        "name": "get_pull_request_diff",
        "description": "Get the diff/changes for a pull request with optional filtering"
      },
      "approve_pull_request": {
        "name": "approve_pull_request",
        "description": "Approve a pull request"
      },
      "unapprove_pull_request": {
        "name": "unapprove_pull_request",
        "description": "Remove approval from a pull request"
      },
      "request_changes": {
        "name": "request_changes",
        "description": "Request changes on a pull request"
      },
      "remove_requested_changes": {
        "name": "remove_requested_changes",
        "description": "Remove change request from a pull request"
      },
      "get_branch": {
        "name": "get_branch",
        "description": "Get detailed information about a branch including associated pull requests"
      },
      "list_directory_content": {
        "name": "list_directory_content",
        "description": "List files and directories in a repository path"
      },
      "get_file_content": {
        "name": "get_file_content",
        "description": "Get file content from a repository with smart truncation for large files"
      }
    }
  },
  "gitee-mcp-server": {
    "category": "version-control",
    "path": "version-control/gitee-mcp-server.json",
    "validated": true,
    "tools": {
      "create_repository": {
        "name": "create_repository",
        "description": "创建 Gitee 仓库"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork Gitee 仓库"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "在 Gitee 仓库中创建一个新分支"
      },
      "list_branches": {
        "name": "list_branches",
        "description": "列出 Gitee 仓库中的分支"
      },
      "get_branch": {
        "name": "get_branch",
        "description": "获取 Gitee 仓库中的特定分支信息"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "获取 Gitee 仓库中文件或目录的内容"
      },
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "在 Gitee 仓库中创建或更新文件"
      },
      "push_files": {
        "name": "push_files",
        "description": "向 Gitee 仓库提交多个文件"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "在 Gitee 仓库中创建 Issue"
      },
      "list_issues": {
        "name": "list_issues",
        "description": "列出 Gitee 仓库中的 Issues"
      },
      "get_issue": {
        "name": "get_issue",
        "description": "获取 Gitee 仓库中的特定 Issue"
      },
      "update_issue": {
        "name": "update_issue",
        "description": "更新 Gitee 仓库中的 Issue"
      },
      "add_issue_comment": {
        "name": "add_issue_comment",
        "description": "向 Gitee 仓库中的 Issue 添加评论"
      },
      "create_pull_request": {
        "name": "create_pull_request",
        "description": "在 Gitee 仓库中创建 Pull Request"
      },
      "list_pull_requests": {
        "name": "list_pull_requests",
        "description": "列出 Gitee 仓库中的 Pull Requests"
      },
      "get_pull_request": {
        "name": "get_pull_request",
        "description": "获取 Gitee 仓库中的特定 Pull Request"
      },
      "update_pull_request": {
        "name": "update_pull_request",
        "description": "更新 Gitee 仓库中的 Pull Request"
      },
      "merge_pull_request": {
        "name": "merge_pull_request",
        "description": "合并 Gitee 仓库中的 Pull Request"
      },
      "get_user": {
        "name": "get_user",
        "description": "获取 Gitee 用户信息"
      },
      "get_current_user": {
        "name": "get_current_user",
        "description": "获取当前认证的 Gitee 用户信息"
      }
    }
  },
  "github-agentic-chat": {
    "category": "version-control",
    "path": "version-control/github-agentic-chat.json"
  },
  "gitee": {
    "category": "version-control",
    "path": "version-control/gitee.json"
  },
  "github-issues": {
    "category": "version-control",
    "path": "version-control/github-issues.json"
  },
  "bitbucket": {
    "category": "version-control",
    "path": "version-control/bitbucket.json"
  },
  "git-ingest": {
    "category": "version-control",
    "path": "version-control/git-ingest.json"
  },
  "conduit-(phabricator)": {
    "category": "version-control",
    "path": "version-control/conduit--phabricator.json"
  },
  "github-repository-inspector": {
    "category": "version-control",
    "path": "version-control/github-repository-inspector.json"
  },
  "gerrit-code-review": {
    "category": "version-control",
    "path": "version-control/gerrit-code-review.json"
  },
  "github-(via-oauth)": {
    "category": "version-control",
    "path": "version-control/github--via-oauth.json"
  },
  "github": {
    "category": "version-control",
    "path": "version-control/github.json"
  },
  "gitlab": {
    "category": "version-control",
    "path": "version-control/gitlab.json"
  },
  "github-pr-&-issue-analyzer": {
    "category": "version-control",
    "path": "version-control/github-pr---issue-analyzer.json"
  },
  "local-git": {
    "category": "version-control",
    "path": "version-control/local-git.json"
  },
  "gitlab-mr-confluence-linker": {
    "category": "version-control",
    "path": "version-control/gitlab-mr-confluence-linker.json"
  },
  "mcp-git-commit-aider": {
    "category": "version-control",
    "path": "version-control/mcp-git-commit-aider.json",
    "validated": true,
    "tools": {
      "commit_staged": {
        "name": "commit_staged",
        "description": "Commit staged changes with a specific message, appending \"(aider)\" to the committer name."
      }
    }
  },
  "openapi-link": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openapi-link.json"
  },
  "dify-workflows": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dify-workflows.json"
  },
  "radarr-and-sonarr": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/radarr-and-sonarr.json"
  },
  "kintone": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kintone.json"
  },
  "name-origin-predictor": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/name-origin-predictor.json"
  },
  "screenshot-capture": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/screenshot-capture.json"
  },
  "elevenlabs-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/elevenlabs-mcp.json"
  },
  "screen-capture": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/screen-capture.json"
  },
  "time-converter": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/time-converter.json"
  },
  "yango-tech-b2b-api": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/yango-tech-b2b-api.json"
  },
  "mcp-serverman": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-serverman.json"
  },
  "fashion-recommendation-system": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/fashion-recommendation-system.json"
  },
  "coda-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/coda-mcp.json",
    "validated": true,
    "tools": {
      "coda_list_documents": {
        "name": "coda_list_documents",
        "description": "List or search available documents"
      },
      "coda_list_pages": {
        "name": "coda_list_pages",
        "description": "List pages in the current document with pagination"
      },
      "coda_create_page": {
        "name": "coda_create_page",
        "description": "Create a page in the current document"
      },
      "coda_get_page_content": {
        "name": "coda_get_page_content",
        "description": "Get the content of a page as markdown"
      },
      "coda_peek_page": {
        "name": "coda_peek_page",
        "description": "Peek into the beginning of a page and return a limited number of lines"
      },
      "coda_replace_page_content": {
        "name": "coda_replace_page_content",
        "description": "Replace the content of a page with new markdown content"
      },
      "coda_append_page_content": {
        "name": "coda_append_page_content",
        "description": "Append new markdown content to the end of a page"
      },
      "coda_duplicate_page": {
        "name": "coda_duplicate_page",
        "description": "Duplicate a page in the current document"
      },
      "coda_rename_page": {
        "name": "coda_rename_page",
        "description": "Rename a page in the current document"
      }
    }
  },
  "tpc-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tpc-server.json"
  },
  "todoist": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/todoist.json"
  },
  "opgen-password-generator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/opgen-password-generator.json"
  },
  "llamaindex-documentation": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/llamaindex-documentation.json"
  },
  "canvas-learning-management-system": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/canvas-learning-management-system.json"
  },
  "@baruchiro/paperless-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/baruchiro-paperless-mcp.json",
    "validated": true,
    "tools": {
      "bulk_edit_documents": {
        "name": "bulk_edit_documents",
        "description": ""
      },
      "post_document": {
        "name": "post_document",
        "description": ""
      },
      "list_documents": {
        "name": "list_documents",
        "description": "List and filter documents by fields such as title, correspondent, document type, tag, storage path, creation date, and more. IMPORTANT: For queries like 'the last 3 contributions' or when searching by tag, correspondent, document type, or storage path, you should FIRST use the relevant tool (e.g., 'list_tags', 'list_correspondents', 'list_document_types', 'list_storage_paths') to find the correct ID, and then use that ID as a filter here. Only use the 'search' argument for free-text search when no specific field applies. Using the correct ID filter will yield much more accurate results."
      },
      "get_document": {
        "name": "get_document",
        "description": ""
      },
      "search_documents": {
        "name": "search_documents",
        "description": "Full text search for documents. This tool is for searching document content, title, and metadata using a full text query. For general document listing or filtering by fields, use 'list_documents' instead."
      },
      "download_document": {
        "name": "download_document",
        "description": ""
      },
      "list_tags": {
        "name": "list_tags",
        "description": "List all tags. IMPORTANT: When a user query may refer to a tag or document type, you should fetch all tags and all document types up front (with a large enough page_size), cache them for the session, and search locally for matches by name or slug before making further API calls. This reduces redundant requests and handles ambiguity between tags and document types efficiently."
      },
      "create_tag": {
        "name": "create_tag",
        "description": ""
      },
      "update_tag": {
        "name": "update_tag",
        "description": ""
      },
      "delete_tag": {
        "name": "delete_tag",
        "description": ""
      },
      "bulk_edit_tags": {
        "name": "bulk_edit_tags",
        "description": ""
      },
      "list_correspondents": {
        "name": "list_correspondents",
        "description": ""
      },
      "get_correspondent": {
        "name": "get_correspondent",
        "description": ""
      },
      "create_correspondent": {
        "name": "create_correspondent",
        "description": ""
      },
      "update_correspondent": {
        "name": "update_correspondent",
        "description": ""
      },
      "delete_correspondent": {
        "name": "delete_correspondent",
        "description": ""
      },
      "bulk_edit_correspondents": {
        "name": "bulk_edit_correspondents",
        "description": ""
      },
      "list_document_types": {
        "name": "list_document_types",
        "description": "List all document types. IMPORTANT: When a user query may refer to a document type or tag, you should fetch all document types and all tags up front (with a large enough page_size), cache them for the session, and search locally for matches by name or slug before making further API calls. This reduces redundant requests and handles ambiguity between tags and document types efficiently."
      },
      "get_document_type": {
        "name": "get_document_type",
        "description": ""
      },
      "create_document_type": {
        "name": "create_document_type",
        "description": ""
      },
      "update_document_type": {
        "name": "update_document_type",
        "description": ""
      },
      "delete_document_type": {
        "name": "delete_document_type",
        "description": ""
      },
      "bulk_edit_document_types": {
        "name": "bulk_edit_document_types",
        "description": ""
      }
    }
  },
  "bci-mcp-(brain-computer-interface)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/bci-mcp--brain-computer-interface.json"
  },
  "hirebase-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/hirebase-mcp.json"
  },
  "openapi-transformer": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openapi-transformer.json"
  },
  "mathematica-docs": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mathematica-docs.json"
  },
  "make-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/make-mcp.json"
  },
  "slim-utility-suite": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/slim-utility-suite.json"
  },
  "readwise-reader": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/readwise-reader.json"
  },
  "spiral-writer": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/spiral-writer.json"
  },
  "fl-studio": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/fl-studio.json"
  },
  "shaka-packager": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/shaka-packager.json"
  },
  "image-processor": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/image-processor.json"
  },
  "malaysia-prayer-time": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/malaysia-prayer-time.json"
  },
  "minimax-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/minimax-mcp.json"
  },
  "rqbit-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rqbit-mcp.json"
  },
  "openscad-3d-model-generator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openscad-3d-model-generator.json"
  },
  "chatterbox-tts": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/chatterbox-tts.json"
  },
  "mcp-pandoc": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-pandoc.json"
  },
  "@keegancsmith/linear-issues-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/keegancsmith-linear-issues-mcp-server.json",
    "validated": true,
    "tools": {
      "linear_get_issue": {
        "name": "linear_get_issue",
        "description": "Fetch details of a single Linear issue by providing its URL or identifier."
      },
      "linear_get_issue_with_comments": {
        "name": "linear_get_issue_with_comments",
        "description": "Fetch a Linear issue with all its comments and complete information."
      }
    }
  },
  "second-opinion": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/second-opinion.json"
  },
  "ask-human-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ask-human-mcp.json"
  },
  "goose-extensions": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/goose-extensions.json"
  },
  "powerpoint-manager": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/powerpoint-manager.json"
  },
  "chatgpt-(openai-gpt-4o)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/chatgpt--openai-gpt-4o.json"
  },
  "pymol": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/pymol.json"
  },
  "edge-text-to-speech": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/edge-text-to-speech.json"
  },
  "nexonco-(civic-precision-oncology)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/nexonco--civic-precision-oncology.json"
  },
  "video-&-audio-editor": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/video---audio-editor.json"
  },
  "book-fetch-(library-genesis)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/book-fetch--library-genesis.json"
  },
  "turkish-legal-databases": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/turkish-legal-databases.json"
  },
  "java-conferences": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/java-conferences.json"
  },
  "markitdown": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/markitdown.json"
  },
  "ai-expert-workflow-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ai-expert-workflow-mcp.json",
    "validated": true,
    "tools": {
      "consultExpert": {
        "name": "consultExpert",
        "description": ""
      },
      "generateDocument": {
        "name": "generateDocument",
        "description": ""
      },
      "expertWorkflow": {
        "name": "expertWorkflow",
        "description": ""
      }
    }
  },
  "locust": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/locust.json"
  },
  "ollama": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ollama.json"
  },
  "imagesorcery-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/imagesorcery-mcp.json"
  },
  "heybeauty-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/heybeauty-mcp.json",
    "validated": true,
    "tools": {
      "submit_tryon_task": {
        "name": "submit_tryon_task",
        "description": "Submit a tryon task with user image url and cloth image url"
      },
      "query_tryon_task": {
        "name": "query_tryon_task",
        "description": "Query a tryon task with task id"
      }
    }
  },
  "cheerlights": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/cheerlights.json"
  },
  "linear-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/linear-mcp-server.json",
    "validated": true,
    "tools": {
      "linear_create_issue": {
        "name": "linear_create_issue",
        "description": "Creates a new Linear issue with specified details. Use this to create tickets for tasks, bugs, or feature requests. Returns the created issue's identifier and URL. Required fields are title and teamId, with optional description, priority (0-4, where 0 is no priority and 1 is urgent), and status."
      },
      "linear_update_issue": {
        "name": "linear_update_issue",
        "description": "Updates an existing Linear issue's properties. Use this to modify issue details like title, description, priority, or status. Requires the issue ID and accepts any combination of updatable fields. Returns the updated issue's identifier and URL."
      },
      "linear_search_issues": {
        "name": "linear_search_issues",
        "description": "Searches Linear issues using flexible criteria. Supports filtering by any combination of: title/description text, team, status, assignee, labels, priority (1=urgent, 2=high, 3=normal, 4=low), and estimate. Returns up to 10 issues by default (configurable via limit)."
      },
      "linear_get_user_issues": {
        "name": "linear_get_user_issues",
        "description": "Retrieves issues assigned to a specific user or the authenticated user if no userId is provided. Returns issues sorted by last updated, including priority, status, and other metadata. Useful for finding a user's workload or tracking assigned tasks."
      },
      "linear_add_comment": {
        "name": "linear_add_comment",
        "description": "Adds a comment to an existing Linear issue. Supports markdown formatting in the comment body. Can optionally specify a custom user name and avatar for the comment. Returns the created comment's details including its URL."
      }
    }
  },
  "productboard-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/productboard-mcp.json",
    "validated": true,
    "tools": {
      "get_products": {
        "name": "get_products",
        "description": "Returns detail of all products. This API is paginated and the page limit is always 100"
      },
      "get_product_detail": {
        "name": "get_product_detail",
        "description": "Returns detailed information about a specific product"
      },
      "get_features": {
        "name": "get_features",
        "description": "Returns a list of all features. This API is paginated and the page limit is always 100"
      },
      "get_feature_detail": {
        "name": "get_feature_detail",
        "description": "Returns detailed information about a specific feature"
      },
      "get_components": {
        "name": "get_components",
        "description": "Returns a list of all components. This API is paginated and the page limit is always 100"
      },
      "get_component_detail": {
        "name": "get_component_detail",
        "description": "Returns detailed information about a specific component"
      },
      "get_feature_statuses": {
        "name": "get_feature_statuses",
        "description": "Returns a list of all feature statuses. This API is paginated and the page limit is always 100"
      },
      "get_notes": {
        "name": "get_notes",
        "description": "Returns a list of all notes"
      },
      "get_note_detail": {
        "name": "get_note_detail",
        "description": "Returns detailed information about a specific note"
      },
      "get_companies": {
        "name": "get_companies",
        "description": "Returns a list of all companies. This API is paginated and the page limit is always 100"
      },
      "get_company_detail": {
        "name": "get_company_detail",
        "description": "Returns detailed information about a specific company"
      }
    }
  },
  "dicom-connectivity": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dicom-connectivity.json"
  },
  "speech-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/speech-mcp.json"
  },
  "zoho-creator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/zoho-creator.json"
  },
  "esignatures": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/esignatures.json"
  },
  "daisys-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/daisys-mcp.json"
  },
  "elevenlabs": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/elevenlabs.json"
  },
  "fibery-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/fibery-mcp-server.json"
  },
  "think": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/think.json"
  },
  "chain-of-draft": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/chain-of-draft.json"
  },
  "unsplash": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/unsplash.json"
  },
  "todoist-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/todoist-mcp-server.json",
    "validated": true,
    "tools": {
      "listTasks": {
        "name": "listTasks",
        "description": ""
      },
      "getTask": {
        "name": "getTask",
        "description": ""
      },
      "createTask": {
        "name": "createTask",
        "description": ""
      },
      "updateTask": {
        "name": "updateTask",
        "description": ""
      },
      "completeTask": {
        "name": "completeTask",
        "description": ""
      },
      "reopenTask": {
        "name": "reopenTask",
        "description": ""
      },
      "deleteTask": {
        "name": "deleteTask",
        "description": ""
      },
      "listProjects": {
        "name": "listProjects",
        "description": ""
      },
      "getProject": {
        "name": "getProject",
        "description": ""
      },
      "createProject": {
        "name": "createProject",
        "description": ""
      },
      "updateProject": {
        "name": "updateProject",
        "description": ""
      },
      "archiveProject": {
        "name": "archiveProject",
        "description": ""
      },
      "unarchiveProject": {
        "name": "unarchiveProject",
        "description": ""
      },
      "deleteProject": {
        "name": "deleteProject",
        "description": ""
      },
      "getProjectCollaborators": {
        "name": "getProjectCollaborators",
        "description": ""
      },
      "listSections": {
        "name": "listSections",
        "description": ""
      },
      "getSection": {
        "name": "getSection",
        "description": ""
      },
      "createSection": {
        "name": "createSection",
        "description": ""
      },
      "updateSection": {
        "name": "updateSection",
        "description": ""
      },
      "deleteSection": {
        "name": "deleteSection",
        "description": ""
      },
      "listComments": {
        "name": "listComments",
        "description": ""
      },
      "getComment": {
        "name": "getComment",
        "description": ""
      },
      "createComment": {
        "name": "createComment",
        "description": ""
      },
      "updateComment": {
        "name": "updateComment",
        "description": ""
      },
      "deleteComment": {
        "name": "deleteComment",
        "description": ""
      },
      "listLabels": {
        "name": "listLabels",
        "description": ""
      },
      "getLabel": {
        "name": "getLabel",
        "description": ""
      },
      "createLabel": {
        "name": "createLabel",
        "description": ""
      },
      "updateLabel": {
        "name": "updateLabel",
        "description": ""
      },
      "deleteLabel": {
        "name": "deleteLabel",
        "description": ""
      },
      "getSharedLabels": {
        "name": "getSharedLabels",
        "description": ""
      },
      "renameSharedLabel": {
        "name": "renameSharedLabel",
        "description": ""
      },
      "removeSharedLabel": {
        "name": "removeSharedLabel",
        "description": ""
      }
    }
  },
  "promptopia-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/promptopia-mcp.json",
    "validated": true,
    "tools": {
      "add_prompt": {
        "name": "add_prompt",
        "description": "Adds a new prompt to the system (single content format)"
      },
      "update_prompt": {
        "name": "update_prompt",
        "description": "Updates an existing prompt (supports both single content and multi-message formats)"
      },
      "get_prompt": {
        "name": "get_prompt",
        "description": "Gets a prompt by its ID"
      },
      "list_prompts": {
        "name": "list_prompts",
        "description": "Lists all available prompts"
      },
      "delete_prompt": {
        "name": "delete_prompt",
        "description": "Deletes a prompt by its ID"
      },
      "apply_prompt": {
        "name": "apply_prompt",
        "description": "Applies variables to a template prompt and returns the result"
      },
      "add_multi_message_prompt": {
        "name": "add_multi_message_prompt",
        "description": "Adds a new multi-message prompt with role-based messages"
      }
    }
  },
  "midi-output": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/midi-output.json"
  },
  "idgen-(unique-identifier-generator)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/idgen--unique-identifier-generator.json"
  },
  "email-validator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/email-validator.json"
  },
  "whissle": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/whissle.json"
  },
  "things-3": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/things-3.json"
  },
  "audio-player": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/audio-player.json"
  },
  "video-editor-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/video-editor-mcp.json"
  },
  "agenda-app": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/agenda-app.json"
  },
  "nexusmind": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/nexusmind.json"
  },
  "current-time": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/current-time.json"
  },
  "mcp-applemusic": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-applemusic.json"
  },
  "claude-enhancements": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/claude-enhancements.json"
  },
  "dify-tools-bridge": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dify-tools-bridge.json"
  },
  "random-number-generator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/random-number-generator.json"
  },
  "@kajirita2002/esa-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kajirita2002-esa-mcp-server.json",
    "validated": true,
    "tools": {
      "esa_list_posts": {
        "name": "esa_list_posts",
        "description": "Get a list of posts in the team (with pagination support)"
      },
      "esa_get_post": {
        "name": "esa_get_post",
        "description": "Get detailed information about a specific post"
      },
      "esa_create_post": {
        "name": "esa_create_post",
        "description": "Create a new post"
      },
      "esa_update_post": {
        "name": "esa_update_post",
        "description": "Update an existing post"
      },
      "esa_list_comments": {
        "name": "esa_list_comments",
        "description": "Get a list of comments for a post"
      },
      "esa_get_comment": {
        "name": "esa_get_comment",
        "description": "Get a specific comment"
      },
      "esa_create_comment": {
        "name": "esa_create_comment",
        "description": "Post a comment to an article"
      },
      "esa_get_members": {
        "name": "esa_get_members",
        "description": "Get a list of team members"
      },
      "esa_get_member": {
        "name": "esa_get_member",
        "description": "Get information about a specific team member"
      }
    }
  },
  "jmeter": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/jmeter.json"
  },
  "rabbitmq": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rabbitmq.json"
  },
  "siliconflow-voice-transcription": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/siliconflow-voice-transcription.json"
  },
  "powerpoint": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/powerpoint.json"
  },
  "eclass-(uoa)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/eclass--uoa.json"
  },
  "@pinkpixel/notification-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/pinkpixel-notification-mcp.json",
    "validated": true,
    "tools": {
      "play_notification": {
        "name": "play_notification",
        "description": "Play a notification sound to indicate task completion"
      }
    }
  },
  "@greirson/mcp-todoist": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/greirson-mcp-todoist.json",
    "validated": true,
    "tools": {
      "todoist_task_create": {
        "name": "todoist_task_create",
        "description": "Create a new task in Todoist with optional description, due date, priority, labels, deadline, project, and section"
      },
      "todoist_task_get": {
        "name": "todoist_task_get",
        "description": "Retrieve tasks from Todoist with optional filtering or get a specific task by ID"
      },
      "todoist_task_update": {
        "name": "todoist_task_update",
        "description": "Update an existing task found by ID or partial name search. Supports updating content, description, due date, priority, labels, deadline, project, and section"
      },
      "todoist_task_delete": {
        "name": "todoist_task_delete",
        "description": "Delete a task found by ID or partial name search (case-insensitive)"
      },
      "todoist_task_complete": {
        "name": "todoist_task_complete",
        "description": "Mark a task as complete found by ID or partial name search (case-insensitive)"
      },
      "todoist_tasks_bulk_create": {
        "name": "todoist_tasks_bulk_create",
        "description": "Create multiple tasks at once for improved efficiency. Each task can have full attributes like individual task creation."
      },
      "todoist_tasks_bulk_update": {
        "name": "todoist_tasks_bulk_update",
        "description": "Update multiple tasks at once based on search criteria. Very efficient for updating many tasks with the same changes."
      },
      "todoist_tasks_bulk_delete": {
        "name": "todoist_tasks_bulk_delete",
        "description": "Delete multiple tasks at once based on search criteria. Use with caution - this will permanently delete matching tasks."
      },
      "todoist_tasks_bulk_complete": {
        "name": "todoist_tasks_bulk_complete",
        "description": "Complete multiple tasks at once based on search criteria. Efficiently mark many tasks as done."
      },
      "todoist_project_get": {
        "name": "todoist_project_get",
        "description": "Get a list of all projects from Todoist with their IDs and names"
      },
      "todoist_section_get": {
        "name": "todoist_section_get",
        "description": "Get a list of sections within a project from Todoist with their IDs and names"
      },
      "todoist_project_create": {
        "name": "todoist_project_create",
        "description": "Create a new project in Todoist"
      },
      "todoist_section_create": {
        "name": "todoist_section_create",
        "description": "Create a new section within a project in Todoist"
      },
      "todoist_comment_create": {
        "name": "todoist_comment_create",
        "description": "Add a comment to a task in Todoist by task ID or task name"
      },
      "todoist_comment_get": {
        "name": "todoist_comment_get",
        "description": "Get comments for a task or project in Todoist"
      },
      "todoist_label_get": {
        "name": "todoist_label_get",
        "description": "Get all labels in Todoist"
      },
      "todoist_label_create": {
        "name": "todoist_label_create",
        "description": "Create a new label in Todoist"
      },
      "todoist_label_update": {
        "name": "todoist_label_update",
        "description": "Update an existing label in Todoist"
      },
      "todoist_label_delete": {
        "name": "todoist_label_delete",
        "description": "Delete a label from Todoist"
      },
      "todoist_label_stats": {
        "name": "todoist_label_stats",
        "description": "Get usage statistics for all labels in Todoist"
      },
      "todoist_subtask_create": {
        "name": "todoist_subtask_create",
        "description": "Create a new subtask under a parent task in Todoist"
      },
      "todoist_subtasks_bulk_create": {
        "name": "todoist_subtasks_bulk_create",
        "description": "Create multiple subtasks under a parent task in a single operation"
      },
      "todoist_task_convert_to_subtask": {
        "name": "todoist_task_convert_to_subtask",
        "description": "Convert an existing task to a subtask of another task"
      },
      "todoist_subtask_promote": {
        "name": "todoist_subtask_promote",
        "description": "Promote a subtask to a main task (remove parent relationship)"
      },
      "todoist_task_hierarchy_get": {
        "name": "todoist_task_hierarchy_get",
        "description": "Get a task with all its subtasks in a hierarchical structure"
      },
      "todoist_test_connection": {
        "name": "todoist_test_connection",
        "description": "Test the connection to Todoist API and verify API token validity"
      },
      "todoist_test_all_features": {
        "name": "todoist_test_all_features",
        "description": "Run comprehensive tests on all Todoist MCP features to verify functionality"
      },
      "todoist_test_performance": {
        "name": "todoist_test_performance",
        "description": "Measure performance and response times of Todoist API operations"
      }
    }
  },
  "claude-api": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/claude-api.json"
  },
  "docbase": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/docbase.json"
  },
  "kokoro-tts": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kokoro-tts.json"
  },
  "rocketmq": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rocketmq.json"
  },
  "deepseek": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/deepseek.json"
  },
  "ietf-rfc-documents": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ietf-rfc-documents.json"
  },
  "ticketmaster-events": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ticketmaster-events.json"
  },
  "sequential-thinking": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sequential-thinking.json"
  },
  "fal.ai": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/fal-ai.json"
  },
  "rhino-8": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rhino-8.json"
  },
  "bos-(basic-orchestration-system)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/bos--basic-orchestration-system.json"
  },
  "harvest": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/harvest.json"
  },
  "mcp-summarization-functions": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-summarization-functions.json",
    "validated": false,
    "tools": {}
  },
  "minizinc-complex-logic-solver": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/minizinc-complex-logic-solver.json"
  },
  "mcp-server-ens": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-ens.json",
    "validated": true,
    "tools": {
      "resolve-name": {
        "name": "resolve-name",
        "description": "Resolve an ENS name to an Ethereum address"
      },
      "reverse-lookup": {
        "name": "reverse-lookup",
        "description": "Get the ENS name for an Ethereum address"
      },
      "get-text-record": {
        "name": "get-text-record",
        "description": "Get a text record for an ENS name"
      },
      "check-availability": {
        "name": "check-availability",
        "description": "Check if an ENS name is available for registration"
      },
      "get-all-records": {
        "name": "get-all-records",
        "description": "Get all available information for an ENS name"
      },
      "get-subdomains": {
        "name": "get-subdomains",
        "description": "Get subdomains for an ENS name"
      },
      "get-name-history": {
        "name": "get-name-history",
        "description": "Get the history of an ENS name"
      },
      "get-registration-price": {
        "name": "get-registration-price",
        "description": "Get the price to register an ENS name"
      }
    }
  },
  "aqicn-air-quality": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/aqicn-air-quality.json"
  },
  "gemini": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/gemini.json"
  },
  "todoist-taskmaster": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/todoist-taskmaster.json"
  },
  "uniprot": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/uniprot.json"
  },
  "mcp-toolhouse": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-toolhouse.json"
  },
  "mcp-apifox": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-apifox.json",
    "validated": true,
    "tools": {
      "get_apifox_project_id_and_api_id_from_url": {
        "name": "get_apifox_project_id_and_api_id_from_url",
        "description": "Get the project ID and API ID of Apifox from the URL."
      },
      "get_apifox_api_info": {
        "name": "get_apifox_api_info",
        "description": "Get the info of Apifox API."
      }
    }
  },
  "soundcloud-downloader": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/soundcloud-downloader.json"
  },
  "@tfedorko/licensespring-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tfedorko-licensespring-mcp-server.json",
    "validated": true,
    "tools": {
      "activate_license": {
        "name": "activate_license",
        "description": "Activate a license with hardware ID and product code"
      },
      "check_license": {
        "name": "check_license",
        "description": "Check license status and validity"
      },
      "deactivate_license": {
        "name": "deactivate_license",
        "description": "Deactivate a license for a specific hardware ID"
      },
      "add_consumption": {
        "name": "add_consumption",
        "description": "Add consumption units to a license"
      },
      "add_feature_consumption": {
        "name": "add_feature_consumption",
        "description": "Add consumption units to a specific feature"
      },
      "get_trial_key": {
        "name": "get_trial_key",
        "description": "Generate a trial license key for a product"
      },
      "get_product_details": {
        "name": "get_product_details",
        "description": "Get detailed information about a product"
      },
      "track_device_variables": {
        "name": "track_device_variables",
        "description": "Track custom variables for a device"
      },
      "get_device_variables": {
        "name": "get_device_variables",
        "description": "Get tracked variables for a device"
      },
      "floating_release": {
        "name": "floating_release",
        "description": "Release a floating license"
      },
      "floating_borrow": {
        "name": "floating_borrow",
        "description": "Borrow a floating license for offline use"
      },
      "change_password": {
        "name": "change_password",
        "description": "Change password for a user-based license"
      },
      "get_versions": {
        "name": "get_versions",
        "description": "Get available software versions for a product"
      },
      "get_installation_file": {
        "name": "get_installation_file",
        "description": "Get installation file download information"
      },
      "get_sso_url": {
        "name": "get_sso_url",
        "description": "Get Single Sign-On URL for customer portal access"
      },
      "get_customer_license_users": {
        "name": "get_customer_license_users",
        "description": "Get customer license users for a specific license"
      },
      "activate_offline": {
        "name": "activate_offline",
        "description": "Activate a license for offline use with hardware ID and product code"
      },
      "deactivate_offline": {
        "name": "deactivate_offline",
        "description": "Deactivate a license for offline use with hardware ID and product code"
      }
    }
  },
  "blender": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/blender.json"
  },
  "deltatask": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/deltatask.json"
  },
  "personal-assistant": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/personal-assistant.json"
  },
  "mcp-server-calculator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-calculator.json"
  },
  "sandbox-fusion": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sandbox-fusion.json"
  },
  "molecule-visualization-(chimerax,-pymol)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/molecule-visualization--chimerax--pymol.json"
  },
  "suzieq-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/suzieq-mcp.json"
  },
  "@inkdropapp/mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/inkdropapp-mcp-server.json",
    "validated": true,
    "tools": {
      "read-note": {
        "name": "read-note",
        "description": "Retrieve the complete contents of the note by its ID from the database."
      },
      "search-notes": {
        "name": "search-notes",
        "description": "List all notes that contain a given keyword.\nThe result does not include entire note bodies as they are truncated in 200 characters.\nYou have to retrieve the full note content by calling `read-note`.\nHere are tips to specify keywords effectively:\n\n## Use special qualifiers to narrow down results\n\nYou can use special qualifiers to get more accurate results. See the qualifiers and their usage examples:\n\n- **book**  \n  `book:Blog`: Searches for notes in the 'Blog' notebook.\n  `book:\"Desktop App\"`: Searches for notes in the 'Desktop App' notebook.\n- **bookId**\n  `bookId:kGlLniaV`: Searches for notes in the notebook ID 'book:kGlLniaV'.\n- **tag**  \n  `tag:JavaScript`: Searches for all notes having the 'JavaScript' tag. Read more about [tags](https://docs.inkdrop.app/manual/write-notes#tag-notes).\n- **status**  \n  `status:onHold`: Searches for all notes with the 'On hold' status. Read more about [statuses](/reference/note-statuses).\n- **title**  \n  `title:\"JavaScript setTimeout\"`: Searches for the note with the specified title.\n- **body**  \n  `body:KEYWORD`: Searches for a specific word in all notes. Equivalent to a [global search](#search-for-notes-across-all-notebooks).\n\n### Combine qualifiers\n\nYou can combine the filter qualifiers to refine data even more.\n\n**Find notes that contain the word 'Hello' and have the 'Issue' tag.**\n\n```text\nHello tag:Issue\n```\n\n**Find notes that contain the word 'Typescript,' have the 'Contribution' tag, and the 'Completed' status**\n\n```text\nTypescript tag:Contribution status:Completed\n```\n\n## Search for text with spaces\n\nTo find the text that includes spaces, put the text into the double quotation marks (\"):\n\n```text\n\"database associations\"\n```\n\n## Exclude text from search\n\nTo exclude text from the search results or ignore a specific qualifier, put the minus sign (-) before it. You can also combine the exclusions. See the examples:\n\n- `-book:Backend \"closure functions\"`: Ignores the 'Backend' notebook while searching for the 'closure functions' phrase.\n- `-tag:JavaScript`: Ignores all notes having the 'JavaScript' tag.\n- `-book:Typescript tag:work \"Data types\"`: Ignores the 'Typescript' notebook and the 'work' tag while searching for the 'Data types' phrase.\n- `-status:dropped title:\"Sprint 10.0\" debounce`: Ignores notes with the 'Dropped' status while searching for the 'debounce' word in the note with the 'Sprint 10.0' title.\n- `-\"Phrase to ignore\" \"in the rest of a sentence\"`: Ignores the 'Phrase to ignore' part while searching for 'in the rest of a sentence'.\n\nNote that you can't specify excluding modifiers only without including conditions.\n\n**WARNING**: Make sure to enter a text to search for after the exclusion modifier.\n\n- ✅ Will work  \n  `-book:Backend \"closure functions\"`\n\n- ⛔️ Won't work  \n   `-book:Backend`. There's no query. Inkdrop doesn't understand what to search for.\n    "
      },
      "list-notes": {
        "name": "list-notes",
        "description": "List all notes with specified conditions.\nThe result does not include entire note bodies as they are truncated in 200 characters.\nYou have to retrieve the full note content by calling `read-note`.\n"
      },
      "create-note": {
        "name": "create-note",
        "description": "Create a new note in the database"
      },
      "update-note": {
        "name": "update-note",
        "description": "Update the existing note in the database. You should retrieve the existing note with `read-note` first. When updating the note, you must specify not only the changed fields but also all the un-changed fields."
      },
      "list-notebooks": {
        "name": "list-notebooks",
        "description": "Retrieve a list of all notebooks"
      },
      "list-tags": {
        "name": "list-tags",
        "description": "Retrieve a list of all tags"
      }
    }
  },
  "ynu": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ynu.json"
  },
  "uuid-generator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/uuid-generator.json"
  },
  "jexchange-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/jexchange-mcp-server.json"
  },
  "mcp-gsuite": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-gsuite.json"
  },
  "govee": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/govee.json"
  },
  "haiguitang-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/haiguitang-mcp.json"
  },
  "deepseek-thinker-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/deepseek-thinker-mcp.json",
    "validated": true,
    "tools": {
      "get-deepseek-thinker": {
        "name": "get-deepseek-thinker",
        "description": "think with deepseek"
      }
    }
  },
  "dify-workflow": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dify-workflow.json"
  },
  "toolhouse": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/toolhouse.json"
  },
  "stk-(ansys/agi-systems-tool-kit)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/stk--ansys-agi-systems-tool-kit.json"
  },
  "resemble": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/resemble.json"
  },
  "markdown-to-pdf-converter": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/markdown-to-pdf-converter.json"
  },
  "intelliglow-smart-lighting": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/intelliglow-smart-lighting.json"
  },
  "synthcal-(supabase-calendar)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/synthcal--supabase-calendar.json"
  },
  "mcp-google-docs": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-google-docs.json"
  },
  "screenshot": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/screenshot.json"
  },
  "expose-(json-rpc-proxy)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/expose--json-rpc-proxy.json"
  },
  "@promptz/mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/promptz-mcp.json",
    "validated": true,
    "tools": {
      "list_prompts": {
        "name": "list_prompts",
        "description": "List available prompts from promptz.dev"
      },
      "get_prompt": {
        "name": "get_prompt",
        "description": "Get a specific prompt by ID or name"
      },
      "list_rules": {
        "name": "list_rules",
        "description": "List available project rules from promptz.dev"
      },
      "get_rule": {
        "name": "get_rule",
        "description": "Get a specific project rule by name"
      }
    }
  },
  "yolo-computer-vision": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/yolo-computer-vision.json"
  },
  "ffmpeg": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ffmpeg.json"
  },
  "music-analysis": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/music-analysis.json"
  },
  "vllm-benchmark": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/vllm-benchmark.json"
  },
  "taskmate": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/taskmate.json"
  },
  "plex-media-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/plex-media-server.json"
  },
  "safetyculture": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/safetyculture.json"
  },
  "voice-recorder-(whisper)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/voice-recorder--whisper.json"
  },
  "time-mcp-local": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/time-mcp-local.json"
  },
  "cort-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/cort-mcp.json"
  },
  "mcp-server-memos": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-memos.json"
  },
  "computer-vision-tools": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/computer-vision-tools.json"
  },
  "employee-leave-manager": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/employee-leave-manager.json"
  },
  "fiware-context-broker": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/fiware-context-broker.json"
  },
  "@nutrient-sdk/dws-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/nutrient-sdk-dws-mcp-server.json",
    "validated": true,
    "tools": {
      "document_processor": {
        "name": "document_processor",
        "description": "Processes documents using Nutrient DWS Processor API. Reads from and writes to file system or sandbox (if enabled).\n\nFeatures:\n• Import XFDF annotations\n• Flatten annotations\n• OCR processing\n• Page rotation\n• Watermarking (text/image)\n• Redaction creation and application\n\nOutput formats: PDF, PDF/A, images (PNG, JPEG, WebP), JSON extraction, Office (DOCX, XLSX, PPTX)"
      },
      "document_signer": {
        "name": "document_signer",
        "description": "Digitally signs PDF files using Nutrient DWS Sign API. Reads from and writes to file system or sandbox (if enabled).\n\nSignature types:\n• CMS/PKCS#7 (standard digital signatures)\n• CAdES (advanced electronic signatures)\n\nAppearance options:\n• Visible or invisible signatures\n• Multiple display modes (signature only, description only, or both)\n• Customizable elements (signer name, reason, location, date)\n• Support for watermarks and custom graphics\n\nPositioning:\n• Place on specific page coordinates\n• Use existing signature form fields"
      },
      "directory_tree": {
        "name": "directory_tree",
        "description": "Returns the directory tree of a given path. All paths are resolved relative to root directory."
      }
    }
  },
  "linkedin-job-assistant": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/linkedin-job-assistant.json"
  },
  "kroger-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kroger-mcp.json"
  },
  "awslabs.aws-documentation-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/awslabs-aws-documentation-mcp-server.json"
  },
  "registry": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/registry.json"
  },
  "cgv-cinema": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/cgv-cinema.json"
  },
  "notion-markdown": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/notion-markdown.json"
  },
  "k6-load-testing": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/k6-load-testing.json"
  },
  "allvoicelab-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/allvoicelab-mcp.json"
  },
  "nsaf-(neuro-symbolic-autonomy-framework)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/nsaf--neuro-symbolic-autonomy-framework.json"
  },
  "think_mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/think_mcp.json"
  },
  "@thomaswawra/server-spotify": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/thomaswawra-server-spotify.json",
    "validated": true,
    "tools": {
      "get_access_token": {
        "name": "get_access_token",
        "description": "Get a valid Spotify access token for API requests"
      },
      "search": {
        "name": "search",
        "description": "Search for tracks, albums, artists, or playlists"
      },
      "get_artist": {
        "name": "get_artist",
        "description": "Get Spotify catalog information for an artist"
      },
      "get_multiple_artists": {
        "name": "get_multiple_artists",
        "description": "Get Spotify catalog information for multiple artists"
      },
      "get_artist_top_tracks": {
        "name": "get_artist_top_tracks",
        "description": "Get Spotify catalog information about an artist's top tracks"
      },
      "get_artist_related_artists": {
        "name": "get_artist_related_artists",
        "description": "Get Spotify catalog information about artists similar to a given artist"
      },
      "get_artist_albums": {
        "name": "get_artist_albums",
        "description": "Get Spotify catalog information about an artist's albums"
      },
      "get_album": {
        "name": "get_album",
        "description": "Get Spotify catalog information for an album"
      },
      "get_album_tracks": {
        "name": "get_album_tracks",
        "description": "Get Spotify catalog information for an album's tracks"
      },
      "get_multiple_albums": {
        "name": "get_multiple_albums",
        "description": "Get Spotify catalog information for multiple albums"
      },
      "get_track": {
        "name": "get_track",
        "description": "Get Spotify catalog information for a track"
      },
      "get_available_genres": {
        "name": "get_available_genres",
        "description": "Get a list of available genres for recommendations"
      },
      "get_new_releases": {
        "name": "get_new_releases",
        "description": "Get a list of new album releases featured in Spotify"
      },
      "get_recommendations": {
        "name": "get_recommendations",
        "description": "Get track recommendations based on seed tracks, artists, or genres"
      },
      "get_audiobook": {
        "name": "get_audiobook",
        "description": "Get Spotify catalog information for an audiobook"
      },
      "get_multiple_audiobooks": {
        "name": "get_multiple_audiobooks",
        "description": "Get Spotify catalog information for multiple audiobooks"
      },
      "get_audiobook_chapters": {
        "name": "get_audiobook_chapters",
        "description": "Get Spotify catalog information about an audiobook's chapters"
      },
      "get_playlist": {
        "name": "get_playlist",
        "description": "Get a playlist owned by a Spotify user"
      },
      "get_playlist_tracks": {
        "name": "get_playlist_tracks",
        "description": "Get full details of the tracks of a playlist"
      },
      "get_playlist_items": {
        "name": "get_playlist_items",
        "description": "Get full details of the items of a playlist"
      },
      "modify_playlist": {
        "name": "modify_playlist",
        "description": "Change a playlist's name and public/private state"
      },
      "add_tracks_to_playlist": {
        "name": "add_tracks_to_playlist",
        "description": "Add one or more tracks to a playlist"
      },
      "remove_tracks_from_playlist": {
        "name": "remove_tracks_from_playlist",
        "description": "Remove one or more tracks from a playlist"
      },
      "get_current_user_playlists": {
        "name": "get_current_user_playlists",
        "description": "Get a list of the playlists owned or followed by the current Spotify user"
      },
      "get_featured_playlists": {
        "name": "get_featured_playlists",
        "description": "Get a list of Spotify featured playlists"
      },
      "get_category_playlists": {
        "name": "get_category_playlists",
        "description": "Get a list of Spotify playlists tagged with a particular category"
      }
    }
  },
  "todoist-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/todoist-mcp.json",
    "validated": true,
    "tools": {
      "get_comments_list": {
        "name": "get_comments_list",
        "description": "Get comments list from Todoist"
      },
      "create_comments": {
        "name": "create_comments",
        "description": "Create new comments in Todoist"
      },
      "get_comments": {
        "name": "get_comments",
        "description": "Get comments from Todoist by ID"
      },
      "update_comments": {
        "name": "update_comments",
        "description": "Update comments in Todoist"
      },
      "delete_comments": {
        "name": "delete_comments",
        "description": "Delete comments in Todoist"
      },
      "get_labels_list": {
        "name": "get_labels_list",
        "description": "Get all personal labels from Todoist"
      },
      "create_labels": {
        "name": "create_labels",
        "description": "Create a new personal labels in Todoist"
      },
      "get_labels": {
        "name": "get_labels",
        "description": "Get a personal label from Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "update_labels": {
        "name": "update_labels",
        "description": "Update a personal label in Todoist"
      },
      "delete_labels": {
        "name": "delete_labels",
        "description": "Delete a personal label in Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "get_shared_labels": {
        "name": "get_shared_labels",
        "description": "Get all shared labels from Todoist"
      },
      "rename_shared_labels": {
        "name": "rename_shared_labels",
        "description": "Rename a shared label in Todoist"
      },
      "remove_shared_labels": {
        "name": "remove_shared_labels",
        "description": "Remove a shared label in Todoist"
      },
      "get_projects_list": {
        "name": "get_projects_list",
        "description": "Get all projects from Todoist"
      },
      "create_projects": {
        "name": "create_projects",
        "description": "Create new projects in Todoist"
      },
      "get_projects": {
        "name": "get_projects",
        "description": "Get projects from Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "update_projects": {
        "name": "update_projects",
        "description": "Update projects in Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "delete_projects": {
        "name": "delete_projects",
        "description": "Delete projects from Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "get_collaborators": {
        "name": "get_collaborators",
        "description": "Get all collaborators for a project in Todoist"
      },
      "move_projects": {
        "name": "move_projects",
        "description": "Move a projects to a different parent in Todoist"
      },
      "get_sections_list": {
        "name": "get_sections_list",
        "description": "Get sections list from Todoist"
      },
      "create_sections": {
        "name": "create_sections",
        "description": "Create new sections in Todoist"
      },
      "get_sections": {
        "name": "get_sections",
        "description": "Get sections from Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "update_sections": {
        "name": "update_sections",
        "description": "Update sections in Todoist"
      },
      "delete_sections": {
        "name": "delete_sections",
        "description": "Delete sections in Todoist\nEither 'id' or the 'name' to identify the target."
      },
      "get_tasks_list": {
        "name": "get_tasks_list",
        "description": "Get tasks list from Todoist"
      },
      "create_tasks": {
        "name": "create_tasks",
        "description": "Create new tasks in Todoist"
      },
      "get_tasks": {
        "name": "get_tasks",
        "description": "Get tasks from Todoist\nEither 'task_id' or the 'task_name' to identify the target."
      },
      "update_tasks": {
        "name": "update_tasks",
        "description": "Update tasks in Todoist\nEither 'task_id' or the 'task_name' to identify the target."
      },
      "close_tasks": {
        "name": "close_tasks",
        "description": "Close tasks in Todoist\nEither 'task_id' or the 'task_name' to identify the target."
      },
      "reopen_tasks": {
        "name": "reopen_tasks",
        "description": "Reopen tasks in Todoist\nEither 'task_id' or the 'task_name' to identify the target."
      },
      "delete_tasks": {
        "name": "delete_tasks",
        "description": "Delete tasks from Todoist\nEither 'task_id' or the 'task_name' to identify the target."
      },
      "move_tasks": {
        "name": "move_tasks",
        "description": "Move tasks to a different parent or section in Todoist. Exactly one of parent_id, section_id, or project_id must be provided"
      },
      "get_completed_tasks": {
        "name": "get_completed_tasks",
        "description": "Get completed tasks from Todoist with filtering options"
      },
      "utils_get_colors": {
        "name": "utils_get_colors",
        "description": "Get available colors for projects, labels, filters in Todoist"
      }
    }
  },
  "iflytek-workflow": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/iflytek-workflow.json"
  },
  "langchain-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/langchain-mcp.json"
  },
  "shopify": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/shopify.json"
  },
  "api-tester-(openai)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/api-tester--openai.json"
  },
  "chain-of-thought": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/chain-of-thought.json"
  },
  "bilibili": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/bilibili.json"
  },
  "sonos": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sonos.json"
  },
  "story-protocol": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/story-protocol.json"
  },
  "canon-camera-control": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/canon-camera-control.json"
  },
  "openapi-swagger-converter": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openapi-swagger-converter.json"
  },
  "samtools": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/samtools.json"
  },
  "four-in-a-row": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/four-in-a-row.json"
  },
  "davinci-resolve": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/davinci-resolve.json"
  },
  "mcp-server-replicate": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-replicate.json"
  },
  "openai": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openai.json"
  },
  "birdnet-pi": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/birdnet-pi.json"
  },
  "giphy": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/giphy.json"
  },
  "microsoft-word": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/microsoft-word.json"
  },
  "mcp-simple-timeserver": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-simple-timeserver.json"
  },
  "typecast-ai": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/typecast-ai.json"
  },
  "waifu-queue": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/waifu-queue.json"
  },
  "mcp-think-tool": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-think-tool.json"
  },
  "spotify-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/spotify-mcp.json"
  },
  "tidal-music": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tidal-music.json"
  },
  "audio-interface": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/audio-interface.json"
  },
  "medrxiv-research": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/medrxiv-research.json"
  },
  "neodb": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/neodb.json"
  },
  "kicad": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kicad.json"
  },
  "swagger": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/swagger.json"
  },
  "mcp-ankiconnect": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-ankiconnect.json"
  },
  "@pinkpixel/taskflow-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/pinkpixel-taskflow-mcp.json",
    "validated": true,
    "tools": {
      "plan_task": {
        "name": "plan_task",
        "description": "Register a new user request and plan its associated tasks. You must provide 'originalRequest' and 'tasks', and optionally 'splitDetails'.\n\nTasks can now include subtasks, which are smaller units of work that make up a task. All subtasks must be completed before a task can be marked as done.\n\nYou can also include:\n- 'dependencies': List of project or task-specific dependencies (libraries, tools, etc.)\n- 'notes': General notes about the project (preferences, guidelines, etc.)\n- 'outputPath': Path to save a Markdown file with the task plan for reference. It's recommended to use absolute paths (e.g., 'C:/Users/username/Documents/task-plan.md') rather than relative paths for more reliable file creation.\n\nThis tool initiates a new workflow for handling a user's request. The workflow is as follows:\n1. Use 'plan_task' to register a request and its tasks (with optional subtasks, dependencies, and notes).\n2. After adding tasks, you MUST use 'get_next_task' to retrieve the first task. A progress table will be displayed.\n3. Use 'get_next_task' to retrieve the next uncompleted task.\n4. If the task has subtasks, complete each subtask using 'mark_subtask_done' before marking the task as done.\n5. **IMPORTANT:** After marking a task as done, a progress table will be displayed showing the updated status of all tasks. The assistant MUST NOT proceed to another task without the user's approval. The user must explicitly approve the completed task.\n6. Once a task is approved, you can proceed to 'get_next_task' again to fetch the next pending task.\n7. Repeat this cycle until all tasks are done.\n8. After all tasks are completed (and approved), 'get_next_task' will indicate that all tasks are done and that the request awaits approval for full completion.\n9. The user must then approve the entire request's completion. If the user does not approve and wants more tasks, you can again use 'plan_task' to add new tasks and continue the cycle.\n\nThe critical point is to always wait for user approval after completing each task and after all tasks are done, wait for request completion approval. Do not proceed automatically."
      },
      "get_next_task": {
        "name": "get_next_task",
        "description": "Given a 'requestId', return the next pending task (not done yet). If all tasks are completed, it will indicate that no more tasks are left and that you must ask the user what to do next.\n\nA progress table showing the current status of all tasks will be displayed with each response.\n\nIf the same task is returned again or if no new task is provided after a task was marked as done, you MUST NOT proceed. In such a scenario, you must prompt the user for approval before calling 'get_next_task' again. Do not skip the user's approval step.\nIn other words:\n- After calling 'mark_task_done', do not call 'get_next_task' again until 'approve_task_completion' is called by the user.\n- If 'get_next_task' returns 'all_tasks_done', it means all tasks have been completed. At this point, confirm with the user that all tasks have been completed, and optionally add more tasks via 'plan_task'."
      },
      "mark_task_done": {
        "name": "mark_task_done",
        "description": "Mark a given task as done after you've completed it. Provide 'requestId' and 'taskId', and optionally 'completedDetails'.\n\nAfter marking a task as done, a progress table will be displayed showing the updated status of all tasks.\n\nAfter this, DO NOT proceed to 'get_next_task' again until the user has explicitly approved this completed task using 'approve_task_completion'."
      },
      "open_task_details": {
        "name": "open_task_details",
        "description": "Get details of a specific task by 'taskId'. This is for inspecting task information at any point."
      },
      "list_requests": {
        "name": "list_requests",
        "description": "List all requests with their basic information and summary of tasks. This provides a quick overview of all requests in the system."
      },
      "add_tasks_to_request": {
        "name": "add_tasks_to_request",
        "description": "Add new tasks to an existing request. This allows extending a request with additional tasks.\n\nTasks can include subtasks and dependencies. A progress table will be displayed showing all tasks including the newly added ones."
      },
      "update_task": {
        "name": "update_task",
        "description": "Update an existing task's title and/or description. Only uncompleted tasks can be updated.\n\nA progress table will be displayed showing the updated task information."
      },
      "delete_task": {
        "name": "delete_task",
        "description": "Delete a specific task from a request. Only uncompleted tasks can be deleted.\n\nA progress table will be displayed showing the remaining tasks after deletion."
      },
      "add_subtasks": {
        "name": "add_subtasks",
        "description": "Add subtasks to an existing task. Provide 'requestId', 'taskId', and 'subtasks' array.\n\nSubtasks are smaller units of work that make up a task. All subtasks must be completed before a task can be marked as done.\n\nA progress table will be displayed showing the updated task with its subtasks."
      },
      "mark_subtask_done": {
        "name": "mark_subtask_done",
        "description": "Mark a subtask as done. Provide 'requestId', 'taskId', and 'subtaskId'.\n\nA progress table will be displayed showing the updated status of all tasks and subtasks.\n\nAll subtasks must be completed before a task can be marked as done."
      },
      "update_subtask": {
        "name": "update_subtask",
        "description": "Update a subtask's title or description. Provide 'requestId', 'taskId', 'subtaskId', and optionally 'title' and/or 'description'.\n\nOnly uncompleted subtasks can be updated.\n\nA progress table will be displayed showing the updated task with its subtasks."
      },
      "delete_subtask": {
        "name": "delete_subtask",
        "description": "Delete a subtask from a task. Provide 'requestId', 'taskId', and 'subtaskId'.\n\nOnly uncompleted subtasks can be deleted.\n\nA progress table will be displayed showing the updated task with its remaining subtasks."
      },
      "export_task_status": {
        "name": "export_task_status",
        "description": "Export the current status of all tasks in a request to a file.\n\nThis tool allows you to save the current state of tasks, subtasks, dependencies, and notes to a file for reference.\n\nYou can specify the output format as 'markdown', 'json', or 'html'.\n\nIt's recommended to use absolute paths (e.g., 'C:/Users/username/Documents/task-status.md') rather than relative paths for more reliable file creation."
      },
      "add_note": {
        "name": "add_note",
        "description": "Add a note to a request. Notes can contain important information about the project, such as user preferences or guidelines.\n\nNotes are displayed in the task progress table and can be referenced when working on tasks."
      },
      "update_note": {
        "name": "update_note",
        "description": "Update an existing note's title or content.\n\nProvide the 'requestId' and 'noteId', and optionally 'title' and/or 'content' to update."
      },
      "delete_note": {
        "name": "delete_note",
        "description": "Delete a note from a request.\n\nProvide the 'requestId' and 'noteId' of the note to delete."
      },
      "add_dependency": {
        "name": "add_dependency",
        "description": "Add a dependency to a request or task.\n\nDependencies can be libraries, tools, or other requirements needed for the project or specific tasks.\n\nIf 'taskId' is provided, the dependency will be added to that specific task. Otherwise, it will be added to the request."
      }
    }
  },
  "revit-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/revit-mcp.json"
  },
  "koi-agent-personality-network": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/koi-agent-personality-network.json"
  },
  "dart-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dart-mcp-server.json",
    "validated": true,
    "tools": {
      "get_config": {
        "name": "get_config",
        "description": "Get information about the user's space, including all of the possible values that can be provided to other endpoints. This includes available assignees, dartboards, folders, statuses, tags, priorities, sizes, and all custom property definitions."
      },
      "create_task": {
        "name": "create_task",
        "description": "Create a new task in Dart. You can specify title, description, status, priority, size, dates, dartboard, assignees, tags, parent task, and custom properties."
      },
      "list_tasks": {
        "name": "list_tasks",
        "description": "List tasks from Dart with optional filtering parameters. You can filter by assignee, status, dartboard, priority, due date, and more."
      },
      "get_task": {
        "name": "get_task",
        "description": "Retrieve an existing task by its ID. Returns the task's information including title, description, status, priority, dates, custom properties, and more."
      },
      "update_task": {
        "name": "update_task",
        "description": "Update an existing task. You can modify any of its properties including title, description, status, priority, dates, assignees, tags, and custom properties."
      },
      "delete_task": {
        "name": "delete_task",
        "description": "Move an existing task to the trash, where it can be recovered if needed. Nothing else about the task will be changed."
      },
      "create_doc": {
        "name": "create_doc",
        "description": "Create a new doc in Dart. You can specify title, text content, and folder."
      },
      "list_docs": {
        "name": "list_docs",
        "description": "List docs from Dart with optional filtering parameters. You can filter by folder, title, text content, and more."
      },
      "get_doc": {
        "name": "get_doc",
        "description": "Retrieve an existing doc by its ID. Returns the doc's information including title, text content, folder, and more."
      },
      "update_doc": {
        "name": "update_doc",
        "description": "Update an existing doc. You can modify its title, text content, and folder."
      },
      "delete_doc": {
        "name": "delete_doc",
        "description": "Move an existing doc to the trash, where it can be recovered if needed. Nothing else about the doc will be changed."
      },
      "add_task_comment": {
        "name": "add_task_comment",
        "description": "Add a comment to an existing task without modifying the task description. Comments support markdown formatting."
      },
      "list_task_comments": {
        "name": "list_task_comments",
        "description": "List comments from Dart with optional filtering parameters. You can filter by author, task, text content, dates, and more."
      },
      "get_dartboard": {
        "name": "get_dartboard",
        "description": "Retrieve an existing dartboard by its ID. Returns the dartboard's information including title, description, and all tasks within it."
      },
      "get_folder": {
        "name": "get_folder",
        "description": "Retrieve an existing folder by its ID. Returns the folder's information including title, description, and all docs within it."
      },
      "get_view": {
        "name": "get_view",
        "description": "Retrieve an existing view by its ID. Returns the view's information including title, description, and all tasks within it."
      }
    }
  },
  "dubco-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dubco-mcp-server.json",
    "validated": true,
    "tools": {
      "create_link": {
        "name": "create_link",
        "description": "Create a new short link on dub.co, asking the user which domain to use"
      },
      "update_link": {
        "name": "update_link",
        "description": "Update an existing short link on dub.co"
      },
      "delete_link": {
        "name": "delete_link",
        "description": "Delete a short link on dub.co"
      }
    }
  },
  "systems-modeling": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/systems-modeling.json"
  },
  "creator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/creator.json"
  },
  "deepseek-r1-reasoning": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/deepseek-r1-reasoning.json"
  },
  "thoughtful-claude-(deepseek-r1)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/thoughtful-claude--deepseek-r1.json"
  },
  "congress.gov": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/congress-gov.json"
  },
  "dan-vega-courses": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dan-vega-courses.json"
  },
  "emqx": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/emqx.json"
  },
  "revitmcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/revitmcp.json"
  },
  "@abhiz123/todoist-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/abhiz123-todoist-mcp-server.json",
    "validated": true,
    "tools": {
      "todoist_create_task": {
        "name": "todoist_create_task",
        "description": "Create a new task in Todoist with optional description, due date, and priority"
      },
      "todoist_get_tasks": {
        "name": "todoist_get_tasks",
        "description": "Get a list of tasks from Todoist with various filters"
      },
      "todoist_update_task": {
        "name": "todoist_update_task",
        "description": "Update an existing task in Todoist by searching for it by name and then updating it"
      },
      "todoist_delete_task": {
        "name": "todoist_delete_task",
        "description": "Delete a task from Todoist by searching for it by name"
      },
      "todoist_complete_task": {
        "name": "todoist_complete_task",
        "description": "Mark a task as complete by searching for it by name"
      }
    }
  },
  "polygon-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/polygon-mcp.json",
    "validated": false,
    "tools": {}
  },
  "brewfather": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/brewfather.json"
  },
  "rocq": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rocq.json"
  },
  "qgis": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/qgis.json"
  },
  "alexa-shopping-list": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/alexa-shopping-list.json"
  },
  "@rijk/directus-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rijk-directus-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "sequential-story": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sequential-story.json"
  },
  "amazon-bedrock-nova": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/amazon-bedrock-nova.json"
  },
  "coding-todo": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/coding-todo.json"
  },
  "flowise": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/flowise.json"
  },
  "webflow-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/webflow-mcp-server.json",
    "validated": true,
    "tools": {
      "ask_webflow_ai": {
        "name": "ask_webflow_ai",
        "description": "Ask Webflow AI about anything related to Webflow API."
      },
      "collections_list": {
        "name": "collections_list",
        "description": "List all CMS collections in a site. Returns collection metadata including IDs, names, and schemas."
      },
      "collections_get": {
        "name": "collections_get",
        "description": "Get detailed information about a specific CMS collection including its schema and field definitions."
      },
      "collections_create": {
        "name": "collections_create",
        "description": "Create a new CMS collection in a site with specified name and schema."
      },
      "collection_fields_create_static": {
        "name": "collection_fields_create_static",
        "description": "Create a new static field in a CMS collection (e.g., text, number, date, etc.)."
      },
      "collection_fields_create_option": {
        "name": "collection_fields_create_option",
        "description": "Create a new option field in a CMS collection with predefined choices."
      },
      "collection_fields_create_reference": {
        "name": "collection_fields_create_reference",
        "description": "Create a new reference field in a CMS collection that links to items in another collection."
      },
      "collection_fields_update": {
        "name": "collection_fields_update",
        "description": "Update properties of an existing field in a CMS collection."
      },
      "collections_items_create_item_live": {
        "name": "collections_items_create_item_live",
        "description": "Create and publish new items in a CMS collection directly to the live site."
      },
      "collections_items_update_items_live": {
        "name": "collections_items_update_items_live",
        "description": "Update and publish existing items in a CMS collection directly to the live site."
      },
      "collections_items_list_items": {
        "name": "collections_items_list_items",
        "description": "List items in a CMS collection with optional filtering and sorting."
      },
      "collections_items_create_item": {
        "name": "collections_items_create_item",
        "description": "Create new items in a CMS collection as drafts."
      },
      "collections_items_update_items": {
        "name": "collections_items_update_items",
        "description": "Update existing items in a CMS collection as drafts."
      },
      "collections_items_publish_items": {
        "name": "collections_items_publish_items",
        "description": "Publish draft items in a CMS collection to make them live."
      },
      "collections_items_delete_item": {
        "name": "collections_items_delete_item",
        "description": "Delete an item in a CMS collection. Items will only be deleted in the primary locale unless a cmsLocaleId is included in the request. "
      },
      "components_list": {
        "name": "components_list",
        "description": "List all components in a site. Returns component metadata including IDs, names, and versions."
      },
      "components_get_content": {
        "name": "components_get_content",
        "description": "Get the content structure and data for a specific component including text, images, and nested components."
      },
      "components_update_content": {
        "name": "components_update_content",
        "description": "Update content on a component in secondary locales by modifying text nodes and property overrides."
      },
      "components_get_properties": {
        "name": "components_get_properties",
        "description": "Get component properties including default values and configuration for a specific component."
      },
      "components_update_properties": {
        "name": "components_update_properties",
        "description": "Update component properties for localization to customize behavior in different languages."
      },
      "pages_list": {
        "name": "pages_list",
        "description": "List all pages within a site. Returns page metadata including IDs, titles, and slugs."
      },
      "pages_get_metadata": {
        "name": "pages_get_metadata",
        "description": "Get metadata for a specific page including SEO settings, Open Graph data, and page status (draft/published)."
      },
      "pages_update_page_settings": {
        "name": "pages_update_page_settings",
        "description": "Update page settings including SEO metadata, Open Graph data, slug, and publishing status."
      },
      "pages_get_content": {
        "name": "pages_get_content",
        "description": "Get the content structure and data for a specific page including all elements and their properties."
      },
      "pages_update_static_content": {
        "name": "pages_update_static_content",
        "description": "Update content on a static page in secondary locales by modifying text nodes and property overrides."
      },
      "site_registered_scripts_list": {
        "name": "site_registered_scripts_list",
        "description": "List all registered scripts for a site. To apply a script to a site or page, first register it via the Register Script endpoints, then apply it using the relevant Site or Page endpoints."
      },
      "site_applied_scripts_list": {
        "name": "site_applied_scripts_list",
        "description": "Get all scripts applied to a site by the App. To apply a script to a site or page, first register it via the Register Script endpoints, then apply it using the relevant Site or Page endpoints."
      },
      "add_inline_site_script": {
        "name": "add_inline_site_script",
        "description": "Register an inline script for a site. Inline scripts are limited to 2000 characters. "
      },
      "delete_all_site_scripts": {
        "name": "delete_all_site_scripts",
        "description": ""
      },
      "sites_list": {
        "name": "sites_list",
        "description": "List all sites accessible to the authenticated user. Returns basic site information including site ID, name, and last published date."
      },
      "sites_get": {
        "name": "sites_get",
        "description": "Get detailed information about a specific site including its settings, domains, and publishing status."
      },
      "sites_publish": {
        "name": "sites_publish",
        "description": "Publish a site to specified domains. This will make the latest changes live on the specified domains."
      }
    }
  },
  "reddit": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/reddit.json"
  },
  "casual-mcp-server-words": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/casual-mcp-server-words.json"
  },
  "mochi-flashcards": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mochi-flashcards.json"
  },
  "mcp-server-supos": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-supos.json",
    "validated": false,
    "tools": {}
  },
  "mcp-slicer": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-slicer.json"
  },
  "tmf620-product-catalog-management": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tmf620-product-catalog-management.json"
  },
  "home-assistant": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/home-assistant.json"
  },
  "pdf-to-markdown-converter": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/pdf-to-markdown-converter.json"
  },
  "say-(text-to-speech)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/say--text-to-speech.json"
  },
  "user-prompt": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/user-prompt.json"
  },
  "replicate": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/replicate.json"
  },
  "tianji-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tianji-mcp-server.json",
    "validated": true,
    "tools": {
      "tianji_get_survey_results": {
        "name": "tianji_get_survey_results",
        "description": "Query survey questionnaire result data"
      },
      "tianji_get_survey_info": {
        "name": "tianji_get_survey_info",
        "description": "Get basic information of a specified survey questionnaire"
      },
      "tianji_get_all_survey_list": {
        "name": "tianji_get_all_survey_list",
        "description": "Get all survey list in the workspace"
      },
      "tianji_get_website_list": {
        "name": "tianji_get_website_list",
        "description": "Get all websites in the workspace"
      },
      "tianji_get_website_info": {
        "name": "tianji_get_website_info",
        "description": "Get detailed information about a specific website"
      },
      "tianji_get_website_stats": {
        "name": "tianji_get_website_stats",
        "description": "Get statistics data for a website"
      },
      "tianji_get_website_pageviews": {
        "name": "tianji_get_website_pageviews",
        "description": "Get pageview and session data for a website"
      },
      "tianji_get_website_metrics": {
        "name": "tianji_get_website_metrics",
        "description": "Get specific metrics for a website (url, referrer, browser, os, etc.)"
      }
    }
  },
  "@automation-ai-labs/mcp-wait": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/automation-ai-labs-mcp-wait.json",
    "validated": true,
    "tools": {
      "wait": {
        "name": "wait",
        "description": "Wait for a specified number of seconds, useful for waiting for other tasks to finish"
      }
    }
  },
  "personal-health-tracker": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/personal-health-tracker.json"
  },
  "sudoku-solver": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sudoku-solver.json"
  },
  "tuya-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tuya-mcp-server.json"
  },
  "allure-test-reports": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/allure-test-reports.json"
  },
  "rosetta-symmetry": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rosetta-symmetry.json"
  },
  "tts-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tts-mcp.json",
    "validated": false,
    "tools": {}
  },
  "owl-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/owl-mcp.json"
  },
  "just-prompt-(multi-llm-provider)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/just-prompt--multi-llm-provider.json"
  },
  "human-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/human-mcp.json"
  },
  "ttaat": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ttaat.json"
  },
  "mindm": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mindm.json"
  },
  "mcp-llms-txt": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-llms-txt.json"
  },
  "multi-llm-cross-check": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/multi-llm-cross-check.json"
  },
  "@missionsquad/mcp-helper-tools": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/missionsquad-mcp-helper-tools.json",
    "validated": true,
    "tools": {
      "encodeBase64": {
        "name": "encodeBase64",
        "description": "Encode input data to Base64"
      },
      "decodeBase64": {
        "name": "decodeBase64",
        "description": "Decode Base64 input data"
      },
      "encodeUrl": {
        "name": "encodeUrl",
        "description": "Encode input data to URL-encoded format"
      },
      "decodeUrl": {
        "name": "decodeUrl",
        "description": "Decode URL-encoded input data"
      },
      "encodeHtml": {
        "name": "encodeHtml",
        "description": "Encode input data to HTML-encoded format"
      },
      "decodeHtml": {
        "name": "decodeHtml",
        "description": "Decode HTML-encoded input data"
      },
      "geolocate": {
        "name": "geolocate",
        "description": "Get geolocation information for an IP address or domain"
      },
      "clearGeoCache": {
        "name": "clearGeoCache",
        "description": "Clear the geolocation cache"
      },
      "generateUUID": {
        "name": "generateUUID",
        "description": "Generate a random UUID using crypto.randomUUID()"
      },
      "generateQRCode": {
        "name": "generateQRCode",
        "description": "Generate a QR code from input data"
      },
      "convertTimezone": {
        "name": "convertTimezone",
        "description": "Convert date/time between timezones using Luxon"
      },
      "listTimezones": {
        "name": "listTimezones",
        "description": "List all available IANA timezones"
      },
      "hashData": {
        "name": "hashData",
        "description": "Hash input data using Node.js crypto module"
      },
      "compareHashes": {
        "name": "compareHashes",
        "description": "Compare two hashes in constant time"
      }
    }
  },
  "e-gonghun-(korean-military-service-records)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/e-gonghun--korean-military-service-records.json"
  },
  "spring-i/o": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/spring-i-o.json"
  },
  "grpc-reflection": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/grpc-reflection.json"
  },
  "@cyanheads/toolkit-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/cyanheads-toolkit-mcp-server.json",
    "validated": true,
    "tools": {
      "getCurrentTime": {
        "name": "getCurrentTime",
        "description": "Get current time formatted with Intl.DateTimeFormat"
      },
      "getSystemInfo": {
        "name": "getSystemInfo",
        "description": "Get system information using Node.js os module"
      },
      "getLoadAverage": {
        "name": "getLoadAverage",
        "description": "Get system load average for 1, 5, and 15 minutes"
      },
      "getNetworkInterfaces": {
        "name": "getNetworkInterfaces",
        "description": "Get network interface information"
      },
      "checkConnectivity": {
        "name": "checkConnectivity",
        "description": "Test TCP connectivity to a host and port"
      },
      "getPublicIP": {
        "name": "getPublicIP",
        "description": "Get public IP address using ip-api.com"
      },
      "pingHost": {
        "name": "pingHost",
        "description": "Ping a host using system ping command"
      },
      "traceroute": {
        "name": "traceroute",
        "description": "Perform traceroute to a host"
      },
      "geolocate": {
        "name": "geolocate",
        "description": "Get geolocation information for an IP address or domain"
      },
      "clearGeoCache": {
        "name": "clearGeoCache",
        "description": "Clear the geolocation cache"
      },
      "generateUUID": {
        "name": "generateUUID",
        "description": "Generate a random UUID using crypto.randomUUID()"
      },
      "generateQRCode": {
        "name": "generateQRCode",
        "description": "Generate a QR code from input data"
      },
      "convertTimezone": {
        "name": "convertTimezone",
        "description": "Convert date/time between timezones using Luxon"
      },
      "listTimezones": {
        "name": "listTimezones",
        "description": "List all available IANA timezones"
      },
      "hashData": {
        "name": "hashData",
        "description": "Hash input data using Node.js crypto module"
      },
      "compareHashes": {
        "name": "compareHashes",
        "description": "Compare two hashes in constant time"
      }
    }
  },
  "tripo-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tripo-mcp.json"
  },
  "raindrop.io": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/raindrop-io.json"
  },
  "user-feedback": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/user-feedback.json"
  },
  "grok-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/grok-mcp.json",
    "validated": true,
    "tools": {
      "chat_completion": {
        "name": "chat_completion",
        "description": "Generate a response using Grok AI chat completion"
      },
      "image_understanding": {
        "name": "image_understanding",
        "description": "Analyze images using Grok AI vision capabilities (Note: Grok 3 may support image creation)"
      },
      "function_calling": {
        "name": "function_calling",
        "description": "Use Grok AI to call functions based on user input"
      }
    }
  },
  "rfk-jr-gateway": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/rfk-jr-gateway.json"
  },
  "trinity": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/trinity.json"
  },
  "pdf-to-png": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/pdf-to-png.json"
  },
  "tasks": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tasks.json"
  },
  "qq-music": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/qq-music.json"
  },
  "any-openapi": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/any-openapi.json"
  },
  "mcp-ollama": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-ollama.json"
  },
  "dust": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dust.json"
  },
  "temporal-workflows": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/temporal-workflows.json"
  },
  "promptlab": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/promptlab.json"
  },
  "mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server.json"
  },
  "slidespeak": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/slidespeak.json"
  },
  "biodiversity": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/biodiversity.json"
  },
  "speech-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/speech-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "powerpoint-presentations": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/powerpoint-presentations.json"
  },
  "confluence-data-center": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/confluence-data-center.json"
  },
  "openapi": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openapi.json"
  },
  "kaltura": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kaltura.json"
  },
  "jadx-android-decompiler": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/jadx-android-decompiler.json"
  },
  "@testomatio/mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/testomatio-mcp.json",
    "validated": false,
    "tools": {}
  },
  "dolphinscheduler": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dolphinscheduler.json"
  },
  "mcp-google-calendar": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-google-calendar.json",
    "validated": false,
    "tools": {}
  },
  "confluence": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/confluence.json"
  },
  "selector-ai": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/selector-ai.json"
  },
  "@kunihiros/patsnap-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/kunihiros-patsnap-mcp.json",
    "validated": true,
    "tools": {
      "get_patent_trends": {
        "name": "get_patent_trends",
        "description": "Analyze annual application and issued trends for patents. Understand the trends of patents related to specific technology fields or keywords. Either keywords or IPC classification must be specified."
      },
      "get_word_cloud": {
        "name": "get_word_cloud",
        "description": "Obtain a snapshot of frequently occurring keywords/phrases from the most recent 5,000 published patents. Identify common terms for refining searches. Returns up to 100 keywords. Either keywords or IPC classification must be specified."
      },
      "get_wheel_of_innovation": {
        "name": "get_wheel_of_innovation",
        "description": "Provides a two-tiered hierarchical view of keywords/phrases in a technology space. Identify common terms and their associations. Based on the most recent 5,000 publications. Either keywords or IPC classification must be specified."
      },
      "get_most_cited_patents": {
        "name": "get_most_cited_patents",
        "description": "View the top patents cited most frequently by others, indicating influential or core technology. Returns at most Top 10 patents. Note: Search must contain either keywords or IPC. If both are provided, IPC is prioritized."
      },
      "get_top_authorities_of_origin": {
        "name": "get_top_authorities_of_origin",
        "description": "Returns the top authorities (priority countries) of origin for patents matching the criteria. Analyze main sources of priority filings. Either keywords or IPC classification must be specified."
      },
      "get_top_inventors": {
        "name": "get_top_inventors",
        "description": "Shows the top inventors in the technology field. Evaluate top performers or identify potential recruits. Returns up to the top 10 inventors. Note: Search must contain either keywords or IPC. If both are provided, IPC is prioritized."
      },
      "get_top_assignees": {
        "name": "get_top_assignees",
        "description": "Shows the top companies (assignees) with the largest patent portfolios. Identify largest players and competitive threats. Returns up to the top 10 assignees. Note: Search must contain either keywords or IPC. If both are provided, IPC is prioritized."
      },
      "get_simple_legal_status": {
        "name": "get_simple_legal_status",
        "description": "Provides a breakdown of the simple legal status (e.g., Active, Inactive, Pending) for patents in the technology field. Understand the proportion of patents currently in effect. Note: Search must contain either keywords or IPC. If both are provided, IPC is prioritized."
      },
      "get_most_litigated_patents": {
        "name": "get_most_litigated_patents",
        "description": "Identify the patents involved in the most litigation cases, indicating potential risk in a technology space. Returns the Top 10 patents by litigation count. Note: Search must contain either keywords or IPC. If both are provided, IPC is prioritized."
      },
      "get_portfolio_value_distribution": {
        "name": "get_portfolio_value_distribution",
        "description": "Assess the lucrativeness of a technology space based on the spread of estimated patent valuation (simple families). Higher value buckets indicate more lucrative technologies. Design patents are excluded. Note: Search must contain either keywords or IPC. If both are provided, IPC is prioritized."
      }
    }
  },
  "hippycampus-(openapi-tools)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/hippycampus--openapi-tools.json"
  },
  "hashnode": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/hashnode.json"
  },
  "mcp-timeserver": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-timeserver.json"
  },
  "@ibraheem4/eventbrite-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ibraheem4-eventbrite-mcp.json",
    "validated": true,
    "tools": {
      "search_events": {
        "name": "search_events",
        "description": "Search for Eventbrite events based on various criteria"
      },
      "get_event": {
        "name": "get_event",
        "description": "Get detailed information about a specific Eventbrite event"
      },
      "get_categories": {
        "name": "get_categories",
        "description": "Get a list of Eventbrite event categories"
      },
      "get_venue": {
        "name": "get_venue",
        "description": "Get information about a specific Eventbrite venue"
      }
    }
  },
  "reaper": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/reaper.json"
  },
  "fastmcp-todo": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/fastmcp-todo.json"
  },
  "meme-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/meme-mcp.json",
    "validated": true,
    "tools": {
      "generateMeme": {
        "name": "generateMeme",
        "description": "Generate a meme image from Imgflip using the numeric template id and text"
      }
    }
  },
  "mcp-server-novacv": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-novacv.json",
    "validated": true,
    "tools": {
      "generate_resume_from_text": {
        "name": "generate_resume_from_text",
        "description": "一键将简历文本转换为精美PDF简历，支持多种模板。只需提供简历文本内容，系统会自动进行格式转换并生成专业PDF文件，无需手动处理JSON数据。可选择不同简历模板和定制选项。"
      },
      "get_templates": {
        "name": "get_templates",
        "description": "获取所有可用的简历模板，返回模板列表及其详细信息，包括模板ID、名称、缩略图等。帮助用户选择最适合的简历风格。"
      },
      "convert_resume_text": {
        "name": "convert_resume_text",
        "description": "将纯文本格式的简历内容转换为标准JSON Resume格式。系统会智能识别简历中的各个部分（如个人信息、工作经历、教育背景等），并按照国际通用的JSON Resume标准进行结构化处理，方便后续编辑和格式转换。"
      },
      "analyze_resume_text": {
        "name": "analyze_resume_text",
        "description": "对简历文本进行深度分析，提供专业评估和改进建议。系统会分析简历的完整性、关键词使用、技能匹配度等方面，并给出针对性的优化建议，帮助求职者打造更具竞争力的简历。"
      }
    }
  },
  "dicom": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/dicom.json"
  },
  "signaturit": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/signaturit.json"
  },
  "script-generator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/script-generator.json"
  },
  "legifrance": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/legifrance.json"
  },
  "school-tools-(canvas-&-gradescope)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/school-tools--canvas---gradescope.json"
  },
  "shopify-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/shopify-mcp-server.json",
    "validated": true,
    "tools": {
      "get-products": {
        "name": "get-products",
        "description": "Get all products or search by title"
      },
      "get-products-by-collection": {
        "name": "get-products-by-collection",
        "description": "Get products from a specific collection"
      },
      "get-products-by-ids": {
        "name": "get-products-by-ids",
        "description": "Get products by their IDs"
      },
      "get-variants-by-ids": {
        "name": "get-variants-by-ids",
        "description": "Get product variants by their IDs"
      },
      "get-customers": {
        "name": "get-customers",
        "description": "Get shopify customers with pagination support"
      },
      "tag-customer": {
        "name": "tag-customer",
        "description": "Add tags to a customer"
      },
      "get-orders": {
        "name": "get-orders",
        "description": "Get shopify orders with advanced filtering and sorting"
      },
      "get-order": {
        "name": "get-order",
        "description": "Get a single order by ID"
      },
      "create-discount": {
        "name": "create-discount",
        "description": "Create a basic discount code"
      },
      "create-draft-order": {
        "name": "create-draft-order",
        "description": "Create a draft order"
      },
      "complete-draft-order": {
        "name": "complete-draft-order",
        "description": "Complete a draft order"
      },
      "get-collections": {
        "name": "get-collections",
        "description": "Get all collections"
      },
      "get-shop": {
        "name": "get-shop",
        "description": "Get shop details"
      },
      "get-shop-details": {
        "name": "get-shop-details",
        "description": "Get extended shop details including shipping countries"
      },
      "manage-webhook": {
        "name": "manage-webhook",
        "description": "Subscribe, find, or unsubscribe webhooks"
      }
    }
  },
  "elevenlabs-text-to-speech": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/elevenlabs-text-to-speech.json"
  },
  "videocapture": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/videocapture.json"
  },
  "chain-of-draft-prompt-tool": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/chain-of-draft-prompt-tool.json"
  },
  "things-app": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/things-app.json"
  },
  "@sanity/mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sanity-mcp-server.json",
    "validated": false,
    "tools": {}
  },
  "hr-policy-chatbot": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/hr-policy-chatbot.json"
  },
  "odoo-mcp-improved": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/odoo-mcp-improved.json"
  },
  "@moralisweb3/api-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/moralisweb3-api-mcp-server.json",
    "validated": true,
    "tools": {
      "getwalletnfts": {
        "name": "getwalletnfts",
        "description": "Fetch all NFTs held by a specified wallet address. Use `token_addresses` to filter by one or many specific contract(s). Each NFT returned includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available."
      },
      "getmultiplenfts": {
        "name": "getmultiplenfts",
        "description": "Get NFT metadata for one or many NFTs. Accepts an array of up to 25 `tokens`, each requiring `token_address` and `token_id`. Each NFT returned includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available."
      },
      "getwalletnftcollections": {
        "name": "getwalletnftcollections",
        "description": "Fetch all NFT Collections held by a specified wallet address. Each Collection returned includes on-chain metadata as well as off-chain metadata, floor prices and more where available."
      },
      "getcontractnfts": {
        "name": "getcontractnfts",
        "description": "Fetch all NFTs for a given collection. Each NFT returned includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available."
      },
      "getnftowners": {
        "name": "getnftowners",
        "description": "Identify wallets owning NFTs from a specific contract."
      },
      "getnftcontracttransfers": {
        "name": "getnftcontracttransfers",
        "description": "Get NFT transfers for a contract, with options to filter by date, token, or other parameters."
      },
      "getnftbycontracttraits": {
        "name": "getnftbycontracttraits",
        "description": "Find NFTs in a contract matching specific traits, perfect for attribute-based searches."
      },
      "getnfttraitsbycollection": {
        "name": "getnfttraitsbycollection",
        "description": "Explore the distinct traits of NFTs in a contract, showcasing their unique attributes."
      },
      "getnfttrades": {
        "name": "getnfttrades",
        "description": "Get NFT trades for a given contract with the ability to filter by marketplace."
      },
      "getnfttradesbytoken": {
        "name": "getnfttradesbytoken",
        "description": "Get NFT trades for a specific NFT by specifying a contract addres and token ID."
      },
      "getnfttradesbywallet": {
        "name": "getnfttradesbywallet",
        "description": "Get NFT trades for a specific wallet address."
      },
      "getnftbulkcontractmetadata": {
        "name": "getnftbulkcontractmetadata",
        "description": "Retrieve metadata (name, symbol) for up to 25 NFT contracts in one call. Also returns off-chain metadata, floor prices and more where available."
      },
      "getnftmetadata": {
        "name": "getnftmetadata",
        "description": "Fetch metadata for a specific NFT. Includes on-chain metadata as well as off-chain metadata, floor prices, rarity and more where available."
      },
      "getnfttransfers": {
        "name": "getnfttransfers",
        "description": "Get transfers of a specific NFT given a contract address and token ID."
      },
      "getnfttokenidowners": {
        "name": "getnfttokenidowners",
        "description": "List wallets owning a specific NFT, defined by its contract and token ID."
      },
      "getnftcontractsaleprices": {
        "name": "getnftcontractsaleprices",
        "description": "Fetch sale prices for NFTs in a contract over a specified number of days. Returns the last sale, lowest sale, highest sale, average sale and total trades within the specified period."
      },
      "getnftsaleprices": {
        "name": "getnftsaleprices",
        "description": "Fetch sale prices for a specific NFT over a specified number of days. Returns the last sale, lowest sale, highest sale, average sale and total trades within the specified period."
      },
      "getswapsbytokenaddress": {
        "name": "getswapsbytokenaddress",
        "description": "Get all swap transactions (buy/sell) for a specific ERC20 token."
      },
      "gettokenholders": {
        "name": "gettokenholders",
        "description": "Returns total holders for a given token, as well as aggregated stats holder supply, holder trends, holder distribution and holder acquisition metrics."
      },
      "gethistoricaltokenholders": {
        "name": "gethistoricaltokenholders",
        "description": "Track changes in the holder base of an ERC20 token over time. Supports timeseries data for total holders as well as change metrics such as holder distribution and holder acquisition."
      },
      "getmultipletokenprices": {
        "name": "getmultipletokenprices",
        "description": "Retrieve the current or historical prices for multiple ERC20 tokens in the blockchain’s native currency and USD. Accepts an array of up to 100 `tokens`, each requiring `token_address` and optional fields such as `to_block` or `exchange`. Each token returned includes on-chain metadata, as well as off-chain metadata, logos, spam status and more. Additional options to exclude low-liquidity tokens and inactive tokens."
      },
      "gettokenowners": {
        "name": "gettokenowners",
        "description": "Identify the major holders of an ERC20 token and understand their ownership percentages. Includes known entities, exchanges and wallet labels."
      },
      "gettokenmetadata": {
        "name": "gettokenmetadata",
        "description": "Retrieve metadata (name, symbol, decimals, logo) for an ERC20 token contract, as well as off-chain metadata, total supply, categories, logos, spam status and more."
      },
      "gettokentransfers": {
        "name": "gettokentransfers",
        "description": "Get all ERC20 token transfers for a contract, ordered by block number (newest first)."
      },
      "getnativebalancesforaddresses": {
        "name": "getnativebalancesforaddresses",
        "description": "Retrieve native token balances (e.g. ETH) for one or many wallet addresses in single request."
      },
      "getwalletapprovals": {
        "name": "getwalletapprovals",
        "description": "List active ERC20 token approvals for a wallet, showing which contracts have access."
      },
      "getwallethistory": {
        "name": "getwallethistory",
        "description": "Get the complete decoded transaction history for a given wallet. All transactions are parsed, decoded, categorized and summarized into human-readable records."
      },
      "getwallettokenbalancesprice": {
        "name": "getwallettokenbalancesprice",
        "description": "Fetch ERC20 and native token balances for a given wallet address, including their USD prices. Each token returned includes on-chain metadata, as well as off-chain metadata, logos, spam status and more. Additional options to exclude spam tokens, low-liquidity tokens and inactive tokens."
      },
      "getwalletnetworth": {
        "name": "getwalletnetworth",
        "description": "Calculate the total net worth of a wallet in USD, with options to exclude spam tokens for accuracy. Options to query cross-chain using the `chains` parameter, as well as additional options to exclude spam tokens, low-liquidity tokens and inactive tokens."
      },
      "gettransactionverbose": {
        "name": "gettransactionverbose",
        "description": "Get the ABI-decoded contents of a transaction by the given transaction hash."
      },
      "getblock": {
        "name": "getblock",
        "description": "Get the contents of a block given the block hash."
      },
      "getlatestblocknumber": {
        "name": "getlatestblocknumber",
        "description": "Get the most recent block number for a specified blockchain."
      },
      "getdatetoblock": {
        "name": "getdatetoblock",
        "description": "Find the closest block to a specific date on a blockchain."
      },
      "resolveaddress": {
        "name": "resolveaddress",
        "description": "Convert an Ethereum address to its associated ENS domain, if registered."
      },
      "resolveensdomain": {
        "name": "resolveensdomain",
        "description": "Resolve an ENS domain to its associated Ethereum address."
      },
      "gettoperc20tokensbymarketcap": {
        "name": "gettoperc20tokensbymarketcap",
        "description": "List the top ERC20 tokens ranked by market cap. Currently only supports Ethereum. For more flexibility, we recommend to use getFilteredTokens."
      },
      "gettoperc20tokensbypricemovers": {
        "name": "gettoperc20tokensbypricemovers",
        "description": "Get top ERC20 tokens by price movements (winners and losers). Currently only supports Ethereum. For more flexibility, we recommend to use getFilteredTokens or getTopGainersTokens and getTopLosersTokens."
      },
      "gettopnftcollectionsbymarketcap": {
        "name": "gettopnftcollectionsbymarketcap",
        "description": "Get top NFT collections by their current market cap. Currently only supports Ethereum."
      },
      "gethottestnftcollectionsbytradingvolume": {
        "name": "gethottestnftcollectionsbytradingvolume",
        "description": "Get NFT collections by their 24 hour trading volume. Currently only supports Ethereum."
      },
      "gettopcryptocurrenciesbymarketcap": {
        "name": "gettopcryptocurrenciesbymarketcap",
        "description": "Get cryptocurrencies by their market cap."
      },
      "gettopcryptocurrenciesbytradingvolume": {
        "name": "gettopcryptocurrenciesbytradingvolume",
        "description": "Get cryptocurrencies with the highest 24 hour trading volume."
      },
      "getdefisummary": {
        "name": "getdefisummary",
        "description": "Summarize a wallet’s DeFi activity, including total USD value, unclaimed rewards and active protocols."
      },
      "getdefipositionsbyprotocol": {
        "name": "getdefipositionsbyprotocol",
        "description": "Fetch detailed DeFi positions for a given wallet and protocol."
      },
      "getdefipositionssummary": {
        "name": "getdefipositionssummary",
        "description": "Get a concise overview of a wallet’s DeFi positions across all protocols."
      },
      "getwalletactivechains": {
        "name": "getwalletactivechains",
        "description": "List the blockchain networks a wallet is active on, including their first and last seen timestamps. Options to query cross-chain using the `chains` parameter."
      },
      "getwalletstats": {
        "name": "getwalletstats",
        "description": "Retrieve key statistics for a wallet, such as total transaction count and activity."
      },
      "getnftcollectionstats": {
        "name": "getnftcollectionstats",
        "description": "Get summary stats by NFT collection including total NFT transfers, total tokens and total owners."
      },
      "getnftfloorpricebycontract": {
        "name": "getnftfloorpricebycontract",
        "description": "Get floor price for a given collection. Refreshes every 30 minutes."
      },
      "getnfthistoricalfloorpricebycontract": {
        "name": "getnfthistoricalfloorpricebycontract",
        "description": "Get timeseries historical floor prices for a given NFT collection. Refreshes every 30 minutes."
      },
      "getfilteredtokens": {
        "name": "getfilteredtokens",
        "description": "Fetch a list of tokens across multiple chains, filtered and ranked by dynamic on-chain metrics like volume, price change, liquidity, holder composition, and more. Supports advanced filters (e.g. “top 10 whales hold <40%”), category-based inclusion/exclusion (e.g. “exclude stablecoins”), and time-based analytics. Ideal for token discovery, investor research, risk analysis, and portfolio tools. Each token returned includes detailed trading metrics as well as on-chain and off-chain metadata."
      },
      "getrisingliquiditytokens": {
        "name": "getrisingliquiditytokens",
        "description": "Identify tokens experiencing increasing liquidity on their respective blockchains."
      },
      "getbuyingpressuretokens": {
        "name": "getbuyingpressuretokens",
        "description": "List tokens showing strong buying activity based on transaction data."
      },
      "getsolidperformerstokens": {
        "name": "getsolidperformerstokens",
        "description": "Find tokens with consistent performance based on price and volume metrics."
      },
      "getexperiencedbuyerstokens": {
        "name": "getexperiencedbuyerstokens",
        "description": "Identify tokens being purchased by experienced or high-volume traders."
      },
      "getriskybetstokens": {
        "name": "getriskybetstokens",
        "description": "List tokens with high-risk trading activity based on volatility or other factors."
      },
      "getbluechiptokens": {
        "name": "getbluechiptokens",
        "description": "Fetch established, high-value tokens considered stable investments."
      },
      "gettopgainerstokens": {
        "name": "gettopgainerstokens",
        "description": "Identify tokens with the highest price increases over a period."
      },
      "gettoploserstokens": {
        "name": "gettoploserstokens",
        "description": "List tokens with the largest price decreases over a period."
      },
      "getdiscoverytoken": {
        "name": "getdiscoverytoken",
        "description": "Retrieve comprehensive details for a specific token, including metadata and stats. For more detailed tokens stats we recommended to use `getTokenAnalytics` or `getMultipleTokenAnalytics`. For pair stats, we recommend to use `getPairStats`."
      },
      "getwalletprofitabilitysummary": {
        "name": "getwalletprofitabilitysummary",
        "description": "Get a profit and loss summary for a given wallet, over a specified timeframe (`days`)."
      },
      "getwalletprofitability": {
        "name": "getwalletprofitability",
        "description": "Get a detailed profit and loss breakdown by token for a given wallet, over a specified timeframe (`days`). Optionally filter by `token_addresses` for specific tokens."
      },
      "gettopprofitablewalletpertoken": {
        "name": "gettopprofitablewalletpertoken",
        "description": "List the most profitable wallets that have traded a specific ERC20 token."
      },
      "searchtokens": {
        "name": "searchtokens",
        "description": "Search for tokens using their contract address, pair address, name, or symbol. Cross-chain by default with support to filter by `chains`. Additional options to `sortBy` various metrics, such as market cap, liquidity or volume."
      },
      "searchentities": {
        "name": "searchentities",
        "description": "Find entities, organizations, addresses or wallets linked to blockchain addresses. Results are categorised into 3 arrays: entities, addresses, categories."
      },
      "getentity": {
        "name": "getentity",
        "description": "Retrieve details for a specific entity using its unique ID. Returns name, logo, description, external links and related addresses."
      },
      "getentitycategories": {
        "name": "getentitycategories",
        "description": "List available categories for blockchain entities."
      },
      "getentitiesbycategory": {
        "name": "getentitiesbycategory",
        "description": "Fetch entities belonging to a specific category. Each entity returns name, logo, description, external links, total addresses and more."
      },
      "getpaircandlesticks": {
        "name": "getpaircandlesticks",
        "description": "Retrieve OHLCV (Open, High, Low, Close, Volume) candlestick data for a token pair."
      },
      "getpairstats": {
        "name": "getpairstats",
        "description": "Access key statistics for a token pair, such as price, buyers, sellers, liquidity, volume and more."
      },
      "gettokenpairs": {
        "name": "gettokenpairs",
        "description": "List supported trading pairs for a specific ERC20 token. Each pair returned includes price, liquidity, volume and more."
      },
      "getswapsbywalletaddress": {
        "name": "getswapsbywalletaddress",
        "description": "List all swap transactions (buy/sell) for a specific wallet. Optionally filter by `tokenAddress` for specific token swaps."
      },
      "getswapsbypairaddress": {
        "name": "getswapsbypairaddress",
        "description": "Fetch swap transactions (buy, sell, add/remove liquidity) for a specific token pair."
      },
      "getsnipersbypairaddress": {
        "name": "getsnipersbypairaddress",
        "description": "Identify sniper wallets that bought a token within a specified timeframe (`blocksAfterCreation`). Each wallet returned includes detailed information about how much was bought, sold as well as PnL stats and more."
      },
      "getvolumestatsbychain": {
        "name": "getvolumestatsbychain",
        "description": "Retrieve volume, active wallets and transaction stats for a blockchain over various time periods. Returns data for all chains in a single request."
      },
      "getvolumestatsbycategory": {
        "name": "getvolumestatsbycategory",
        "description": "Access volume, buyers, sellers and transaction stats for a blockchain, grouped by category. Filter by `chain`."
      },
      "gettimeseriesvolume": {
        "name": "gettimeseriesvolume",
        "description": "Fetch timeseries volume, liquidity and FDV for a specific blockchain."
      },
      "gettimeseriesvolumebycategory": {
        "name": "gettimeseriesvolumebycategory",
        "description": "Fetch timeseries buy volume, sell volume, liquidity and FDV for a specific category. Optionally filter by `chain`."
      },
      "gettimeseriestokenanalytics": {
        "name": "gettimeseriestokenanalytics",
        "description": "Fetch timeseries buy volume, sell volume, liquidity and FDV for multiple tokens. Accepts an array of up to 200 `tokens`, each requiring `chain` and `tokenAddress`."
      },
      "gettrendingtokensv2": {
        "name": "gettrendingtokensv2",
        "description": "List top tokens trending based on trading activity, volume, liquidity and more. By default this returns cross-chain results, including Solana. Optionally filter by `chain` for single chain results."
      },
      "getmultipletokenanalytics": {
        "name": "getmultipletokenanalytics",
        "description": "Fetch analytics for multiple tokens, including buy volume, sell volume, buyers, sellers, transactions, liquidity and FDV trends over time. Accepts an array of up to 200 `tokens`, each requiring `chain` and `tokenAddress`."
      }
    }
  },
  "strateegia-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/strateegia-mcp-server.json",
    "validated": true,
    "tools": {
      "list-projects": {
        "name": "list-projects",
        "description": "List projects from Strateegia API"
      }
    }
  },
  "remote-bridge": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/remote-bridge.json"
  },
  "ygg-torrent-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ygg-torrent-mcp.json"
  },
  "ntlk-mcp-002": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ntlk-mcp-002.json"
  },
  "mcp-server-mas-sequential-thinking": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-mas-sequential-thinking.json"
  },
  "mcp-openapi-proxy": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-openapi-proxy.json"
  },
  "deepseek-reasoner": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/deepseek-reasoner.json"
  },
  "gemini-collaboration": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/gemini-collaboration.json"
  },
  "toast-notifications": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/toast-notifications.json"
  },
  "pet-adoption-scheduler": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/pet-adoption-scheduler.json"
  },
  "metersphere-api-testing": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/metersphere-api-testing.json"
  },
  "@wenbopan/things-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/wenbopan-things-mcp.json",
    "validated": true,
    "tools": {
      "add_todo": {
        "name": "add_todo",
        "description": "Create a new to-do item in Things.app. Add notes, tags, checklist items, and assign to projects or areas."
      },
      "add_project": {
        "name": "add_project",
        "description": "Create a new project in Things.app. Add notes, tags, assign to areas, and pre-populate with initial to-dos."
      },
      "update_todo": {
        "name": "update_todo",
        "description": "Update an existing to-do item in Things.app. Modify title, notes, scheduling, tags, checklist items, project/area assignment, and completion status."
      },
      "update_project": {
        "name": "update_project",
        "description": "Update an existing project in Things.app. Modify title, notes, scheduling, tags, area assignment, and completion status."
      },
      "things_summary": {
        "name": "things_summary",
        "description": "Generate a summary of your Things database with filtering options. Returns formatted Markdown or structured JSON data for tasks, projects, areas, and tags."
      },
      "export_json": {
        "name": "export_json",
        "description": "Export complete Things database as structured JSON for debugging, backup, or data processing."
      }
    }
  },
  "interactive-feedback": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/interactive-feedback.json"
  },
  "websocket-enhancer": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/websocket-enhancer.json"
  },
  "agent-construct": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/agent-construct.json"
  },
  "openai-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/openai-mcp.json"
  },
  "elfproxy-dynamic-ip": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/elfproxy-dynamic-ip.json"
  },
  "a2a-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/a2a-mcp-server.json"
  },
  "anki-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/anki-mcp.json"
  },
  "google-forms": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/google-forms.json"
  },
  "agentrpc": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/agentrpc.json",
    "validated": false,
    "tools": {}
  },
  "joomla-articles": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/joomla-articles.json"
  },
  "atla": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/atla.json"
  },
  "things3": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/things3.json"
  },
  "claude-todo-emulator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/claude-todo-emulator.json"
  },
  "mcp-sleep": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-sleep.json"
  },
  "sound-effects": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sound-effects.json"
  },
  "server-wp-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/server-wp-mcp.json",
    "validated": false,
    "tools": {}
  },
  "genesis-world": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/genesis-world.json"
  },
  "spotify": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/spotify.json"
  },
  "software-planning": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/software-planning.json"
  },
  "mozisu-character-counter": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mozisu-character-counter.json"
  },
  "traits-matcher": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/traits-matcher.json"
  },
  "hangul-word-processor": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/hangul-word-processor.json"
  },
  "outsource": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/outsource.json"
  },
  "json-schema-manager": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/json-schema-manager.json"
  },
  "ifc-building-information-modeling": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ifc-building-information-modeling.json"
  },
  "mistral-ocr": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mistral-ocr.json"
  },
  "encoding": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/encoding.json"
  },
  "strapi-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/strapi-mcp.json",
    "validated": true,
    "tools": {
      "list_content_types": {
        "name": "list_content_types",
        "description": "List all available content types in Strapi"
      },
      "get_entries": {
        "name": "get_entries",
        "description": "Get entries for a specific content type with optional filtering, pagination, sorting, and population of relations"
      },
      "get_entry": {
        "name": "get_entry",
        "description": "Get a specific entry by ID"
      },
      "create_entry": {
        "name": "create_entry",
        "description": "Create a new entry for a content type"
      },
      "update_entry": {
        "name": "update_entry",
        "description": "Update an existing entry"
      },
      "delete_entry": {
        "name": "delete_entry",
        "description": "Deletes a specific entry."
      },
      "upload_media": {
        "name": "upload_media",
        "description": "Upload a media file to the Strapi Media Library."
      },
      "get_content_type_schema": {
        "name": "get_content_type_schema",
        "description": "Get the schema (fields, types, relations) for a specific content type."
      },
      "connect_relation": {
        "name": "connect_relation",
        "description": "Connects related entries to a relation field."
      },
      "disconnect_relation": {
        "name": "disconnect_relation",
        "description": "Disconnects related entries from a relation field."
      },
      "create_content_type": {
        "name": "create_content_type",
        "description": "Creates a new content type (Admin privileges required)."
      },
      "update_content_type": {
        "name": "update_content_type",
        "description": "Updates a content type attributes (Admin privileges required)."
      },
      "delete_content_type": {
        "name": "delete_content_type",
        "description": "Deletes a content type (Admin privileges required)."
      },
      "list_components": {
        "name": "list_components",
        "description": "List all available components in Strapi"
      },
      "get_component_schema": {
        "name": "get_component_schema",
        "description": "Get the schema for a specific component"
      },
      "create_component": {
        "name": "create_component",
        "description": "Create a new component"
      },
      "update_component": {
        "name": "update_component",
        "description": "Update an existing component"
      },
      "publish_entry": {
        "name": "publish_entry",
        "description": "Publishes a specific entry."
      },
      "unpublish_entry": {
        "name": "unpublish_entry",
        "description": "Unpublishes a specific entry."
      }
    }
  },
  "mcpizza-(domino's-pizza)": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcpizza--domino-s-pizza.json"
  },
  "nefino": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/nefino.json"
  },
  "crewai-enterprise": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/crewai-enterprise.json"
  },
  "sherlock-mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/sherlock-mcp.json"
  },
  "grpc-bridge": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/grpc-bridge.json"
  },
  "holaspirit-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/holaspirit-mcp-server.json",
    "validated": true,
    "tools": {
      "holaspirit_list_tasks": {
        "name": "holaspirit_list_tasks",
        "description": "List all tasks in the organization"
      },
      "holaspirit_list_metrics": {
        "name": "holaspirit_list_metrics",
        "description": "List all metrics in the organization"
      },
      "holaspirit_list_circles": {
        "name": "holaspirit_list_circles",
        "description": "List all circles in the organization"
      },
      "holaspirit_get_circle": {
        "name": "holaspirit_get_circle",
        "description": "Get details of a specific circle"
      },
      "holaspirit_list_roles": {
        "name": "holaspirit_list_roles",
        "description": "List all roles in the organization"
      },
      "holaspirit_get_role": {
        "name": "holaspirit_get_role",
        "description": "Get details of a specific role"
      },
      "holaspirit_list_domains": {
        "name": "holaspirit_list_domains",
        "description": "List all domains in the organization"
      },
      "holaspirit_list_policies": {
        "name": "holaspirit_list_policies",
        "description": "List all policies in the organization"
      },
      "holaspirit_list_meetings": {
        "name": "holaspirit_list_meetings",
        "description": "List all meetings in the organization"
      },
      "holaspirit_get_meeting": {
        "name": "holaspirit_get_meeting",
        "description": "Get details of a specific meeting"
      },
      "holaspirit_get_member_feed": {
        "name": "holaspirit_get_member_feed",
        "description": "Get member feed"
      },
      "holaspirit_get_tensions": {
        "name": "holaspirit_get_tensions",
        "description": "Get tensions for a meeting or meetings"
      },
      "holaspirit_search_member": {
        "name": "holaspirit_search_member",
        "description": "Search for a member by email"
      }
    }
  },
  "cleanuri-url-shortener": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/cleanuri-url-shortener.json"
  },
  "@unctad-ai/eregulations-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/unctad-ai-eregulations-mcp-server.json",
    "validated": true,
    "tools": {
      "listProcedures": {
        "name": "listProcedures",
        "description": ""
      },
      "getProcedureDetails": {
        "name": "getProcedureDetails",
        "description": ""
      },
      "getProcedureStep": {
        "name": "getProcedureStep",
        "description": ""
      },
      "searchProcedures": {
        "name": "searchProcedures",
        "description": ""
      }
    }
  },
  "@mtane0412/perspective-mcp-server": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mtane0412-perspective-mcp-server.json",
    "validated": true,
    "tools": {
      "analyze_text": {
        "name": "analyze_text",
        "description": "テキストを分析し、有害性などのスコアを返します"
      },
      "suggest_score": {
        "name": "suggest_score",
        "description": "テキストに対する新しいスコアを提案します"
      }
    }
  },
  "@tacticlaunch/mcp-linear": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/tacticlaunch-mcp-linear.json",
    "validated": true,
    "tools": {
      "linear_getViewer": {
        "name": "linear_getViewer",
        "description": "Get information about the currently authenticated user"
      },
      "linear_getOrganization": {
        "name": "linear_getOrganization",
        "description": "Get information about the current Linear organization"
      },
      "linear_getUsers": {
        "name": "linear_getUsers",
        "description": "Get a list of users in the Linear organization"
      },
      "linear_getLabels": {
        "name": "linear_getLabels",
        "description": "Get a list of issue labels from Linear"
      },
      "linear_getTeams": {
        "name": "linear_getTeams",
        "description": "Get a list of teams from Linear"
      },
      "linear_getWorkflowStates": {
        "name": "linear_getWorkflowStates",
        "description": "Get workflow states for a team"
      },
      "linear_getProjects": {
        "name": "linear_getProjects",
        "description": "Get a list of projects from Linear"
      },
      "linear_createProject": {
        "name": "linear_createProject",
        "description": "Create a new project in Linear"
      },
      "linear_updateProject": {
        "name": "linear_updateProject",
        "description": "Update an existing project in Linear"
      },
      "linear_addIssueToProject": {
        "name": "linear_addIssueToProject",
        "description": "Add an existing issue to a project"
      },
      "linear_getProjectIssues": {
        "name": "linear_getProjectIssues",
        "description": "Get all issues associated with a project"
      },
      "linear_getCycles": {
        "name": "linear_getCycles",
        "description": "Get a list of all cycles"
      },
      "linear_getActiveCycle": {
        "name": "linear_getActiveCycle",
        "description": "Get the currently active cycle for a team"
      },
      "linear_addIssueToCycle": {
        "name": "linear_addIssueToCycle",
        "description": "Add an issue to a cycle"
      },
      "linear_getIssues": {
        "name": "linear_getIssues",
        "description": "Get a list of recent issues from Linear"
      },
      "linear_getIssueById": {
        "name": "linear_getIssueById",
        "description": "Get a specific issue by ID or identifier (e.g., ABC-123)"
      },
      "linear_searchIssues": {
        "name": "linear_searchIssues",
        "description": "Search for issues with various filters"
      },
      "linear_createIssue": {
        "name": "linear_createIssue",
        "description": "Create a new issue in Linear"
      },
      "linear_updateIssue": {
        "name": "linear_updateIssue",
        "description": "Update an existing issue in Linear"
      },
      "linear_createComment": {
        "name": "linear_createComment",
        "description": "Add a comment to an issue in Linear"
      },
      "linear_addIssueLabel": {
        "name": "linear_addIssueLabel",
        "description": "Add a label to an issue in Linear"
      },
      "linear_removeIssueLabel": {
        "name": "linear_removeIssueLabel",
        "description": "Remove a label from an issue in Linear"
      },
      "linear_assignIssue": {
        "name": "linear_assignIssue",
        "description": "Assign an issue to a user"
      },
      "linear_subscribeToIssue": {
        "name": "linear_subscribeToIssue",
        "description": "Subscribe to issue updates"
      },
      "linear_convertIssueToSubtask": {
        "name": "linear_convertIssueToSubtask",
        "description": "Convert an issue to a subtask"
      },
      "linear_createIssueRelation": {
        "name": "linear_createIssueRelation",
        "description": "Create relations between issues (blocks, is blocked by, etc.)"
      },
      "linear_archiveIssue": {
        "name": "linear_archiveIssue",
        "description": "Archive an issue"
      },
      "linear_setIssuePriority": {
        "name": "linear_setIssuePriority",
        "description": "Set the priority of an issue"
      },
      "linear_transferIssue": {
        "name": "linear_transferIssue",
        "description": "Transfer an issue to another team"
      },
      "linear_duplicateIssue": {
        "name": "linear_duplicateIssue",
        "description": "Duplicate an issue"
      },
      "linear_getIssueHistory": {
        "name": "linear_getIssueHistory",
        "description": "Get the history of changes made to an issue"
      },
      "linear_getComments": {
        "name": "linear_getComments",
        "description": "Get all comments for an issue"
      }
    }
  },
  "claude-lmstudio-bridge": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/claude-lmstudio-bridge.json"
  },
  "time": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/time.json"
  },
  "mcp-datetime": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-datetime.json"
  },
  "needle": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/needle.json"
  },
  "xingchen-workflow-orchestration": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/xingchen-workflow-orchestration.json"
  },
  "ms-word": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/ms-word.json"
  },
  "root-signals-evaluators": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/root-signals-evaluators.json"
  },
  "internet-speed-test": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/internet-speed-test.json"
  },
  "image-toolkit": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/image-toolkit.json"
  },
  "south-asia": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/south-asia.json"
  },
  "@delorenj/mcp-server-ticketmaster": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/delorenj-mcp-server-ticketmaster.json",
    "validated": true,
    "tools": {
      "search_ticketmaster": {
        "name": "search_ticketmaster",
        "description": "Search for events, venues, or attractions on Ticketmaster"
      }
    }
  },
  "mermaid-diagram-generator": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mermaid-diagram-generator.json"
  },
  "open-deep-research": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/open-deep-research.json"
  },
  "slate": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/slate.json"
  }
}